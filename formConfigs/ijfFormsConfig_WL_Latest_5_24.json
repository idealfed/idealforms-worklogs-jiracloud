{"formSets":[{"id":"13","name":"IFT Worklogs","projectName":"CIO Dashboard","projectId":"CD","settings":"\"[{\\\"name\\\":\\\"decorator\\\",\\\"value\\\":\\\"general\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"anonUsername\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"anonPassword\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"}]\"","snippets":[{"name":"beforeRenderMyWorklogGrid","snippet":"\"beforeRenderMyWorklogGrid=function(c,inFormKey,item, inField, inContainer)\\n{\\n\\n/* setup the totals */\\n    var cols = c.getColumns();\\n    cols[1][\\\"summaryRenderer\\\"]=function(value, summaryData, dataIndex) {\\n                           return \\\"<b>Total Hours:</b>\\\";  \\n    };\\n\\nvar myCols = c.getColumns();\\nfor(var i=2;i<myCols.length;i++)\\n{\\n\\n    cols[i][\\\"summaryRenderer\\\"]=function(value, summaryData, dataIndex) {\\n                           return Ext.util.Format.number(value,\\\"0,000.00\\\");\\n    };\\n    cols[i][\\\"summaryType\\\"]=\\\"sum\\\";\\n\\n    cols[i][\\\"renderer\\\"]=function(value, d1, d2, d3, d4) {\\n\\n                          \\n\\n                           if((d1.column.text.indexOf(\\\"Sa\\\")>-1) || (d1.column.text.indexOf(\\\"Su\\\")>-1))\\n                                   d1.style=\\\"background:#ffe0f0;border-right:solid #c2c2c2 1px\\\";\\n                          else  if((d1.column.text.indexOf(\\\"Mo\\\")>-1) || (d1.column.text.indexOf(\\\"Tu\\\")>-1)|| (d1.column.text.indexOf(\\\"We\\\")>-1)|| (d1.column.text.indexOf(\\\"Th\\\")>-1)|| (d1.column.text.indexOf(\\\"Fr\\\")>-1))\\n                                    d1.style=\\\"border-left:solid #c2c2c2 1px\\\";\\n\\n                       var v = value;\\n                       if(d1.column.text.indexOf(\\\"Label\\\")<0)\\n                       {\\n                            v =  Ext.util.Format.number(value,\\\"0,000.00\\\");\\n                            if(v==\\\"0.00\\\") v=\\\"\\\";\\n                       }\\n                           return v; \\n     };\\n\\n}\\n\\nc.selModel=\\\"cellmodel\\\";\\n\\nc.collapsible=false;\\nfor(var i=0;i<c.header.items.length;i++) {\\n     c.header.items[i]=null;\\n};\\n//c.height = window.innerHeight-200; //310; //240 200;\\n\\n\\n/* instanciate pop framework*/\\n     //c.addListener('itemmouseenter',ijf.snippets.popFramework.onRootHover);\\n     //c.addListener('itemmouseleave',ijf.snippets.popFramework.onRootHoverLeave);\\n     c.addListener('cellclick',ijf.snippets.popFramework.onRootClickViaHover);\\n     c.addListener('celldblclick',ijf.snippets.popFramework.onRootDbClick);\\n    \\n} \""},{"name":"onMovePreviousPeriod","snippet":"\"onMovePreviousPeriod=function()\\n{\\n\\n   switch(ijf.session.periodMode)\\n   {\\n       case \\\"week\\\":\\n\\n           ijf.session.fromDate= moment(ijf.session.fromDate).subtract('week',1);\\n           ijf.session.toDate= moment(ijf.session.toDate).subtract('week',1);\\n\\n         break;\\n       case \\\"month\\\":\\n\\n           ijf.session.fromDate.startOf('month').subtract('month',1);  \\n           ijf.session.toDate =  moment(ijf.session.fromDate).endOf('month');\\n\\n         break;\\n       case \\\"4 weeks\\\":\\n\\n           ijf.session.fromDate= moment(ijf.session.fromDate).subtract('day',7);\\n           ijf.session.toDate= moment(ijf.session.toDate).subtract('day',7);\\n\\n\\n         break;\\n       default:\\n          return;\\n          break;\\n\\n   }\\nijf.snippets.closePops();\\nijfUtils.showProgress();\\nvar resetForm = function()\\n{\\n\\nijf.main.resetForm();\\nijfUtils.hideProgress();\\n}\\n     window.setTimeout(resetForm,50);\\n\\n}\""},{"name":"onChangeMode","snippet":"\"onChangeMode=function(inType)\\n{\\n var n= inType.target.value\\n\\n     ijf.session.periodMode=n;\\n     ijf.session.myWorkInitialized=false;\\nijf.snippets.closePops();\\nijfUtils.showProgress();\\nvar resetForm = function()\\n{\\n\\nijf.main.resetForm();\\nijfUtils.hideProgress();\\n}\\n     window.setTimeout(resetForm,50);\\n}\\n\""},{"name":"getDateRange","snippet":"\"getDateRange=function()\\n{\\n\\n   return ijf.session.fromDate.format(\\\"dddd MM/DD/YYYY\\\") + \\\" to \\\" + ijf.session.toDate.format(\\\"dddd MM/DD/YYYY\\\");\\n}\""},{"name":"getAppBarTitle","snippet":"\"getAppBarTitle=function()\\n{\\n    return ijf.main.currentUser.displayName;\\n}\""},{"name":"closePops","snippet":"\"closePops=function()\\n{\\n     ijf.snippets.popFramework.closeAllPops();\\n}\""},{"name":"onClickWorklogCell","snippet":"\"onClickWorklogCell= function(thisObj, td, cellIndex, record, tr, rowIndex, e, eOpts ) \\n{\\n\\n   var gCols = thisObj.grid.getColumns();\\n   if(gCols[0].text==\\\"Key\\\") return;  //bail if wrong subgrid\\n\\n   var rData = thisObj.grid.getStore().getData().items[rowIndex];\\n\\n   var wlKey = rData.data.iid + \\\"_\\\" + gCols[cellIndex].text;\\n\\n   var myData = ijf.session.myWorklogData[wlKey];\\n\\n   if(myData)\\n   {\\n      console.log(\\\"Have data for: \\\" + wlKey);\\n   }\\n   else\\n   {\\n     console.log(\\\"No data for key: \\\" + wlKey);\\n   }\\n}\""},{"name":"onMoveNextPeriod","snippet":"\"onMoveNextPeriod=function()\\n{\\n\\n   switch(ijf.session.periodMode)\\n   {\\n       case \\\"week\\\":\\n\\n           ijf.session.fromDate= moment(ijf.session.fromDate).add('week',1);\\n           ijf.session.toDate= moment(ijf.session.toDate).add('week',1);\\n\\n\\n         break;\\n       case \\\"month\\\":\\n\\n           ijf.session.fromDate.startOf('month').add('month',1);  \\n           ijf.session.toDate =  moment(ijf.session.fromDate).endOf('month');\\n\\n         break;\\n       case \\\"4 weeks\\\":\\n\\n           ijf.session.fromDate= moment(ijf.session.fromDate).add('day',7);\\n           ijf.session.toDate= moment(ijf.session.toDate).add('day',7);\\n\\n\\n         break;\\n\\n       default:\\n          return;\\n          break;\\n\\n   }\\nijf.snippets.closePops();\\nijfUtils.showProgress();\\nvar resetForm = function()\\n{\\n\\nijf.main.resetForm();\\nijfUtils.hideProgress();\\n}\\n     window.setTimeout(resetForm,50);\\n}\""},{"name":"beforeLoadSetSystem","snippet":"\"beforeLoadSetSystem= function()\\n{\\n\\n  ijf.main.baseSys = document.location.ancestorOrigins[0]; // \\\"https://idealfed.atlassian.net\\\";\\n\\n\\n\\n\\n}\""},{"name":"beforeRenderGrid","snippet":"\"beforeRenderGrid = function(f,c)\\n{\\nvar t = f.items.items[0];\\n\\n//attempt to change layout....\\n\\n//t.setHeight(null);\\n//f.setHeight(Ext.getBody().getViewSize().height - 170);\\n\\n//t.height = window.innerHeight-200; //310; //240 200;\\n\\nt.getView().setSelectionModel(\\\"cellmodel\\\");\\nt.addListener(\\\"render\\\", function(grid) {\\n            var view=grid.getView();\\n            view.tip = Ext.create('Ext.tip.ToolTip', {\\n                target: grid.el,\\n                shadow: true,\\n                // this gets css query to identify the individual cells\\n                delegate: view.cellSelector,\\n                listeners: {\\n                    beforeshow: function(tip) {\\n                        var column = view.getGridColumns()[tip.triggerElement.cellIndex];\\n                        var record = view.getRecord(tip.triggerElement.parentNode);\\n                        if(column.dataIndex==\\\"description\\\")\\n                        {\\n                              tip.update(record.get(\\\"reporter\\\"));\\n                        }\\n                        else\\n                        {\\n                             return false;\\n                        }\\n                    }\\n                }\\n            });\\n        });\\n\\nt.addListener('cellclick',ijf.snippets.popFrameworkWlr.onRootClickViaHover);\\n\\n} \""},{"name":"onChangeTimeframe","snippet":"\"onChangeTimeframe = function(f, n, o) {\\n\\n    var fromDate = null;\\n    var toDate = null;\\n\\n    var tf = n;\\n\\n    if (!n)\\n        return;\\n\\n    ijf.session.filterMode = \\\"timeframe\\\";\\n\\n    var timeFrameName = \\\"Current Week\\\";\\n\\n    switch (n) {\\n    case \\\"0\\\":\\n        //today\\n\\n        var fromDate = moment(new Date());\\n        var toDate = moment(new Date());\\n        timeFrameName = \\\"0\\\";\\n\\n        break;\\n    case \\\"1\\\":\\n        //current week\\n\\n        var fromDate = moment().startOf('isoWeek');\\n        var toDate = moment().endOf('isoWeek');\\n        //moment(new Date());\\n        timeFrameName = \\\"1\\\";\\n\\n        break;\\n    case \\\"2\\\":\\n        //last week\\n\\n        var fromDate = moment(moment().subtract('week', 1)).startOf('isoWeek');\\n        var toDate = moment(moment().subtract('week', 1)).endOf('isoWeek');\\n        timeFrameName = \\\"2\\\";\\n\\n        break;\\n    case \\\"3\\\":\\n        //current Month\\n\\n        var fromDate = moment().startOf('month');\\n        var toDate = moment(new Date());\\n        timeFrameName = \\\"3\\\";\\n\\n        break;\\n    case \\\"4\\\":\\n        //last Month\\n\\n        var fromDate = moment(moment().subtract('month', 1)).startOf('month');\\n        var toDate = moment(moment().subtract('month', 1)).endOf('month');\\n        timeFrameName = \\\"4\\\";\\n\\n        break;\\n    case \\\"5\\\":\\n        //current Year\\n\\n        var fromDate = moment().startOf('year');\\n        var toDate = moment(new Date());\\n        timeFrameName = \\\"5\\\";\\n\\n        break;\\n    case \\\"6\\\":\\n        //last Year\\n\\n        var fromDate = moment(moment().subtract('year', 1)).startOf('year');\\n        var toDate = moment(moment().subtract('year', 1)).endOf('year');\\n        timeFrameName = \\\"6\\\";\\n\\n        break;\\n    case \\\"7\\\":\\n        //last 7 days\\n\\n        var fromDate = moment(new Date()).subtract('days', 7);\\n        var toDate = moment(new Date());\\n        timeFrameName = \\\"7\\\";\\n\\n        break;\\n    case \\\"8\\\":\\n        //all\\n\\n        var fromDate = moment(moment().subtract('year', 10)).startOf('year');\\n        var toDate = moment(new Date());\\n        timeFrameName = \\\"8\\\";\\n\\n        break;\\n    default:\\n        return;\\n        break;\\n\\n    }\\n\\n    //clear dates\\n    var fromDateCtl = ijf.main.controlSet[\\\"ijfContent_fld_4,3\\\"].control.items.items[0];\\n    var toDateCtl = ijf.main.controlSet[\\\"ijfContent_fld_4,4\\\"].control.items.items[0];\\n    fromDateCtl.suspendEvents();\\n    fromDateCtl.setValue(new Date(fromDate));\\n    fromDateCtl.resumeEvents();\\n    toDateCtl.suspendEvents();\\n    toDateCtl.setValue(new Date(toDate));\\n    toDateCtl.resumeEvents();\\n\\n    ijf.session[\\\"ijfContent_fld_4,3\\\"] = fromDate.format('YYYY-M-D');\\n    ijf.session[\\\"ijfContent_fld_4,4\\\"] = toDate.format('YYYY-M-D');\\n\\n    ijf.session.wlFromDate = fromDate.format('YYYY-M-D');\\n    ijf.session.wlToDate = toDate.format('YYYY-M-D');\\n\\n    //run filter\\n    var curJql = ijf.main.controlSet[\\\"ijfContent_fld_6,2\\\"].field.dataSource\\n    curJql = curJql.replace(/and worklogDate.*?=.*?\\\\d\\\\d\\\\d\\\\d-\\\\d.*?-\\\\d*/ig, \\\"\\\");\\n\\n    //alter query to add clause unless it's the ALL call\\n\\n    var qParts = curJql.split(/order by/i);\\n    if (qParts.length > 1)\\n        curJql = qParts[0].trim() + \\\" and worklogDate >= \\\" + fromDate.format('YYYY-M-D') + \\\" and worklogDate <= \\\" + toDate.format('YYYY-M-D') + \\\" order by \\\" + qParts[1].trim();\\n    else\\n        curJql = curJql.trim() + \\\" and worklogDate >= \\\" + fromDate.format('YYYY-M-D') + \\\" and worklogDate <= \\\" + toDate.format('YYYY-M-D');\\n\\n\\n    ijf.main.controlSet[\\\"ijfContent_fld_6,2\\\"].field.dataSource = curJql;\\n\\n    //history.replaceState({}, 'WLR', '/plugins/servlet/iforms?decorator=general&formId=Worklog%20Report&jql=' + curJql + '&timeframe=' + timeFrameName);\\n    //history.replaceState({}, 'WLR', '/plugins/servlet/iforms?decorator=general&formId=Worklog%20Report&timeframe=' + timeFrameName);\\n    //with radio, cannot just reset the form because the group needs to complete...set timeout for +200ms\\n    \\n    var resetForm = function() {\\n        ijf.main.renderForm(\\\"ijfContent\\\", \\\"IFT Worklog Report\\\", false, ijf.currentItem);\\n        ijfUtils.hideProgress();\\n    };\\n    ijfUtils.showProgress();\\n    window.setTimeout(resetForm, 10);\\n}\\n\""},{"name":"afterRenderMyWorklogsGrid","snippet":"\"afterRenderMyWorklogsGrid= function(f,c)\\n{\\n\\n     f.setHeight(window.innerHeight-240);\\n\\n}\""},{"name":"setWorklogDateFilter","snippet":"\"setWorklogDateFilter=function(f,n,o)\\n{\\n\\n\\n\\n  ijf.session.filterMode = \\\"custom\\\";\\n \\n\\n\\n  var timeFrame = ijf.main.controlSet[\\\"ijfContent_fld_4,2\\\"].control.items.items[0];\\n  timeFrame.suspendEvents(true);\\n  timeFrame.setValue(\\\"\\\");\\nijf.session[\\\"ijfContent_fld_4,2\\\"]=null;\\ntimeFrame.resumeEvents();\\n\\n\\nvar fromDate = ijf.main.controlSet[\\\"ijfContent_fld_4,3\\\"].control.items.items[0].getValue();\\nvar toDate = ijf.main.controlSet[\\\"ijfContent_fld_4,4\\\"].control.items.items[0].getValue();\\n\\nif(toDate==null)\\n{\\n    toDate = moment(new Date()).format('YYYY-M-D');\\n}\\nelse\\n{\\n   toDate =moment(toDate).format('YYYY-M-D');\\n}\\n\\nif(fromDate==null)\\n{\\n    fromDate = '2000-1-1';\\n}\\nelse\\n{\\n   fromDate =moment(fromDate ).format('YYYY-M-D');\\n}\\n\\n//set dates\\nvar fromDateCtl = ijf.main.controlSet[\\\"ijfContent_fld_4,3\\\"].control.items.items[0];\\nvar toDateCtl = ijf.main.controlSet[\\\"ijfContent_fld_4,4\\\"].control.items.items[0];\\nfromDateCtl.disable(true);\\nfromDateCtl.setValue(new Date(fromDate));\\nfromDateCtl.enable();\\ntoDateCtl .disable(true);\\ntoDateCtl .setValue(new Date(toDate));\\ntoDateCtl .enable(true);\\nijf.session.wlFromDate = fromDate;\\nijf.session.wlToDate = toDate;\\n\\nvar curJql =  ijf.snippets.JqlFramework.getJQL();\\n\\ncurJql = curJql.replace(/and worklogDate.*?=.*?\\\\d\\\\d\\\\d\\\\d-\\\\d.*?-\\\\d*/ig,\\\"\\\");\\n\\ncurJql = curJql.trim();;\\n\\n                //alter query to add clause\\n                var qParts= curJql.split(/order by/i);\\n                if(qParts.length>1)\\n                     curJql = qParts[0].trim() + \\\" and worklogDate >= \\\"+ fromDate+\\\" and worklogDate <= \\\"+toDate + \\\" order by \\\" +qParts[1].trim();\\n                else\\n                     curJql = curJql +  \\\" and worklogDate >= \\\"+ fromDate+\\\" and worklogDate <= \\\"+toDate;\\n\\nijf.main.controlSet[\\\"ijfContent_fld_6,2\\\"].field.dataSource=curJql;\\nijf.snippets.JqlFramework.setJQL(curJql);\\n\\n\\n   //with radio, cannot just reset the form because the group needs to complete...set timeout for +200ms\\n   var resetForm = function(){   ijf.main.renderForm(\\\"ijfContent\\\", \\\"IFT Worklog Report\\\", false, ijf.currentItem);};\\n   window.setTimeout(resetForm,100);\\n   \\n\\n   return true;\\n\\n}\""},{"name":"JqlFramework","snippet":"\"//3/9,3/10,3/11,3/16,3/17,3/21,3/22,3/23,3/24,3/30,4/7,4/8,4/10,4/12,4/13/2021\\n//Dayne Engler\\n//should set dropdowns to null if they are not in big string anymore.\\n//when project is set need to call an update to set the other 2 stores. -DONE\\nJqlFramework = {\\n    //jql tool\\n    showingAdvanced: null,\\n    projectJQL: {},\\n    typeJQL: {},\\n    statusJQL: {},\\n    assigneeJQL: {},\\n    basicTextJQL: {\\n        value: ''\\n    },\\n    comboObjRef: [],\\n    allowUpdate: true,\\n    isServerRuntime: function() {\\n        // if(!window.hasOwnProperty(\\\"g_IftRuntime\\\")) return true;\\n\\n        if (window.g_IftRuntime == undefined)\\n            return true;\\n\\n        if (window.g_IftRuntime != \\\"cloud\\\")\\n            return true;\\n        return false;\\n    },\\n    buildBasicJQL: function() {\\n\\n        //var mainDiv = Ext.getElementById(\\\"JQLTMainDiv2\\\");\\n        //update one div with 6 div tags\\n        //var divData = \\\"<table><tr><td id='JQLTSubDiv1' style='width:230;'></td><td id='JQLTSubDiv2' style='width:230;'></td><td id='JQLTSubDiv3' style='width:230;'></td><td id='JQLTSubDiv4' style='width:230;'></td><td id='JQLTSubDiv5' style='width:500;'></td></tr></table>\\\";\\n        //mainDiv.innerHTML = divData;\\n\\n        var projectStore = Ext.create('Ext.data.Store', {\\n            id: \\\"projectStore\\\",\\n            fields: ['id', 'name'],\\n            autoLoad: true,\\n            proxy: {\\n                type: 'ajax',\\n                url: g_root + '/rest/api/2/project',\\n                reader: {\\n                    type: 'json'\\n                }\\n            }\\n        });\\n        var cListener = {\\n            afterrender: function(f, n, o) {},\\n            select: function(f, n, o) {\\n\\n                ijf.snippets.JqlFramework.projectJQL = n.data;\\n\\n                var newURL = g_root + '/rest/api/2/project/' + n.id;\\n                iTypeStore.getProxy().setUrl(newURL);\\n                iTypeStore.getProxy().setReader({\\n                    type: 'json',\\n                    root: 'issueTypes',\\n                    transform: {\\n                        fn: function(data) {\\n                            var r = data.issueTypes;\\n                            return r;\\n                        },\\n                        scope: this\\n                    }\\n                });\\n                iTypeStore.load();\\n                //////////////////////////////////\\n                var newStatusURL = g_root + '/rest/api/2/project/' + n.id + '/statuses'\\n                statusStore.getProxy().setUrl(newStatusURL);\\n                statusStore.getProxy().setReader({\\n                    type: 'json',\\n                    transform: {\\n                        fn: function(data) {\\n                            //;\\n                            var opt = [];\\n                            data.forEach(function(D) {\\n                                opt = opt.concat(D.statuses);\\n                            })\\n                            //removes duplicates from array of objects\\n                            var onlyUnique = function(value, index, self) {\\n                                //function in here to give the postion of the matching object\\n                                return self.findIndex(function(cValue, indexA, arr) {\\n                                    return cValue.id === value.id\\n                                }) === index;\\n                            }\\n\\n                            opt = opt.filter(onlyUnique);\\n                            return opt;\\n                        },\\n                        scope: this\\n                    }\\n                });\\n                statusStore.load();\\n                ////////////////////////////////// \\n            },\\n            change: function(f, n, o) {\\n\\n                if (n == null && ijf.snippets.JqlFramework.allowUpdate == true) {\\n                    ijf.snippets.JqlFramework.projectJQL = {};\\n                    var newURL = g_root + '/rest/api/2/issuetype';\\n                    iTypeStore.getProxy().setUrl(newURL);\\n                    iTypeStore.getProxy().setReader({\\n                        type: 'json',\\n                    });\\n                    iTypeStore.load();\\n                    //////////////////////////////////\\n                    var newStatusURL = g_root + '/rest/api/2/status';\\n                    statusStore.getProxy().setUrl(newStatusURL);\\n                    statusStore.getProxy().setReader({\\n                        type: 'json',\\n                    });\\n                    statusStore.load();\\n                }\\n            }\\n        };\\n\\n        var comboProject = {\\n            xtype: 'combobox',\\n            store: projectStore,\\n            queryMode: 'remote',\\n            queryParam: \\\"query\\\",\\n            labelAlign: 'left',\\n            //width: '150px',\\n            flex: 100,\\n            labelStyle: \\\"background:transparent\\\",\\n            style: \\\"background:transparent\\\",\\n            fieldStyle: \\\"background:white\\\",\\n            fieldLabel: \\\"\\\",\\n            hideLabel: false,\\n            typeAhead: true,\\n            typeAheadDelay: 200,\\n            selectOnTab: false,\\n            allowBlank: true,\\n            readOnly: false,\\n            value: \\\"\\\",\\n            displayField: \\\"name\\\",\\n            valueField: \\\"name\\\",\\n            forceSelection: true,\\n            triggerAction: 'all',\\n            emptyText: 'Project:All',\\n            selectOnFocus: true,\\n            id: \\\"ijfContent_ctr_ProjectDD\\\",\\n            listeners: cListener\\n        };\\n\\n        //--------------------------------------------------//\\n        var iTypeStore = Ext.create('Ext.data.Store', {\\n            id: \\\"iTypeStore\\\",\\n            fields: ['id', 'name'],\\n            autoLoad: true,\\n            proxy: {\\n                type: 'ajax',\\n                url: g_root + '/rest/api/2/issuetype',\\n                reader: {\\n                    type: 'json'\\n                }\\n            }\\n        });\\n        var cListener = {\\n            afterrender: function(f) {},\\n            select: function(f, n, o) {\\n\\n                ijf.snippets.JqlFramework.typeJQL = n.data;\\n            },\\n            change: function(f, n, o) {\\n\\n                if (n == null && ijf.snippets.JqlFramework.allowUpdate == true) {\\n                    ijf.snippets.JqlFramework.typeJQL = {};\\n                }\\n            }\\n        };\\n\\n        var comboType = {\\n            xtype: 'combobox',\\n            store: iTypeStore,\\n            queryMode: 'remote',\\n            queryParam: \\\"query\\\",\\n            labelAlign: 'left',\\n            //width: '150px',\\n            flex: 100,\\n            labelStyle: \\\"background:transparent\\\",\\n            style: \\\"background:transparent\\\",\\n            fieldStyle: \\\"background:white\\\",\\n            fieldLabel: \\\"\\\",\\n            hideLabel: false,\\n            typeAhead: true,\\n            typeAheadDelay: 200,\\n            selectOnTab: false,\\n            allowBlank: true,\\n            readOnly: false,\\n            value: \\\"\\\",\\n            displayField: \\\"name\\\",\\n            valueField: \\\"name\\\",\\n            forceSelection: true,\\n            triggerAction: 'all',\\n            emptyText: 'Type:All',\\n            selectOnFocus: true,\\n            id: \\\"ijfContent_ctr_iTypeDD\\\",\\n            listeners: cListener\\n        };\\n\\n        //--------------------------------------------------//\\n\\n        var statusStore = Ext.create('Ext.data.Store', {\\n            id: \\\"statusStore\\\",\\n            fields: ['id', 'name'],\\n            autoLoad: true,\\n            proxy: {\\n                type: 'ajax',\\n                url: g_root + '/rest/api/2/status',\\n                reader: {\\n                    type: 'json'\\n                }\\n            }\\n        });\\n\\n        var cListener = {\\n            afterrender: function(f) {},\\n            select: function(f, n, o) {\\n                ijf.snippets.JqlFramework.statusJQL = n.data;\\n            },\\n            change: function(f, n, o) {\\n                if (n == null && ijf.snippets.JqlFramework.allowUpdate == true) {\\n                    ijf.snippets.JqlFramework.statusJQL = {};\\n                }\\n            }\\n        };\\n\\n        var comboStatus = {\\n            xtype: 'combobox',\\n            store: statusStore,\\n            queryMode: 'remote',\\n            queryParam: \\\"query\\\",\\n            labelAlign: 'left',\\n            //width: '150px',\\n            flex: 100,\\n            labelStyle: \\\"background:transparent\\\",\\n            style: \\\"background:transparent\\\",\\n            fieldStyle: \\\"background:white\\\",\\n            fieldLabel: \\\"\\\",\\n            hideLabel: false,\\n            typeAhead: true,\\n            typeAheadDelay: 200,\\n            selectOnTab: false,\\n            allowBlank: true,\\n            readOnly: false,\\n            value: \\\"\\\",\\n            displayField: \\\"name\\\",\\n            valueField: \\\"name\\\",\\n            forceSelection: true,\\n            triggerAction: 'all',\\n            emptyText: 'Status:All',\\n            selectOnFocus: true,\\n            id: \\\"ijfContent_ctr_statusDD\\\",\\n            listeners: cListener\\n        };\\n\\n        var userQuery = g_root + '/rest/api/3/user/search?query=+&maxResults=1000';\\n        if (ijf.snippets.JqlFramework.isServerRuntime())\\n            userQuery = '/rest/api/2/user/search?username=.&startAt=0&maxResults=500';\\n\\n        //--------------------------------------------------//\\n        var assigneeStore = Ext.create('Ext.data.Store', {\\n            id: \\\"assigneeStore\\\",\\n            fields: ['emailAddress', 'displayName'],\\n            autoLoad: true,\\n            proxy: {\\n                type: 'ajax',\\n                url: userQuery,\\n                reader: {\\n                    type: 'json'\\n                }\\n            }\\n        });\\n        var cListener = {\\n            afterrender: function(f) {},\\n            select: function(f, n, o) {\\n\\n                ijf.snippets.JqlFramework.assigneeJQL = n.data;\\n            },\\n            change: function(f, n, o) {\\n\\n                if (n == null && ijf.snippets.JqlFramework.allowUpdate == true) {\\n                    ijf.snippets.JqlFramework.assigneeJQL = {};\\n                }\\n            }\\n        };\\n\\n        var comboAssignee = {\\n            xtype: 'combobox',\\n            store: assigneeStore,\\n            queryMode: 'remote',\\n            queryParam: \\\"query\\\",\\n            labelAlign: 'left',\\n            //width: '150px',\\n            flex: 100,\\n            labelStyle: \\\"background:transparent\\\",\\n            style: \\\"background:transparent\\\",\\n            fieldStyle: \\\"background:white\\\",\\n            fieldLabel: \\\"\\\",\\n            hideLabel: false,\\n            typeAhead: true,\\n            typeAheadDelay: 200,\\n            selectOnTab: false,\\n            allowBlank: true,\\n            readOnly: false,\\n            value: \\\"\\\",\\n            displayField: \\\"displayName\\\",\\n            valueField: \\\"displayName\\\",\\n            forceSelection: true,\\n            triggerAction: 'all',\\n            emptyText: 'Assignee:All',\\n            selectOnFocus: true,\\n            id: \\\"ijfContent_ctr_AssigneeDD\\\",\\n            listeners: cListener\\n        };\\n\\n        //--------------------------------------------------//\\n        //////////////////////////////////////////////////////////////////////////////////////////////\\n        //////new work remove when done\\n        //height:24px;\\n        //use same cod for advance text field and 2 buttons just update for this use case...\\n        var lValidator = function(v) {\\n            return true\\n        }\\n\\n        var textQry = {\\n            xtype: 'textfield',\\n            labelAlign: 'left',\\n            flex: 100,\\n            //labelWidth: labelWidth,\\n            //labelStyle: \\\"width:300px;background:transparent;\\\",\\n            //style: \\\"width:300px;background:transparent;\\\",\\n            fieldStyle: \\\"background:white;\\\",\\n            fieldLabel: '',\\n            margin: {\\n                top: 0,\\n                right: 0,\\n                bottom: 5,\\n                left: 0\\n            },\\n            hideLabel: true,\\n            allowBlank: true,\\n            maxLength: Number.MAX_VALUE,\\n            validator: lValidator,\\n            readOnly: false,\\n            emptyText: 'Contains text',\\n            //width: lWidth,\\n            value: '',\\n            id: \\\"ijfContent_ctr_basicSearchText\\\",\\n            listeners: {\\n                afterrender: function(f) {},\\n                valid: function(f) {},\\n                invalid: function(f, msg) {},\\n                change: function(f, n, o) {\\n                    ijf.snippets.JqlFramework.basicTextJQL.value = n;\\n                }\\n            }\\n        };\\n\\n        var sItems = [];\\n\\n        //pack all in one set of array....\\n        sItems.push(comboProject);\\n        sItems.push(comboType);\\n        sItems.push(comboStatus);\\n        sItems.push(comboAssignee);\\n        sItems.push(textQry);\\n\\n        var magnifyPng = \\\"/download/resources/com.idealfed.poc.idealforms:jiraforms-resources5/images/magnify.png\\\";\\n        if (!ijf.snippets.JqlFramework.isServerRuntime())\\n            magnifyPng = g_root + '/images/magnify.png';\\n\\n        sItems.push({\\n            xtype: 'button',\\n            icon: magnifyPng,\\n            flex: 10,\\n            minWidth: 30,\\n            maxWidth: 30,\\n            //fieldStyle: 'padding-left:200px',\\n            margin: {\\n                top: 0,\\n                right: 20,\\n                bottom: 0,\\n                left: 15\\n            },\\n            handler: function(f, n, o) {\\n                var cup = this.up();\\n                var tVal = ijf.snippets.JqlFramework.getJQL();\\n                //cup.items.items[0].getValue();\\n\\n\\t\\t\\t\\tif((!tVal) || (tVal==\\\"\\\")) return;\\n\\t\\t\\t\\t//add worklogdates if not there\\n                if (tVal.toLowerCase().indexOf(\\\"worklogdate\\\") < 0) {\\n                    //set to current week\\n                    var tFromDate = moment().startOf('isoWeek');\\n                    var tToDate = moment().endOf('isoWeek');\\n                    var wlSuffix = \\\" and worklogDate >= \\\" + tFromDate.format(\\\"YYYY-MM-DD\\\") + \\\"  and worklogDate <= \\\" + tToDate.format(\\\"YYYY-MM-DD\\\");\\n\\n                    if (tVal.toLowerCase().indexOf(\\\"order by\\\") > -1) {\\n                        var jParts = tVal.split(\\\"order by\\\");\\n                        tVal = tVal[0] + wlSuffix + \\\"order by\\\" + tVal[1];\\n                    } else {\\n                        tVal = tVal + wlSuffix;\\n                    }\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tijf.session.filterMode = \\\"timeframe\\\";\\n\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_4,2\\\"]=\\\"1\\\";\\n                }\\n\\n                //update 3 fields:  fitler, timeframe, worklogFrom...\\n                //parse tVal, and update my filter controls accordingly....\\t\\n\\t\\n                var parsed = ijf.snippets.JqlFramework.parseJQL(tVal);\\n                if ((!parsed) || (!parsed.queries) || (!parsed.queries[0])) {\\n                    ijfUtils.modalDialogMessage(\\\"Info\\\", \\\"Unable to parse the JQL\\\");\\n                    return;\\n                }\\n                if (parsed.queries[0].errors) {\\n                    ijfUtils.modalDialogMessage(\\\"JQL Error\\\", parsed.queries[0].errors[0]);\\n                    return;\\n                }\\n\\n\\n\\n\\t\\t\\t\\tvar splitJql = tVal.toLowerCase().split(\\\"worklogauthor\\\");\\n\\t\\t\\t\\tif (splitJql.length > 1) {\\n\\t\\t\\t\\t\\tvar subSplit = splitJql[1].trim().split(\\\" \\\");\\n\\t\\t\\t\\t\\tif(subSplit[1].toLowerCase().indexOf(\\\"currentuser\\\"))\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_3,2\\\"] = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"3,2\\\": 2\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_3,2\\\"] = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"3,2\\\": 1\\n\\t\\t\\t\\t\\t\\t\\t\\t  };\\n\\t\\t\\t\\t\\t}\\t\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_3,2\\\"] = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"3,2\\\": 1\\n\\t\\t\\t\\t\\t\\t\\t\\t  };\\t\\n\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\n\\t\\t\\t\\t//look for worklogdate in jql x 2, if not there bail...if they are there, set dates to them...and set to                    \\n\\t\\t\\t\\tvar splitJql = tVal.toLowerCase().split(\\\"worklogdate\\\");\\n\\t\\t\\t\\tif (splitJql.length > 1) {\\n\\t\\t\\t\\t\\tvar tempToDate = moment(new Date());\\n\\t\\t\\t\\t\\tvar tempFromDate = moment(new Date());\\n\\t\\t\\t\\t\\tfor (var i = 1; i < splitJql.length; i++) {\\n\\n\\t\\t\\t\\t\\t\\tvar subSplit = splitJql[i].trim().split(\\\" \\\")\\n\\t\\t\\t\\t\\t\\t//form is [\\\">=\\\", \\\"2021-5-3\\\", \\\"and\\\"]\\n\\t\\t\\t\\t\\t\\tvar operator = subSplit[0].trim();\\n\\n\\t\\t\\t\\t\\t\\tif (operator == \\\">=\\\")\\n\\t\\t\\t\\t\\t\\t\\ttempFromDate = moment(subSplit[1].trim());\\n\\t\\t\\t\\t\\t\\t//.format(\\\"YYYY-MM-DD\\\");\\n\\t\\t\\t\\t\\t\\tif (operator == \\\">\\\")\\n\\t\\t\\t\\t\\t\\t\\ttempFromDate = moment(subSplit[1].trim()).add('days', 1);\\n\\t\\t\\t\\t\\t\\t//.format(\\\"YYYY-MM-DD\\\");\\n\\t\\t\\t\\t\\t\\tif (operator == \\\"<=\\\")\\n\\t\\t\\t\\t\\t\\t\\ttempToDate = moment(subSplit[1].trim());\\n\\t\\t\\t\\t\\t\\t//.format(\\\"YYYY-MM-DD\\\");\\n\\t\\t\\t\\t\\t\\tif (operator == \\\"<\\\")\\n\\t\\t\\t\\t\\t\\t\\ttempToDate = moment(subSplit[1].trim()).subtract('days', 1);\\n\\t\\t\\t\\t\\t\\t//.format(\\\"YYYY-MM-DD\\\");\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ((moment(ijf.session.wlFromDate).format(\\\"YYYY-MM-DD\\\") != tempFromDate.format(\\\"YYYY-MM-DD\\\")) || (moment(ijf.session.wlToDate).format(\\\"YYYY-MM-DD\\\") != tempToDate.format(\\\"YYYY-MM-DD\\\"))) ijf.session.filterMode = \\\"custom\\\";\\n\\n\\t\\t\\t\\t\\tijf.session.wlFromDate = tempFromDate.format('YYYY-M-D');\\n\\t\\t\\t\\t\\tijf.session.wlToDate = tempToDate.format('YYYY-M-D');\\n\\n\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_4,3\\\"] = tempFromDate.format('YYYY-M-D');\\n\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_4,4\\\"] = tempToDate.format('YYYY-M-D');\\n\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tijfUtils.modalDialogMessage(\\\"Info\\\", \\\"This tool requires the JQL include worklogDate conditions to run, please add and try again.\\\");\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\n\\n                ijf.main.controlSet[\\\"ijfContent_fld_6,2\\\"].field.dataSource = tVal;\\n                var resetForm = function() {\\n                    ijf.main.renderForm(\\\"ijfContent\\\", \\\"IFT Worklog Report\\\", false, ijf.currentItem);\\n                    ijfUtils.hideProgress();\\n                };\\n                ijfUtils.showProgress();\\n                window.setTimeout(resetForm, 10);\\n\\n            }\\n        });\\n\\n        sItems.push({\\n            xtype: 'button',\\n            text: 'Advanced',\\n            flex: 10,\\n            minWidth: 90,\\n            maxWidth: 90,\\n            handler: function(f, n, o) {\\n\\n                ijf.snippets.JqlFramework.updateAdvancedString();\\n                ijf.snippets.JqlFramework.setToAdvanced();\\n\\n            }\\n        });\\n\\n        var simple5 = new Ext.FormPanel({\\n            border: false,\\n            hidden: false,\\n            //bodyStyle: \\\"background:transparent;;width:500px\\\",\\n            //style: \\\"background:transparent;;width:500px\\\",\\n            layout: 'hbox',\\n            items: sItems\\n        });\\n\\n        //var inContainer = Ext.getElementById(\\\"JQLTSubDiv5\\\");       \\n        var inContainer = Ext.getElementById(\\\"JQLTMainDiv2\\\");\\n        simple5.render(inContainer);\\n\\n        //adding to help with destroying on framework reload\\n        var thisControl = new itemControl(simple5.id,null,null,simple5,inContainer);\\n        ijf.main.controlSet[thisControl.id] = thisControl;\\n\\n        var ObjRef = [{\\n            id: 'project',\\n            'comboR': simple5.items.items[0],\\n            value: '',\\n            lookupV: ['key', 'name']\\n        }, {\\n            id: 'issuetype',\\n            'comboR': simple5.items.items[1],\\n            value: '',\\n            lookupV: ['name']\\n        }, {\\n            id: 'status',\\n            'comboR': simple5.items.items[2],\\n            value: '',\\n            lookupV: ['name']\\n        }, {\\n            id: 'assignee',\\n            'comboR': simple5.items.items[3],\\n            value: '',\\n            lookupV: ['accountId', 'emailAddress', 'displayName']\\n        }, {\\n            id: 'text',\\n            'comboR': simple5.items.items[4],\\n            value: '',\\n            lookupV: ''\\n        }]\\n        ijf.snippets.JqlFramework.comboObjRef = ObjRef;\\n\\n    },\\n    buildAdvancedJQL: function() {\\n\\n        var lValidator = function(v) {\\n            return true\\n        }\\n\\n        var sItems = [{\\n            xtype: 'textfield',\\n            labelAlign: 'left',\\n            flex: 100,\\n            //labelWidth: labelWidth,//width:1226px\\n            //labelStyle: \\\"width:1234px;background:transparent;\\\",\\n            //style: \\\"width:1234px;background:transparent;\\\",\\n            fieldStyle: \\\"background:white;\\\",\\n            margin: {\\n                top: 5,\\n                right: 0,\\n                bottom: 5,\\n                left: 5\\n            },\\n            fieldLabel: '',\\n            hideLabel: true,\\n            allowBlank: true,\\n            maxLength: Number.MAX_VALUE,\\n            validator: lValidator,\\n            readOnly: false,\\n            //width: lWidth,\\n            value: '',\\n            id: \\\"ijfContent_ctr_AdvancedSearchText\\\",\\n            listeners: {\\n                afterrender: function(f) {},\\n                valid: function(f) {},\\n                invalid: function(f, msg) {},\\n                change: function(f, n, o) {}\\n            }\\n        }];\\n\\n        var magnifyPng = \\\"/download/resources/com.idealfed.poc.idealforms:jiraforms-resources5/images/magnify.png\\\";\\n        if (!ijf.snippets.JqlFramework.isServerRuntime())\\n            magnifyPng = g_root + '/images/magnify.png';\\n\\n        sItems.push({\\n            xtype: 'button',\\n            icon: magnifyPng,\\n            flex: 10,\\n            minWidth: 30,\\n            maxWidth: 30,\\n            margin: {\\n                top: 5,\\n                right: 20,\\n                bottom: 0,\\n                left: 15\\n            },\\n            handler: function(f, n, o) {\\n                var cup = this.up();\\n                var tVal = cup.items.items[0].getValue();\\n\\n\\t\\t\\t\\tif((!tVal) || (tVal==\\\"\\\")) return;\\n\\t\\t\\t\\t//add worklogdates if not there\\n                if (tVal.toLowerCase().indexOf(\\\"worklogdate\\\") < 0) {\\n                    //set to current week\\n                    var tFromDate = moment().startOf('isoWeek');\\n                    var tToDate = moment().endOf('isoWeek');\\n                    var wlSuffix = \\\" and worklogDate >= \\\" + tFromDate.format(\\\"YYYY-MM-DD\\\") + \\\"  and worklogDate <= \\\" + tToDate.format(\\\"YYYY-MM-DD\\\");\\n\\n                    if (tVal.toLowerCase().indexOf(\\\"order by\\\") > -1) {\\n                        var jParts = tVal.split(\\\"order by\\\");\\n                        tVal = tVal[0] + wlSuffix + \\\"order by\\\" + tVal[1];\\n                    } else {\\n                        tVal = tVal + wlSuffix;\\n                    }\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tijf.session.filterMode = \\\"timeframe\\\";\\n\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_4,2\\\"]=\\\"1\\\";\\n                }\\n\\n\\n                if (!ijf.snippets.JqlFramework.isServerRuntime()) {\\n                    var parsed = ijf.snippets.JqlFramework.parseJQL(tVal);\\n                    if ((!parsed) || (!parsed.queries) || (!parsed.queries[0])) {\\n                        ijfUtils.modalDialogMessage(\\\"Info\\\", \\\"Unable to parse the JQL\\\");\\n                        return;\\n                    }\\n                    if (parsed.queries[0].errors) {\\n                        ijfUtils.modalDialogMessage(\\\"JQL Error\\\", parsed.queries[0].errors[0]);\\n                        return;\\n                    }\\n                    if (parsed.queries[0].query == \\\"\\\")\\n                        return;\\n\\n                    var clauses = [];\\n\\n                    if (parsed.queries[0].structure.where.clauses) {\\n                        parsed.queries[0].structure.where.clauses.forEach(function(c) {\\n                            clauses.push(c);\\n                        });\\n                    } else {\\n                        clauses.push(parsed.queries[0].structure.where);\\n                    }\\n\\n                } \\n\\t\\t\\t\\t\\n\\t\\t\\t\\tvar splitJql = tVal.toLowerCase().split(\\\"worklogauthor\\\");\\n\\t\\t\\t\\tif (splitJql.length > 1) {\\n\\t\\t\\t\\t\\tvar subSplit = splitJql[1].trim().split(\\\" \\\");\\n\\t\\t\\t\\t\\tif(subSplit[1].toLowerCase().indexOf(\\\"currentuser\\\"))\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_3,2\\\"] = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"3,2\\\": 2\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_3,2\\\"] = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"3,2\\\": 1\\n\\t\\t\\t\\t\\t\\t\\t\\t  };\\n\\t\\t\\t\\t\\t}\\t\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_3,2\\\"] = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"3,2\\\": 1\\n\\t\\t\\t\\t\\t\\t\\t\\t  };\\t\\n\\t\\t\\t\\t}\\n\\n\\n\\n\\t\\t\\t\\n\\t\\t\\t\\t//look for worklogdate in jql x 2, if not there bail...if they are there, set dates to them...and set to                    \\n\\t\\t\\t\\tvar splitJql = tVal.toLowerCase().split(\\\"worklogdate\\\");\\n\\t\\t\\t\\tif (splitJql.length > 1) {\\n\\t\\t\\t\\t\\tvar tempToDate = moment(new Date());\\n\\t\\t\\t\\t\\tvar tempFromDate = moment(new Date());\\n\\t\\t\\t\\t\\tfor (var i = 1; i < splitJql.length; i++) {\\n\\n\\t\\t\\t\\t\\t\\tvar subSplit = splitJql[i].trim().split(\\\" \\\")\\n\\t\\t\\t\\t\\t\\t//form is [\\\">=\\\", \\\"2021-5-3\\\", \\\"and\\\"]\\n\\t\\t\\t\\t\\t\\tvar operator = subSplit[0].trim();\\n\\n\\t\\t\\t\\t\\t\\tif (operator == \\\">=\\\")\\n\\t\\t\\t\\t\\t\\t\\ttempFromDate = moment(subSplit[1].trim());\\n\\t\\t\\t\\t\\t\\t//.format(\\\"YYYY-MM-DD\\\");\\n\\t\\t\\t\\t\\t\\tif (operator == \\\">\\\")\\n\\t\\t\\t\\t\\t\\t\\ttempFromDate = moment(subSplit[1].trim()).add('days', 1);\\n\\t\\t\\t\\t\\t\\t//.format(\\\"YYYY-MM-DD\\\");\\n\\t\\t\\t\\t\\t\\tif (operator == \\\"<=\\\")\\n\\t\\t\\t\\t\\t\\t\\ttempToDate = moment(subSplit[1].trim());\\n\\t\\t\\t\\t\\t\\t//.format(\\\"YYYY-MM-DD\\\");\\n\\t\\t\\t\\t\\t\\tif (operator == \\\"<\\\")\\n\\t\\t\\t\\t\\t\\t\\ttempToDate = moment(subSplit[1].trim()).subtract('days', 1);\\n\\t\\t\\t\\t\\t\\t//.format(\\\"YYYY-MM-DD\\\");\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ((moment(ijf.session.wlFromDate).format(\\\"YYYY-MM-DD\\\") != tempFromDate.format(\\\"YYYY-MM-DD\\\")) || (moment(ijf.session.wlToDate).format(\\\"YYYY-MM-DD\\\") != tempToDate.format(\\\"YYYY-MM-DD\\\"))) ijf.session.filterMode = \\\"custom\\\";\\n\\n\\t\\t\\t\\t\\tijf.session.wlFromDate = tempFromDate.format('YYYY-M-D');\\n\\t\\t\\t\\t\\tijf.session.wlToDate = tempToDate.format('YYYY-M-D');\\n\\n\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_4,3\\\"] = tempFromDate.format('YYYY-M-D');\\n\\t\\t\\t\\t\\tijf.session[\\\"ijfContent_fld_4,4\\\"] = tempToDate.format('YYYY-M-D');\\n\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tijfUtils.modalDialogMessage(\\\"Info\\\", \\\"This tool requires the JQL include worklogDate conditions to run, please add and try again.\\\");\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\n                ijf.main.controlSet[\\\"ijfContent_fld_6,2\\\"].field.dataSource = tVal;\\n                var resetForm = function() {\\n                    ijf.main.renderForm(\\\"ijfContent\\\", \\\"IFT Worklog Report\\\", false, ijf.currentItem);\\n                    ijfUtils.hideProgress();\\n                };\\n                ijfUtils.showProgress();\\n                window.setTimeout(resetForm, 10);\\n            }\\n        });\\n        var hideBasic = false;\\n        if (ijf.snippets.JqlFramework.isServerRuntime())\\n            hideBasic = true;\\n\\n        sItems.push({\\n            xtype: 'button',\\n            hidden: hideBasic,\\n            text: 'Basic',\\n            flex: 10,\\n            minWidth: 90,\\n            maxWidth: 90,\\n            margin: {\\n                top: 5,\\n                right: 20,\\n                bottom: 0,\\n                left: 0\\n            },\\n            handler: function(f, n, o) {\\n                ijf.snippets.JqlFramework.allowUpdate = false;\\n\\n                var result = ijf.snippets.JqlFramework.checkJQL(ijf.snippets.JqlFramework.comboObjRef);\\n                if (result) {\\n                    ijf.snippets.JqlFramework.setToBasic();\\n                } else {\\n                    //else update tool tip with \\\"This query is too complex to display in Simple mode.\\\"\\n\\n                    var switchIt = function() {\\n                        ijf.snippets.JqlFramework.setJQL(\\\"\\\");\\n                        ijf.snippets.JqlFramework.setToBasic();\\n                    }\\n\\n                    ijfUtils.modalDialog(\\\"Info\\\", \\\"Your current query is too complex for our basic view.  Clicking OK will clear your query and show the basic query fields.<br><br>  You can copy your current query (<a href='JAVASCRIPT:ijf.snippets.JqlFramework.copyJqlToClip()'>copy query</a>) and paste when back in advanced:).<br>\\\", switchIt);\\n\\n                }\\n                ijf.snippets.JqlFramework.allowUpdate = true;\\n\\n            }\\n        });\\n\\n        sItems.push({\\n            xtype: 'button',\\n            text: 'JIRA Search',\\n            flex: 10,\\n            minWidth: 90,\\n            maxWidth: 90,\\n            margin: {\\n                top: 5,\\n                right: 0,\\n                bottom: 0,\\n                left: 0\\n            },\\n            handler: function(f, n, o) {\\n                //https://idealfed.atlassian.net/issues/?jql=order%20by%20created%20DESC\\n\\n                var jSearch = \\\"/issues/?jql=\\\" + ijf.snippets.JqlFramework.getJQL();\\n                if (!ijf.snippets.JqlFramework.isServerRuntime())\\n                    jSearch = ijf.main.baseSys + jSearch;\\n\\n                var tUrl = jSearch;\\n                window.open(tUrl);\\n                ijfUtils.modalDialogMessage(\\\"Info\\\", \\\"A new tab was opened to JIRA's advanced search tool.<br><br>You can modify there and copy the resulting query back here:).<br>\\\");\\n            }\\n        });\\n\\n        var simple6 = new Ext.FormPanel({\\n            border: false,\\n            hidden: false,\\n            //bodyStyle: \\\"query:true;background:transparent;\\\",\\n            //style: \\\"query:true;background:transparent;\\\",\\n            width: \\\"100%\\\",\\n            layout: 'hbox',\\n            items: sItems\\n        });\\n        var inContainer = Ext.get(\\\"JQLTMainDiv1\\\");\\n        simple6.render(inContainer);\\n\\n        //adding to help with destroying on framework reload\\n        var thisControl = new itemControl(simple6.id,null,null,simple6,inContainer);\\n        ijf.main.controlSet[thisControl.id] = thisControl;\\n\\n    },\\n    copyJqlToClip: function() {\\n        var t = Ext.getCmp(\\\"ijfContent_ctr_AdvancedSearchText\\\");\\n        t.focus();\\n        t.selectText();\\n        document.execCommand(\\\"copy\\\");\\n    },\\n    setToAdvanced() {\\n\\n        var JQLTMain1 = Ext.get(\\\"JQLTMainDiv1\\\");\\n        var JQLTMain2 = Ext.get(\\\"JQLTMainDiv2\\\");\\n        ijf.snippets.JqlFramework.showingAdvanced = true;\\n\\n        JQLTMain1.dom.style.display = '';\\n        JQLTMain2.dom.style.display = 'none';\\n\\n        ijf.main.controlSet[\\\"ijfContent_fld_3,2\\\"].control.enable();\\n        ijf.main.controlSet[\\\"ijfContent_fld_4,2\\\"].control.enable();\\n        ijf.main.controlSet[\\\"ijfContent_fld_4,3\\\"].control.enable();\\n        ijf.main.controlSet[\\\"ijfContent_fld_4,4\\\"].control.enable();\\n\\n    },\\n    setToBasic() {\\n\\n        var JQLTMain1 = Ext.get(\\\"JQLTMainDiv1\\\");\\n        var JQLTMain2 = Ext.get(\\\"JQLTMainDiv2\\\");\\n        ijf.snippets.JqlFramework.showingAdvanced = false;\\n        JQLTMain1.dom.style.display = 'none';\\n        JQLTMain2.dom.style.display = '';\\n\\n        ijf.main.controlSet[\\\"ijfContent_fld_3,2\\\"].control.disable();\\n        ijf.main.controlSet[\\\"ijfContent_fld_4,2\\\"].control.disable();\\n        ijf.main.controlSet[\\\"ijfContent_fld_4,3\\\"].control.disable();\\n        ijf.main.controlSet[\\\"ijfContent_fld_4,4\\\"].control.disable();\\n\\n    },\\n    toggleAdvBasic: function() {\\n\\n        //var JQLTMain1 = Ext.get(\\\"JQLTMainDiv1\\\");\\n        //var JQLTMain2 = Ext.get(\\\"JQLTMainDiv2\\\");\\n\\n        if (ijf.snippets.JqlFramework.showingAdvanced) {\\n            ijf.snippets.JqlFramework.setToBasic();\\n        } else {\\n            ijf.snippets.JqlFramework.setToAdvanced();\\n        }\\n\\n        /*\\n        if (JQLTMain1.dom.style.display == 'none') {\\n            JQLTMain1.dom.style.display = '';\\n            JQLTMain2.dom.style.display = 'none'\\n        } else if (JQLTMain2.dom.style.display == 'none') {\\n            JQLTMain1.dom.style.display = 'none';\\n            JQLTMain2.dom.style.display = ''\\n        } else {\\n            JQLTMain1.dom.style.display = 'none';\\n        }\\n        */\\n\\n    },\\n    checkJQL: function(comboObjRef) {\\n\\n        //try to parse advanced string\\n        var currentString = Ext.getCmp('ijfContent_ctr_AdvancedSearchText').getValue();\\n        //if parseable then return true;\\n        if (currentString != \\\"\\\") {\\n            var parsed = ijf.snippets.JqlFramework.parseJQL(currentString);\\n            //create an array of objects {of comboRefs and new values} from the user //might need lookupV if ref is dif in store.\\n            if (parsed.queries[0].structure.where.operator != \\\"or\\\") {\\n                if (parsed.queries[0].structure.where.clauses == undefined) {\\n                    var base = [parsed.queries[0].structure.where];\\n                } else {\\n                    var base = parsed.queries[0].structure.where.clauses;\\n                }\\n\\n                //////////\\n                var listOfAllowed = [\\\"project\\\", \\\"issuetype\\\", \\\"status\\\", \\\"assignee\\\", \\\"text\\\"];\\n                var listOfNotAllowed = [];\\n                var Len = base.length;\\n                base.forEach(function(J) {\\n                    var isbasic = false;\\n                    listOfAllowed.some(function(A, P) {\\n                        if (J.field.name == A) {\\n                            isbasic = true;\\n                            listOfAllowed.splice(P, 1);\\n                            return true;\\n                        }\\n                    })\\n                    if (!isbasic) {\\n                        listOfNotAllowed.push(J);\\n                    }\\n                })\\n\\n                if (listOfNotAllowed.length == 0) {\\n                    base.forEach(function(Q) {\\n                        var i = comboObjRef.findIndex(function(cValue, indexA, arr) {\\n                            return cValue.id === Q.field.name\\n                        });\\n                        //var ref = comboObjRef[i];\\n                        //if q == text then don't do this just set text.\\n                        if (Q.field.name == \\\"assignee\\\") {\\n                            ijf.snippets.JqlFramework.updateCombo(comboObjRef[i].comboR, Q.operand.values[0].value, comboObjRef[i].lookupV);\\n                        } else if (Q.field.name == \\\"text\\\") {\\n                            comboObjRef[i].comboR.setValue(Q.operand.value);\\n                        } else {\\n                            ijf.snippets.JqlFramework.updateCombo(comboObjRef[i].comboR, Q.operand.value, comboObjRef[i].lookupV);\\n                        }\\n                        //ijf.snippets.JqlFramework.updateCombo(combo,value,lookupV)\\n                    })\\n\\n                    return true;\\n                } else {\\n                    return false;\\n                }\\n                //////////////////////\\n            } else {\\n                return false;\\n            }\\n        } else {\\n            //should really set all fields to \\\"\\\"; **Maybe do this in update!\\n            return true;\\n        }\\n    },\\n    parseJQL: function(JQLString) {\\n        var jData = {\\n            \\\"queries\\\": [JQLString]\\n        };\\n        var inData = JSON.stringify(jData);\\n        var retVal = \\\"tbd\\\";\\n        jQuery.ajax({\\n            headers: {\\n                Accept: \\\"application/json\\\"\\n            },\\n            async: false,\\n            type: 'POST',\\n            contentType: \\\"application/json; charset=utf-8\\\",\\n            url: g_root + \\\"/rest/api/2/jql/parse\\\",\\n            data: inData,\\n            timeout: 60000,\\n            success: function(data, e, f) {\\n                ijfUtils.footLog(\\\"Successful data response code: \\\" + f.status);\\n                if ((f.status == 200) || (f.status == 201) || (f.status == 204)) {\\n                    if ((this.type == \\\"GET\\\") || (this.type == \\\"POST\\\"))\\n                        retVal = data;\\n                    else\\n                        retVal = \\\"OK\\\";\\n                } else {\\n                    retVal = \\\"Unsuccessful Api Call: \\\" + f.status;\\n                }\\n            },\\n            error: function(e) {\\n                if ((e.status == 201) || (e.status == 200)) //  && (e.statusText==\\\"Created\\\"))\\n                {\\n                    if (this.type == \\\"GET\\\")\\n                        retVal = e.responseText;\\n                    else\\n                        retVal = \\\"OK\\\";\\n                } else if (e.statusText == \\\"OK\\\") {\\n                    ijfUtils.footLog(\\\"Successful data post\\\");\\n                    retVal = e.responseText;\\n                } else {\\n                    ijfUtils.footLog(\\\"Failed data post: \\\" + \\\" \\\" + e.statusText);\\n                    if (e.status == 403) {\\n                        retVal = \\\"You do not have permission to edit.\\\";\\n                    } else {\\n                        retVal = \\\"Failed data put: \\\" + e.statusText + \\\" \\\" + e.responseText;\\n                    }\\n                }\\n            }\\n        });\\n        return retVal;\\n    },\\n    updateCombo: function(combo, value, lookupV) {\\n        var int = 0;\\n        //simple.items.items[0], var value = 'AMT', lookupV replace key with what lookup is needed.\\n        var cStore = combo.store;\\n        var valueField = combo.valueField;\\n        var displayField = combo.displayField;\\n\\n        var recordNumber = cStore.getData().items.findIndex(function(cValue, indexA, arr) {\\n            return cValue.data[lookupV[int]] === value\\n        });\\n        if (recordNumber == -1) {\\n            int++;\\n            var recordNumber = cStore.getData().items.findIndex(function(cValue, indexA, arr) {\\n                return cValue.data[lookupV[int]] === value\\n            });\\n            if (recordNumber == -1) {\\n                int++;\\n                var recordNumber = cStore.getData().items.findIndex(function(cValue, indexA, arr) {\\n                    return cValue.data[lookupV[int]] === value\\n                });\\n            }\\n        }\\n\\n        var displayValue = cStore.getAt(recordNumber).data[displayField];\\n\\n        //combo.select(value);\\n        combo.setValue(value);\\n        combo.setRawValue(displayValue);\\n        var record = cStore.getAt(recordNumber);\\n        combo.fireEvent('select', combo, record);\\n        //\\n        //not working\\n        //combo.selectedIndex = recordNumber;\\n    },\\n    updateAdvancedString: function() {\\n        //\\n        var opt = ['projectJQL', 'typeJQL', 'statusJQL', 'assigneeJQL', 'basicTextJQL'];\\n        var returnJQLString = '';\\n        var arrayJQL = [];\\n        opt.forEach(function(O, P) {\\n            var ref = ijf.snippets.JqlFramework[O];\\n            if (Object.keys(ref).length != 0) {\\n                //make sure the option is not empty\\n                if (P == 0) {\\n                    arrayJQL.push('project = ' + ref.key);\\n                } else if (P == 1) {\\n                    arrayJQL.push('issuetype = \\\"' + ref.name + '\\\"');\\n                } else if (P == 2) {\\n                    arrayJQL.push('status = \\\"' + ref.name + '\\\"');\\n                } else if (P == 3) {\\n                    arrayJQL.push('assignee in (\\\"' + ref.accountId + '\\\")');\\n                } else if (P == 4) {\\n                    if (ref.value != '') {\\n                        arrayJQL.push('text ~ \\\"' + ref.value + '\\\"');\\n                    }\\n                }\\n            }\\n        })\\n        //after combined all of the arrayJQL with AND inbetween;\\n        arrayJQL.forEach(function(J, P) {\\n            if (P == 0) {\\n                returnJQLString = J;\\n            } else {\\n                returnJQLString += \\\" AND \\\" + J;\\n            }\\n        })\\n        //gets called when user clicks the toggle button.\\n        Ext.getCmp('ijfContent_ctr_AdvancedSearchText').setValue(returnJQLString);\\n    },\\n    setJQL: function(value) {\\n        //if not in advanced //hide basic\\n        /* var JQLTMain1 = Ext.get(\\\"JQLTMainDiv1\\\");\\n        var JQLTMain2 = Ext.get(\\\"JQLTMainDiv2\\\");\\n        if (JQLTMain2.dom.style.display != 'none') {\\n            JQLTMain2.dom.style.display = 'none';\\n            JQLTMain1.dom.style.display = '';\\n        }\\n        */\\n        //set text to value string\\n        Ext.getCmp('ijfContent_ctr_AdvancedSearchText').setValue(value);\\n    },\\n    getJQL: function() {\\n        //where are we basic or advanced\\n        var returnJQLString = '';\\n        var JQLTMain1 = Ext.get(\\\"JQLTMainDiv1\\\");\\n        var JQLTMain2 = Ext.get(\\\"JQLTMainDiv2\\\");\\n        if (JQLTMain2.dom.style.display == 'none') {\\n            //we are in advanced\\n            //just return the string\\n            returnJQLString = Ext.getCmp('ijfContent_ctr_AdvancedSearchText').getValue();\\n        } else if (JQLTMain2.dom.style.display == '') {\\n            //we are in basic;\\n            //based on this build the jql\\n            var opt = ['projectJQL', 'typeJQL', 'statusJQL', 'assigneeJQL', 'basicTextJQL'];\\n            var arrayJQL = [];\\n            opt.forEach(function(O, P) {\\n                var ref = ijf.snippets.JqlFramework[O];\\n                if (Object.keys(ref).length != 0) {\\n                    //make sure the option is not empty\\n                    if (P == 0) {\\n                        arrayJQL.push('project = ' + ref.key);\\n                    } else if (P == 1) {\\n                        arrayJQL.push('issuetype = \\\"' + ref.name + '\\\"');\\n                    } else if (P == 2) {\\n                        arrayJQL.push('status = \\\"' + ref.name + '\\\"');\\n                    } else if (P == 3) {\\n                        arrayJQL.push('assignee in (\\\"' + ref.accountId + '\\\")');\\n                    } else if (P == 4) {\\n                        if (ref.value != '') {\\n                            arrayJQL.push('text ~ \\\"' + ref.value + '\\\"');\\n                        }\\n                    }\\n                }\\n            })\\n            //after combined all of the arrayJQL with AND inbetween;\\n            arrayJQL.forEach(function(J, P) {\\n                if (P == 0) {\\n                    returnJQLString = J;\\n                } else {\\n                    returnJQLString += \\\" AND \\\" + J;\\n                }\\n            })\\n\\n        }\\n        return returnJQLString;\\n    }\\n}\\n\""},{"name":"calculateTotalHours","snippet":"\"calculateTotalHours = function()\\n{\\n   var runCalc = function()\\n   {\\n   var g =ijf.main.controlSet[\\\"ijfContent_fld_6,2\\\"]\\n   var d = g.control.items.items[0].store.getData();\\n   var total = 0;\\n   d.items.forEach(function(r)\\n   {\\n          total += r.data.timeestimate/1;\\n   });\\n       try\\n       {\\n           //may not exist\\n           total = total.toFixed(2);\\n           ijf.main.controlSet[\\\"ijfContent_fld_4,6\\\"].control.items.items[0].update(\\\"Total Hours:  \\\" + total);\\n       }\\n       catch(e)\\n       {}\\n\\n   }\\n   //let the form paint then calc\\n   window.setTimeout(runCalc,500);\\n   return true;\\n}\""},{"name":"popFrameworkWlr","snippet":"\"popFrameworkWlr = {\\n    testInt: 0,\\n    popDivs: {\\n        \\\"roots\\\": []\\n    },\\n    cleanRowId(inRowId)\\n    {\\n          return inRowId.replace(\\\" \\\",\\\"_\\\").replace(\\\"(\\\",\\\"_\\\").replace(\\\")\\\",\\\"_\\\");\\n    },\\n    setStale()\\n    {\\n          var b = ijf.main.controlSet[\\\"ijfContent_fld_1,6\\\"].control.items.items[0];\\n          b.setStyle(\\\"background\\\",\\\"red\\\");\\n          b.setText(\\\"Table stale, Refresh\\\")\\n    },\\n    onRootClickViaHover: function(thisObj, td, cellIndex, record, tr, rowIndex, e, eOpts) {\\n        var x, y;\\n\\n        var rData = thisObj.grid.getStore().getData().items[rowIndex];\\n        var rowId = rData.data.iid;\\n        rowId = ijf.snippets.popFrameworkWlr.cleanRowId(rowId);\\n\\n        var myData = ijf.session.worklogReportData[rowId];\\n\\n        if (!myData)\\n            return;\\n\\n        var elKey = \\\"rootWlrPopDiv_\\\" + rowId;\\n        var elHeadKey = \\\"rootWlrPopDiv_\\\" + rowId + \\\"_header\\\";\\n        var elBodyKey = \\\"rootWlrPopDiv_\\\" + rowId + \\\"_body\\\";\\n\\n        //clear it if it exists...\\n        if (ijf.snippets.popFrameworkWlr.popDivs.roots.hasOwnProperty(elKey)) {\\n            var element = document.getElementById(ijf.snippets.popFrameworkWlr.popDivs.roots[elKey].id);\\n            element.parentNode.removeChild(element);\\n            delete ijf.snippets.popFrameworkWlr.popDivs.roots[elKey];\\n            //console.log(\\\"Dropped dropped div...\\\");\\n        }\\n\\n        var newDiv = document.createElement('div');\\n        newDiv.setAttribute(\\\"id\\\", elKey);\\n        //        newDiv.style.cssText = \\\"position:absolute; border-radius: 3px; border: groove #101010 4px; padding: 0px; background-color:#F5F5F5; text-align: left; font-size:10px; width:265px;\\\";\\n        newDiv.style.cssText = \\\"position:absolute; border-radius: 4px; border:1px solid #101010; padding: 0px; background-color:#F5F5F5; text-align: left; font-size:10px; width:265px;\\\";\\n        x = e.clientX + window.scrollX;\\n        y = e.clientY + window.scrollY;\\n        x -= 2;\\n        y -= 2;\\n        y = y + 15\\n        newDiv.style.left = x + \\\"px\\\";\\n        newDiv.style.top = y + \\\"px\\\";\\n        newDiv.style.height = \\\"500px\\\";\\n        newDiv.style.scroll = \\\"none\\\";\\n        newDiv.style.padding = \\\"0px\\\";\\n        newDiv.onclick = function(ev) {\\n            this.style.zIndex = 9999;\\n        }\\n        ;\\n\\n        //       ijf.snippets.popFrameworkWlr.popDivs.testInt=ijf.snippets.popFrameworkWlr.popDivs.testInt+100;\\n\\n        newDiv.style.display = \\\"block\\\";\\n        newDiv.style.zIndex = 9999;\\n\\n        popDivContent = \\\"<div id=\\\" + elHeadKey + \\\" style=\\\\\\\"width:100%; height:25px;  z-index: 10;  background-color: #101010;  color: white;border-top-right-radius: 4px; border-top-left-radius: 4px; text-align: center;\\\\\\\"><span style=\\\\\\\"margin-top:4px; width:90%;float:left;cursor: move;font-weight:bold\\\\\\\">Worklog (drag me)</span><span style=\\\\\\\"margin-top:4px; color:white;width:10%;float:right;cursor:pointer;\\\\\\\" onClick=\\\\\\\"ijf.snippets.popFrameworkWlr.onRootDbClick(null,null, null ,null, null,'\\\" + rowId + \\\"',null,null)\\\\\\\">X</span></div>\\\";\\n\\n        popDivContent += \\\"<div style='margin-left:5px;margin-top:5px'>Date:&nbsp;&nbsp;<span style='font-weight:bold;font-size:14px'>\\\" + moment(rData.get('wlStarted')).local().format('YYYY-MM-DD HH:mm') + \\\"</span> <span style='float:right;margin: 2px 10px 0px 0px;'><span style='font-size:14px'>Total: </span><span id='\\\" + elBodyKey + \\\"_gridTotal' style='display:none'></span><span  style='font-size:14px' id='\\\" + elBodyKey + \\\"_runningTotal'></span></div>\\\";\\n        popDivContent += \\\"<div style='margin-left:5px'>Key:&nbsp;&nbsp;&nbsp;<span style='font-weight:bold;font-size:14px'>\\\" + rData.get('keyOg') + \\\"</span><span style='font-size:16px;font-weight:bold'></div>\\\";\\n        popDivContent += \\\"<hr>\\\";\\n\\n        popDivContent = popDivContent + \\\"<div id=\\\" + elBodyKey + \\\" style=\\\\\\\"width:98%;height:620px;padding: 0px;overflow-x:  hidden;overflow-y: auto;\\\\\\\"></div> \\\";\\n\\n        newDiv.innerHTML = popDivContent;\\n        var isThisTheNode = document.body.appendChild(newDiv);\\n        ijf.snippets.popFrameworkWlr.popDivs.roots[elKey] = newDiv;\\n\\n        //now populate correct data\\n\\n        ijf.snippets.popFrameworkWlr.generateEdit(document.getElementById(elBodyKey), myData);\\n        // ijf.snippets.popFrameworkWlr.generateAdd(elBodyKey, rData.data.iid, thisObj.grid, rowIndex);\\n\\n        ijf.snippets.popFrameworkWlr.dragElement(document.getElementById(elKey));\\n        //console.log(\\\"Added DIV to screen: \\\" + elKey);\\n\\n    },\\n\\n    onRootDbClick: function(thisObj, td, cellIndex, record, tr, rowIndex, e, eOpts) {\\n\\n        if(thisObj)\\n        {\\n                var rData = thisObj.grid.getStore().getData().items[rowIndex];\\n                var rowId = rData.data.iid;\\n                var elKey = \\\"rootWlrPopDiv_\\\" + rowId;\\n        }\\n        else\\n        {\\n                var elKey = \\\"rootWlrPopDiv_\\\" + rowIndex;                \\n        }\\n\\n        //console.log(\\\"Attempting to drop div: \\\" + elKey);\\n        if (ijf.snippets.popFrameworkWlr.popDivs.roots.hasOwnProperty(elKey)) {\\n\\n            var element = document.getElementById(ijf.snippets.popFrameworkWlr.popDivs.roots[elKey].id);\\n            element.parentNode.removeChild(element);\\n            delete ijf.snippets.popFrameworkWlr.popDivs.roots[elKey];\\n            //console.log(\\\"Dropped dropped div...\\\");\\n\\n        }\\n    },\\n    generateEdit: function(inContainer, inDataOG) {\\n\\n        /* you must pre create a set of divs that can be rendered to, in the DOM*/\\n\\n        var retHtml = \\\"<table cellspacing=0 cellpadding=0 style='padding-left:3px;width:100%'>\\\";\\n\\n        var inData = inDataOG;\\n        if (!inData)\\n            return;\\n\\n        var runningTotal = 0;\\n\\n        retHtml += \\\"<tr><td><div id=\\\\\\\"wlPopDivWlr_\\\" + inContainer.id + \\\"_\\\" + inData.wlRaw.id + \\\"\\\\\\\"></div></td></tr>\\\";\\n        retHtml += \\\"<tr><td><hr></td></tr>\\\";\\n\\n        retHtml += \\\"<tr><td><div id=\\\\\\\"wlPopDivAddWlr_\\\" + inContainer.id + \\\"\\\\\\\"></div></td></tr>\\\";\\n        retHtml += \\\"<tr><td><hr></td></tr>\\\";\\n        retHtml += \\\"</table>\\\";\\n        inContainer.innerHTML = retHtml;\\n        //structure in place\\n\\n        //define model for this\\n        if (!Ext.ClassManager.isCreated('Model.class.popFormUiModel'))\\n            Ext.define('popFormUiModel', {\\n                extend: 'Ext.data.Model',\\n                fields: [{\\n                    name: 'key',\\n                    type: 'string'\\n                }, {\\n                    name: 'summary',\\n                    type: 'string'\\n                }, {\\n                    name: 'sortsummary',\\n                    type: 'string'\\n                }]\\n            });\\n\\n        var tktLookup = Ext.create('Ext.data.Store', {\\n            //storeId: inContainer.id + \\\"_\\\" + wl.wlRaw.id + '_formLu',\\n            model: 'popFormUiModel',\\n            autoLoad: false,\\n            autoLoad: false,\\n            proxy: {\\n                type: 'ajax',\\n                //url: g_root + \\\"/rest/api/2/search?jql=key=REPLACETHIS or text~REPLACETHIS&maxResults=25&fields=summary\\\",\\n                url: g_root + \\\"/rest/api/2/search?jql=text~REPLACETHIS&maxResults=25&fields=summary\\\",\\n                extraParams: null,\\n                filterParam: \\\"query\\\",\\n                groupParam: '',\\n                limitParam: '',\\n                pageParam: '',\\n                sortParam: '',\\n                startParam: '',\\n                reader: {\\n                    type: 'json',\\n                    root: 'issues'\\n                }\\n            }\\n        });\\n\\n        tktLookup.loadData([{\\n            \\\"key\\\": inDataOG.keyOg,\\n            \\\"summary\\\": inDataOG.keyOg + \\\" \\\" + inDataOG.summary\\n        }]);\\n\\n        tktLookup.addListener(\\\"load\\\", function(thisStore, records, successful, operation, eOpts) {\\n            records.forEach(function(r) {\\n                r.set(\\\"key\\\", r.data[\\\"key\\\"]);\\n                //r.set(\\\"summary\\\", \\\"<b>\\\" + r.data[\\\"key\\\"] + \\\"</b> \\\" + ijfUtils.sanitize(r.data.fields[\\\"summary\\\"]));\\n                r.set(\\\"summary\\\", r.data[\\\"key\\\"] + \\\"  \\\" + ijfUtils.sanitize(r.data.fields[\\\"summary\\\"]));\\n                r.set(\\\"sortsummary\\\", r.data.fields[\\\"summary\\\"]);\\n            });\\n            //the base sort got \\n            //todo:  remove dupes\\n            var qText = operation._params.query;\\n\\n            if (qText.indexOf(\\\"-\\\") > -1) {\\n                //look for spec issue key\\n                var projectSearch = \\\"/rest/api/2/search?jql=key=\\\" + qText + \\\"&maxResults=25&fields=summary\\\";\\n                var additionalRows = ijfUtils.jiraApiSync('GET', projectSearch, null);\\n                if (additionalRows.issues) {\\n                    additionalRows.issues.forEach(function(r) {\\n                        var iRow = Ext.create(thisStore.model);\\n                        iRow.set(\\\"key\\\", r.key);\\n                        iRow.set(\\\"summary\\\", r.key + \\\"  \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n                        iRow.set(\\\"sortsummary\\\", r.fields[\\\"summary\\\"]);\\n                        thisStore.insert(0, iRow);\\n                    });\\n                }\\n            } else {\\n\\n                var projectSearch = \\\"/rest/api/2/search?jql=project=\\\" + qText + \\\"&maxResults=25&fields=summary\\\";\\n                var additionalRows = ijfUtils.jiraApiSync('GET', projectSearch, null);\\n                if (additionalRows.issues) {\\n                    additionalRows.issues.forEach(function(r) {\\n                        var iRow = Ext.create(thisStore.model);\\n                        iRow.set(\\\"key\\\", r.key);\\n                        //iRow.set(\\\"summary\\\", \\\"<b>\\\" + r.key + \\\"</b> \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n                        iRow.set(\\\"summary\\\", r.key + \\\"  \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n                        iRow.set(\\\"sortsummary\\\", r.fields[\\\"summary\\\"]);\\n                        thisStore.insert(0, iRow);\\n                    });\\n                }\\n\\n            }\\n\\n            thisStore.sort(\\\"sortsummary\\\", 'ASC');\\n        });\\n\\n        //panel to edit the WL, simulate wl record...\\n        var wl = inData;\\n\\n        runningTotal = runningTotal + wl.wlHours / 1;\\n        var wlPanel = new Ext.FormPanel({\\n            labelStyle: \\\"width:70px;background-color:transparent\\\",\\n            //style: \\\"background-transparent\\\",\\n            fieldStyle: \\\"width:242px\\\",\\n            border: false,\\n            bodyStyle: \\\"background:transparent\\\",\\n            width: 242,\\n            items: [{\\n                xtype: 'panel',\\n                width: \\\"100%\\\",\\n                border: false,\\n                bodyStyle: 'background:transparent',\\n                items: [{\\n                    xtype: 'simplelink',\\n                    text: '(Move this worklog to different ticket)',\\n                    style: {\\n                        'float': 'left',\\n                        'font-size': '10px',\\n                    },\\n                    handler: function(f, i, n, t) {\\n                        this.up().up().items.items[0].setHidden(true);\\n                        this.up().up().items.items[1].setHidden(false);\\n                    }\\n                }, {\\n                    xtype: 'simplelink',\\n                    text: '(Delete this worklog)',\\n                    clickedOnce: false,\\n                    style: {\\n                        'float': 'left',\\n                        'font-size': '10px',\\n                    },\\n                    handler: function(f, i, n, t) {\\n\\n                        if (this.clickedOnce) {\\n                            var parentPanel = this.up().up();\\n                            var onSuccessDelete = function(d, r, e) {\\n                                ijf.snippets.popFrameworkWlr.handleSuccessDelete(wl, parentPanel, d, r, e, inContainer.id);\\n                            }\\n                            var onError = function(d, r, e) {\\n                                ijf.snippets.popFrameworkWlr.handleError(wl, parentPanel, d, r, e, \\\"Error deleting:\\\")\\n                            }\\n                            parentPanel.mask();\\n                            ijfUtils.jiraApi(\\\"DELETE\\\", \\\"/rest/api/2/issue/\\\" + wl.keyOg + \\\"/worklog/\\\" + wl.wlRaw.id, null, onSuccessDelete, onError);\\n\\n                        }\\n                        this.clickedOnce = true;\\n                        this.up().items.items[0].setHidden(true);\\n                        this.update(\\\"<span style='color:red;font-weight:bold'>Click to confirm delete</span>\\\");\\n                    }\\n                }]\\n\\n            }, {\\n                xtype: 'combobox',\\n                displayField: 'summary',\\n                width: 242,\\n                valueField: 'key',\\n                hideLabel: true,\\n                allowBlank: false,\\n                value: null,\\n                //wl.key,\\n                //{\\\"key\\\":wl.key,\\\"summary\\\":wl.summary},\\n                queryMode: 'remote',\\n                queryParam: \\\"query\\\",\\n                forceSelection: false,\\n                queryCaching: false,\\n                minChars: 2,\\n                emptyText: 'Search by Summary or Key...',\\n                hidden: true,\\n                store: tktLookup,\\n                queryDelay: 1500,\\n                autoComplete: false,\\n                listeners: {\\n                    beforequery: function(queryPlan, eOpts) {\\n                        if (!queryPlan.query)\\n                            return false;\\n                        var qText = \\\"\\\\\\\"\\\" + queryPlan.query + \\\"*\\\\\\\"\\\";\\n                        queryPlan.combo.store.proxy.url = queryPlan.combo.store.proxy.url.replace(/text~.*?&maxResults/, \\\"text~\\\" + qText + \\\"&maxResults\\\");\\n                        //queryPlan.combo.store.proxy.url = queryPlan.combo.store.proxy.url.replace(/key=.*? or/, \\\"key=\\\" + qText + \\\" or\\\");\\n                        return true;\\n                    },\\n                    change: function(f, n, o) {\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                    }\\n                }\\n            }, {\\n                xtype: 'datefield',\\n                labelStyle: \\\"font-size:10px;font-weight:bold;width:70px;background-color:transparent\\\",\\n                width: 190,\\n                flex: 100,\\n                fieldLabel: \\\"Log Date\\\",\\n                allowBlank: false,\\n                value: new Date(wl.wlStarted),\\n                invalidText: \\\"Date must be in format mm/dd/yyyy\\\",\\n                listeners: {\\n                    change: function(f, n, o) {\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                    }\\n                }\\n            }, {\\n                xtype: 'numberfield',\\n                labelStyle: \\\"font-size:10px;font-weight:bold;width:70px\\\",\\n                width: 150,\\n                fieldLabel: \\\"Log Hours\\\",\\n                allowBlank: false,\\n                value: wl.wlHours,\\n                minValue: 0,\\n                listeners: {\\n                    change: function(f, n, o) {\\n                        var newVal=0;\\n                        var oldVal = 0;\\n                        if(!isNaN(n)) newVal = n/1;\\n                        if(!isNaN(o)) oldVal = o/1;\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                        var el = document.getElementById(inContainer.id + \\\"_runningTotal\\\");\\n                        var cVal = el.innerText / 1;\\n                        el.innerText = cVal - oldVal + newVal;                \\n                    }\\n                }\\n            }, {\\n                xtype: 'textarea',\\n                labelStyle: \\\"width:70px;background-color:transparent\\\",\\n                style: \\\"background:transparent\\\",\\n                fieldStyle: \\\"width:238px\\\",\\n                height: \\\"30px\\\",\\n                emptyText: \\\"Log message, enter to update...\\\",\\n                hideLabel: true,\\n                allowBlank: true,\\n                value: wl.wlComment,\\n                listeners: {\\n                    change: function(f, n, o) {\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                    }\\n                }\\n            }, {\\n                xtype: 'button',\\n                text: 'save',\\n                scale: 'small',\\n                hidden: true,\\n                style: {\\n                    'float': 'right'\\n                },\\n                wlHoursOG: wl.wlHours,\\n                handler: function() {\\n                    var jData = {};\\n                    //you need to rip through the inData.wlRaw.id\\n                    var parentPanel = this.up();\\n                    var wlDateOG = new Date(wl.wlStarted);\\n                    var wlDateNW = null;\\n                    var wlHoursOG = this.wlHoursOG;\\n                    var wlHoursNW = null;\\n                    var wlCommentOG = wl.wlComment;\\n                    var wlCommentNW = null;\\n                    var wlKeyOG = wl.keyOg;\\n                    var wlKeyNW = null;\\n                    var wlSummaryNew = \\\"\\\";\\n\\n                    parentPanel.items.items.forEach(function(c) {\\n                        if (c.fieldDirty) {\\n                            switch (c.xtype) {\\n                            case \\\"combobox\\\":\\n                                //jData[\\\"key\\\"] = c.getValue();\\n                                wlKeyNW = c.getValue();\\n                                var t = c.getDisplayValue().split(\\\" \\\");\\n                                t.splice(0, 1);\\n                                wlSummaryNew = t.join(\\\" \\\");\\n                                break;\\n                            case \\\"datefield\\\":\\n                                jData[\\\"started\\\"] = moment(c.getValue()).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\";\\n                                wlDateNW = new Date(c.getValue());\\n                                break;\\n                            case \\\"textarea\\\":\\n                                jData[\\\"comment\\\"] = c.getValue();\\n                                wlCommentNW = c.getValue();\\n                                break;\\n                            case \\\"numberfield\\\":\\n                                var secs = c.getValue() / 1 * 60 * 60;\\n                                wlHoursNW = c.getValue();\\n                                jData[\\\"timeSpentSeconds\\\"] = secs;\\n                                //\\n                                break;\\n                            }\\n                        }\\n                    });\\n\\n                    //console.log(JSON.stringify(jData));\\n\\n                    var onSuccessSave = function(d, r, e) {\\n                        var cLog = wl;\\n                        var cPan = parentPanel;\\n                        //still need to look at reponse...\\n                        if ((r == \\\"success\\\") && (d.status!=\\\"error\\\"))\\n                            //if (d.resultSet.indexOf(\\\"error\\\") < 0)\\n                            ijf.snippets.popFrameworkWlr.handleSuccessSave(cLog, cPan, d, r, e, inContainer.id, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW);\\n                        else\\n                            ijf.snippets.popFrameworkWlr.handleError(cLog, cPan, d, r, e, \\\"Error: \\\");\\n                    }\\n                    var onErrorSave = function(d, r, e) {\\n                        var cLog = wl;\\n                        var cPan = parentPanel;\\n                        ijf.snippets.popFrameworkWlr.handleError(cLog, cPan, d, r, e, \\\"Error: \\\");\\n                    }\\n                    parentPanel.mask();\\n\\n                    //if key change but no other change....\\n                    if ((jData.hasOwnProperty(\\\"started\\\")) || (jData.hasOwnProperty(\\\"comment\\\")) || (jData.hasOwnProperty(\\\"timeSpentSeconds\\\"))) {\\n                        ijfUtils.jiraApi(\\\"PUT\\\", \\\"/rest/api/2/issue/\\\" + wl.keyOg + \\\"/worklog/\\\" + wl.wlRaw.id, JSON.stringify(jData), onSuccessSave, onErrorSave);\\n                    } else {\\n                        if (wlKeyNW) //this is a key change only....\\n                        {\\n                            var cLog = wl;\\n                            cLog.summary = wlSummaryNew;\\n                            var cPan = parentPanel;\\n                            ijf.snippets.popFrameworkWlr.handleSuccessSave(cLog, cPan, null, null, null, inContainer.id, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW);\\n                        }\\n                    }\\n\\n                }\\n            }]\\n        });\\n        var domKey = document.getElementById(\\\"wlPopDivWlr_\\\" + inContainer.id + \\\"_\\\" + wl.wlRaw.id);\\n        wlPanel.render(domKey);\\n\\n\\n\\n        /*Add an ADD ADD ADD ADD form to the bottom of the table */\\n\\n\\n        var tktLookup = Ext.create('Ext.data.Store', {\\n            storeId: inContainer.id + 'formLu',\\n            model: 'popFormUiModel',\\n            autoLoad: false,\\n            autoLoad: false,\\n            proxy: {\\n                type: 'ajax',\\n                //url: g_root + \\\"/rest/api/2/search?jql=key=REPLACETHIS or text~REPLACETHIS&maxResults=25&fields=summary\\\",\\n                url: g_root + \\\"/rest/api/2/search?jql=text~REPLACETHIS&maxResults=25&fields=summary\\\",\\n                extraParams: null,\\n                filterParam: \\\"query\\\",\\n                groupParam: '',\\n                limitParam: '',\\n                pageParam: '',\\n                sortParam: '',\\n                startParam: '',\\n                reader: {\\n                    type: 'json',\\n                    root: 'issues'\\n                }\\n            }\\n        });\\n\\n        tktLookup.addListener(\\\"load\\\", function(thisStore, records, successful, operation, eOpts) {\\n            records.forEach(function(r) {\\n                r.set(\\\"key\\\", r.data[\\\"key\\\"]);\\n                //r.set(\\\"summary\\\", \\\"<b>\\\" + r.data[\\\"key\\\"] + \\\"</b> \\\" + ijfUtils.sanitize(r.data.fields[\\\"summary\\\"]));\\n                r.set(\\\"summary\\\", r.data[\\\"key\\\"] + \\\"  \\\" + ijfUtils.sanitize(r.data.fields[\\\"summary\\\"]));\\n                r.set(\\\"sortsummary\\\", r.data.fields[\\\"summary\\\"]);\\n            });\\n\\n            var qText = operation._params.query;\\n\\n            if (qText.indexOf(\\\"-\\\") > -1) {\\n                //look for spec issue key\\n                var projectSearch = \\\"/rest/api/2/search?jql=key=\\\" + qText + \\\"&maxResults=25&fields=summary\\\";\\n                var additionalRows = ijfUtils.jiraApiSync('GET', projectSearch, null);\\n                if (additionalRows.issues) {\\n                    additionalRows.issues.forEach(function(r) {\\n                        var iRow = Ext.create(thisStore.model);\\n                        iRow.set(\\\"key\\\", r.key);\\n                        iRow.set(\\\"summary\\\", r.key + \\\"  \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n                        iRow.set(\\\"sortsummary\\\", r.fields[\\\"summary\\\"]);\\n                        thisStore.insert(0, iRow);\\n                    });\\n                }\\n            } else {\\n\\n                var projectSearch = \\\"/rest/api/2/search?jql=project=\\\" + qText + \\\"&maxResults=25&fields=summary\\\";\\n                var additionalRows = ijfUtils.jiraApiSync('GET', projectSearch, null);\\n                if (additionalRows.issues) {\\n                    additionalRows.issues.forEach(function(r) {\\n                        var iRow = Ext.create(thisStore.model);\\n                        iRow.set(\\\"key\\\", r.key);\\n                        //iRow.set(\\\"summary\\\", \\\"<b>\\\" + r.key + \\\"</b> \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n                        iRow.set(\\\"summary\\\", r.key + \\\"  \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n                        iRow.set(\\\"sortsummary\\\", r.fields[\\\"summary\\\"]);\\n                        thisStore.insert(0, iRow);\\n                    });\\n                }\\n            }\\n\\n            thisStore.sort(\\\"sortsummary\\\", 'ASC');\\n        });\\n\\n        tktLookup.loadData([{\\n            \\\"key\\\": inDataOG.keyOg,\\n            \\\"summary\\\": inDataOG.keyOg + \\\" \\\" + inDataOG.summary,\\n            \\\"sortsummary\\\": inDataOG.summary\\n        }]);\\n\\n        var wlAddPanel = new Ext.FormPanel({\\n            labelStyle: \\\"width:70px;background-color:transparent\\\",\\n            //style: \\\"background-transparent\\\",\\n            fieldStyle: \\\"width:242px\\\",\\n            border: false,\\n            bodyStyle: \\\"background:transparent\\\",\\n            width: 242,\\n            items: [{\\n                xtype: 'panel',\\n                width: \\\"100%\\\",\\n                border: false,\\n                bodyStyle: 'background:transparent',\\n                items: [{\\n                    xtype: 'panel',\\n                    html: \\\"<b>Add New Workog</b>\\\",\\n                    bodyStyle: 'background:transparent',\\n                }, {\\n                    xtype: 'simplelink',\\n                    text: '(Add new worklog to different issue)',\\n                    style: {\\n                        'float': 'left',\\n                        'font-size': '10px',\\n                    },\\n                    handler: function(f, i, n, t) {\\n                        this.up().up().items.items[0].update(\\\"<br>Search for Issue:<br>\\\");\\n                        this.up().up().items.items[0].text = \\\"\\\";\\n                        this.up().up().items.items[1].setHidden(false);\\n                    }\\n                }]\\n\\n            }, {\\n                xtype: 'combobox',\\n                displayField: 'summary',\\n                width: 242,\\n                valueField: 'key',\\n                hideLabel: true,\\n                allowBlank: false,\\n                value:inDataOG.keyOg,\\n                //wl.key,\\n                //{\\\"key\\\":wl.key,\\\"summary\\\":wl.summary},\\n                queryMode: 'remote',\\n                queryParam: \\\"query\\\",\\n                forceSelection: false,\\n                queryCaching: false,\\n                minChars: 2,\\n                emptyText: 'Search by Summary or Key...',\\n                hidden: true,\\n                store: tktLookup,\\n                queryDelay: 1500,\\n                autoComplete: false,\\n                listeners: {\\n                    beforequery: function(queryPlan, eOpts) {\\n                        if (!queryPlan.query)\\n                            return false;\\n                        var qText = \\\"\\\\\\\"\\\" + queryPlan.query + \\\"*\\\\\\\"\\\";\\n                        queryPlan.combo.store.proxy.url = queryPlan.combo.store.proxy.url.replace(/text~.*?&maxResults/, \\\"text~\\\" + qText + \\\"&maxResults\\\");\\n                        queryPlan.rawQuery = true;\\n                        //queryPlan.combo.store.proxy.url = queryPlan.combo.store.proxy.url.replace(/key=.*? or/, \\\"key=\\\" + qText + \\\" or\\\");\\n                        return true;\\n                    },\\n                    change: function(f, n, o) {\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                    }\\n                }\\n            }, {\\n                xtype: 'datefield',\\n                labelStyle: \\\"font-size:10px;font-weight:bold;width:70px;background-color:transparent\\\",\\n                width: 190,\\n                flex: 100,\\n                fieldLabel: \\\"Log Date\\\",\\n                value: new Date(),\\n                allowBlank: false,\\n                invalidText: \\\"Date must be in format mm/dd/yyyy\\\",\\n                listeners: {\\n                    change: function(f, n, o) {\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                    }\\n                }\\n            }, {\\n                xtype: 'numberfield',\\n                labelStyle: \\\"font-size:10px;font-weight:bold;width:70px\\\",\\n                width: 150,\\n                fieldLabel: \\\"Log Hours\\\",\\n                value: 0,\\n                minValue: 0,\\n                allowBlank: false,\\n                listeners: {\\n                    change: function(f, n, o) {\\n                        var newVal=0;\\n                        var oldVal = 0;\\n                        if(!isNaN(n)) newVal = n/1;\\n                        if(!isNaN(o)) oldVal = o/1;\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                        var el = document.getElementById(inContainer.id + \\\"_runningTotal\\\");\\n                        var cVal = el.innerText / 1;\\n                        el.innerText = cVal - oldVal + newVal;      \\n                    }\\n                }\\n            }, {\\n                xtype: 'textarea',\\n                labelStyle: \\\"width:70px;background-color:transparent\\\",\\n                style: \\\"background:transparent\\\",\\n                fieldStyle: \\\"width:238px\\\",\\n                height: \\\"30px\\\",\\n                emptyText: \\\"Log message, enter to update...\\\",\\n                hideLabel: true,\\n                allowBlank: true,\\n                listeners: {\\n                    change: function(f, n, o) {\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                    }\\n                }\\n            }, {\\n                xtype: 'button',\\n                text: 'Add',\\n                scale: 'small',\\n                hidden: true,\\n                style: {\\n                    'float': 'right'\\n                },\\n                wlHoursOG: 0,\\n                wlDateOG: moment(new Date()).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\",\\n                handler: function() {\\n\\n                    //you need to rip through the inData.wlRaw.id\\n                    var parentPanel = this.up();\\n                    var wlDateOG = moment(new Date()).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\";\\n                    var wlDateNW = null;\\n                    var wlHoursOG = null;\\n                    var wlHoursNW = null;\\n                    var wlCommentOG = null;\\n                    var wlCommentNW = null;\\n                    var wlKeyOG = inDataOG.keyOg;\\n                    var wlKeyNW = null;\\n\\n                    var lsecs = parentPanel.items.items[3].getValue() / 1 * 60 * 60;\\n\\n                    //if 0 bail\\n                    if (lsecs <= 0) {\\n                        parentPanel.update(\\\"Hours must be greater than zero\\\");\\n                        return;\\n                    }\\n\\n                    var dateCtl = parentPanel.items.items[2];\\n                    wlDateNW = moment(dateCtl.getValue()).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\";\\n\\n                    var keyCntl = parentPanel.items.items[1];\\n                    wlKeyNW = keyCntl.getValue();\\n                    var newSummary = keyCntl.store.getData().items.reduce(function(inV, r) {\\n                        if (r.data.key == wlKeyNW)\\n                            inV = r.data.sortsummary;\\n                        return inV;\\n                    }, null);\\n\\n                    wlCommentNW = parentPanel.items.items[4].getValue();\\n\\n                    var jData = {\\n                        \\\"started\\\": wlDateNW,\\n                        \\\"comment\\\": wlCommentNW,\\n                        \\\"timeSpentSeconds\\\": lsecs\\n                    };\\n\\n                    var onSuccessSave = function(d, r, e) {\\n                        var cPan = parentPanel;\\n                        //still need to look at reponse...\\n                        if (d.id) {\\n                            var cLog = {\\n\\n                                key: wlKeyNW,\\n                                summary: newSummary,\\n                                wlComment: wlCommentNW,\\n                                wlHours: lsecs / 60 / 60,\\n                                wlStarted: wlDateNW,\\n                                wlRaw: d\\n                            }\\n\\n                            ijf.snippets.popFrameworkWlr.handleSuccessAdd(cLog, cPan, d, r, e, inContainer.id, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW);\\n                        } else {\\n                            ijf.snippets.popFrameworkWlr.handleError(wl, cPan, d, r, e, \\\"Error saving:\\\");\\n                        }\\n                    }\\n\\n                    var onErrorSave = function(d, r, e) {\\n                        ijf.snippets.popFrameworkWlr.handleError(null, parentPanel, d, r, e);\\n                    }\\n                    parentPanel.mask();\\n\\n                    ijfUtils.jiraApi(\\\"POST\\\", \\\"/rest/api/2/issue/\\\" + wlKeyNW + \\\"/worklog\\\", JSON.stringify(jData), onSuccessSave, onErrorSave);\\n\\n                }\\n            }]\\n        });\\n        var domKey = document.getElementById(\\\"wlPopDivAddWlr_\\\" + inContainer.id);\\n        wlAddPanel.render(domKey);\\n        //update total at top\\n        document.getElementById(inContainer.id + \\\"_runningTotal\\\").innerText = runningTotal\\n        document.getElementById(inContainer.id + \\\"_gridTotal\\\").innerText = runningTotal\\n    },\\n    handleSuccessAdd: function(cWl, cPan, d, r, e, inContainerId, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW, newSummary) {\\n        cPan.update(\\\"Added, please refesh to update table.\\\");\\n\\n        cPan.items.items[5].setHidden(\\\"true\\\");\\n        ijf.snippets.popFrameworkWlr.setStale();\\n\\n    },\\n    handleSuccessDelete: function(cWl, parentPanel, d, r, e, inContainerId) {\\n\\n        parentPanel.update(\\\"Worklog deleted\\\");\\n        ijf.snippets.popFrameworkWlr.setStale();\\n        var dIt = function() {\\n            parentPanel.setHidden(\\\"true\\\")\\n        };\\n        //window.setTimeout(dIt, 1000);\\n\\n    },\\n\\n    handleSuccessSave: function(cWl, cPan, d, r, e, inContainerId, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW, newSummary) {\\n        var resMessage = \\\"Saved, please refresh to update table.\\\";\\n\\n        var isIssueChange = false;\\n\\n        if (wlKeyNW) {\\n\\n            //entry point here for key change, will already have saved hours, comment\\n\\n            isIssueChange = true;\\n\\n            //delete the current worklog  \\n            var cRes = ijfUtils.jiraApiSync(\\\"DELETE\\\", \\\"/rest/api/2/issue/\\\" + cWl.keyOg + \\\"/worklog/\\\" + cWl.wlRaw.id, null);\\n            //add the current worklog \\n\\n            //date is new or old...either way look for column\\n            isDateChange = true;\\n            var tDate = wlDateNW;\\n            if (!tDate) {\\n                tDate = wlDateOG;\\n                isDateChange = false;\\n            }\\n\\n           var tCmnt = wlCommentOG;\\n           if(wlCommentNW) tCmnt = wlCommentNW;\\n\\n          var tHrs = wlHoursOG;\\n          if(wlHoursNW) tHrs = wlHoursNW;\\n\\n            var jData = {\\n                \\\"started\\\": moment(tDate).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\",\\n                \\\"comment\\\": tCmnt,\\n                \\\"timeSpentSeconds\\\": tHrs / 1 * 60 * 60\\n            };\\n            var cRes = ijfUtils.jiraApiSync(\\\"POST\\\", \\\"/rest/api/2/issue/\\\" + wlKeyNW + \\\"/worklog\\\", JSON.stringify(jData));\\n\\n            resMessage = \\\"Worklog moved to new issue, please refresh table\\\";\\n\\n        }\\n\\n        cPan.update(resMessage);\\n        ijf.snippets.popFrameworkWlr.setStale();\\n\\n    },\\n    closeAllPops: function() {\\n        if (ijf.snippets.popFrameworkWlr.popDivs.roots) {\\n            Object.keys(ijf.snippets.popFrameworkWlr.popDivs.roots).forEach(function(r) {\\n                var k = ijf.snippets.popFrameworkWlr.popDivs.roots[r];\\n                var element = document.getElementById(k.id);\\n                var b = element.parentElement;\\n                if (b) {\\n                    b.removeChild(k);\\n                    delete ijf.snippets.popFrameworkWlr.popDivs.roots[r];\\n                }\\n            });\\n        }\\n    },\\n    handleError: function(cWl, cPan, d, r, e, eMessage) {\\n        cPan.update(eMessage + \\\" \\\" + d.resultSet);\\n    },\\n    generateAdd: function(inData) {\\n        return \\\"adding\\\";\\n    },\\n    dragElement: function(elmnt) {\\n        var pos1 = 0\\n          , pos2 = 0\\n          , pos3 = 0\\n          , pos4 = 0;\\n        if (document.getElementById(elmnt.id + \\\"_header\\\")) {\\n            // if present, the header is where you move the DIV from:\\n            document.getElementById(elmnt.id + \\\"_header\\\").onmousedown = dragMouseDown;\\n        } else {\\n            // otherwise, move the DIV from anywhere inside the DIV:\\n            elmnt.onmousedown = dragMouseDown;\\n        }\\n\\n        function dragMouseDown(e) {\\n            e = e || window.event;\\n            e.preventDefault();\\n            // get the mouse cursor position at startup:\\n            pos3 = e.clientX;\\n            pos4 = e.clientY;\\n            document.onmouseup = closeDragElement;\\n            // call a function whenever the cursor moves:\\n            document.onmousemove = elementDrag;\\n        }\\n\\n        function elementDrag(e) {\\n            e = e || window.event;\\n            e.preventDefault();\\n            // calculate the new cursor position:\\n            pos1 = pos3 - e.clientX;\\n            pos2 = pos4 - e.clientY;\\n            pos3 = e.clientX;\\n            pos4 = e.clientY;\\n            // set the element's new position:\\n            elmnt.style.top = (elmnt.offsetTop - pos2) + \\\"px\\\";\\n            elmnt.style.left = (elmnt.offsetLeft - pos1) + \\\"px\\\";\\n        }\\n\\n        function closeDragElement() {\\n            // stop moving when mouse button is released:\\n            document.onmouseup = null;\\n            document.onmousemove = null;\\n        }\\n    }\\n\\n}\\n\""},{"name":"popFramework","snippet":"\"popFramework = {\\n    testInt: 0,\\n    popDivs: {\\n        \\\"roots\\\": []\\n    },\\n\\n    onRootHover: function(thisObj, record, item, index, e, eOpts) //(thisObj, td, cellIndex, record, tr, rowIndex, e, eOpts ) \\n    {\\n        var event = new MouseEvent('click',{\\n            'view': window,\\n            'bubbles': true,\\n            'cancelable': true,\\n            'clientX': e.clientX,\\n            'clientY': e.clientY\\n        });\\n        var delayIt = function() {\\n            document.elementFromPoint(e.clientX, e.clientY).dispatchEvent(event);\\n            //document.elementFromPoint(e.clientX, e.clientY).click();\\n        }\\n        window.setTimeout(delayIt, 1000);\\n    },\\n    onRootHoverLeave: function(thisObj, record, item, index, e, eOpts) //(thisObj, td, cellIndex, record, tr, rowIndex, e, eOpts ) \\n    {\\n        var event = new MouseEvent('dblclick',{\\n            'view': window,\\n            'bubbles': true,\\n            'cancelable': true,\\n            'clientX': e.clientX,\\n            'clientY': e.clientY\\n        });\\n        document.elementFromPoint(e.clientX, e.clientY).dispatchEvent(event);\\n    },\\n\\n    onRootClickViaHover: function(thisObj, td, cellIndex, record, tr, rowIndex, e, eOpts) {\\n        var x, y;\\n        var gCols = thisObj.grid.getColumns();\\n        if (gCols[0].text == \\\"Key\\\")\\n         {\\n             //todo;  add pop for the current key and show the summary perhaps desc\\n\\n\\n       \\n            return;\\n        //bail if wrong subgrid\\n        }\\n        var rData = thisObj.grid.getStore().getData().items[rowIndex];\\n\\n        var wlKey = rData.data.iid + \\\"_\\\" + gCols[cellIndex].text;\\n\\n        var myData = ijf.session.myWorklogData[wlKey];\\n\\n        var elKey = \\\"rootPopDiv_\\\" + rowIndex + \\\"_\\\" + cellIndex;\\n        var elHeadKey = \\\"rootPopDiv_\\\" + rowIndex + \\\"_\\\" + cellIndex + \\\"_header\\\";\\n        var elBodyKey = \\\"rootPopDiv_\\\" + rowIndex + \\\"_\\\" + cellIndex + \\\"_body\\\";\\n\\n        //clear it if it exists...\\n        if (ijf.snippets.popFramework.popDivs.roots.hasOwnProperty(elKey)) {\\n            var element = document.getElementById(ijf.snippets.popFramework.popDivs.roots[elKey].id);\\n            element.parentNode.removeChild(element);\\n            delete ijf.snippets.popFramework.popDivs.roots[elKey];\\n            //console.log(\\\"Dropped dropped div...\\\");\\n        }\\n\\n        var newDiv = document.createElement('div');\\n        newDiv.setAttribute(\\\"id\\\", elKey);\\n//        newDiv.style.cssText = \\\"position:absolute; border-radius: 3px; border: groove #101010 4px; padding: 0px; background-color:#F5F5F5; text-align: left; font-size:10px; width:265px;\\\";\\n        newDiv.style.cssText = \\\"position:absolute; border-radius: 4px; border:1px solid #101010; padding: 0px; background-color:#F5F5F5; text-align: left; font-size:10px; width:265px;\\\";\\n        x = e.clientX + window.scrollX;\\n        y = e.clientY + window.scrollY;\\n        x -= 2;\\n        y -= 2;\\n        y = y + 15\\n        newDiv.style.left = x + \\\"px\\\";\\n        newDiv.style.top = y + \\\"px\\\";\\n        newDiv.style.height = \\\"700px\\\";       \\n        newDiv.style.scroll = \\\"none\\\";\\n        newDiv.style.padding = \\\"0px\\\";\\n\\t\\tnewDiv.onclick = function(ev){\\n\\t\\t\\tthis.style.zIndex=9999;\\n\\t\\t};\\n\\n        //       ijf.snippets.popFramework.popDivs.testInt=ijf.snippets.popFramework.popDivs.testInt+100;\\n\\n        newDiv.style.display = \\\"block\\\";\\n        newDiv.style.zIndex = 9999;\\n\\n        popDivContent = \\\"<div id=\\\" + elHeadKey + \\\" style=\\\\\\\"width:100%; height:25px;  z-index: 10;  background-color: #101010;  color: white;border-top-right-radius: 4px; border-top-left-radius: 4px; text-align: center;\\\\\\\"><span style=\\\\\\\"margin-top:4px; width:90%;float:left;cursor: move;font-weight:bold\\\\\\\">\\\"+gCols[cellIndex].text+\\\" Worklogs (drag me)</span><span style=\\\\\\\"margin-top:4px; color:white;width:10%;float:right;cursor:pointer;\\\\\\\" onClick=\\\\\\\"ijf.snippets.popFramework.onRootDbClick(null,null, '\\\" + cellIndex + \\\"',null, null,'\\\" + rowIndex + \\\"',null,null)\\\\\\\">X</span></div>\\\";\\n\\n        popDivContent += \\\"<div style='margin-left:5px;margin-top:5px'>Date:&nbsp;&nbsp;<span style='font-weight:bold;font-size:14px'>\\\" + gCols[cellIndex].text + \\\"</span> <span style='float:right;margin: 2px 10px 0px 0px;'><span style='font-size:14px'>Total: </span><span id='\\\" + elBodyKey + \\\"_gridTotal' style='display:none'></span><span  style='font-size:14px' id='\\\" + elBodyKey + \\\"_runningTotal'></span></div>\\\";\\n        popDivContent += \\\"<div style='margin-left:5px'>Key:&nbsp;&nbsp;&nbsp;<span style='font-weight:bold;font-size:14px'>\\\" + rData.get('iid') + \\\"</span><span style='font-size:16px;font-weight:bold'></div>\\\";\\n        popDivContent += \\\"<hr>\\\";\\n\\n        popDivContent = popDivContent + \\\"<div id=\\\" + elBodyKey + \\\" style=\\\\\\\"width:98%;height:620px;padding: 0px;overflow-x:  hidden;overflow-y: auto;\\\\\\\"></div> \\\";\\n\\n        newDiv.innerHTML = popDivContent;\\n        var isThisTheNode = document.body.appendChild(newDiv);\\n        ijf.snippets.popFramework.popDivs.roots[elKey] = newDiv;\\n\\n        //now populate correct data\\n\\n        ijf.snippets.popFramework.generateEdit(document.getElementById(elBodyKey), myData, thisObj.grid, rData, gCols[cellIndex]);\\n        // ijf.snippets.popFramework.generateAdd(elBodyKey, rData.data.iid, thisObj.grid, rowIndex);\\n\\n        ijf.snippets.popFramework.dragElement(document.getElementById(elKey));\\n        //console.log(\\\"Added DIV to screen: \\\" + elKey);\\n\\n    },\\n\\n    onRootDbClick: function(thisObj, td, cellIndex, record, tr, rowIndex, e, eOpts) {\\n\\n        var elKey = \\\"rootPopDiv_\\\" + rowIndex + \\\"_\\\" + cellIndex;\\n        //console.log(\\\"Attempting to drop div: \\\" + elKey);\\n        if (ijf.snippets.popFramework.popDivs.roots.hasOwnProperty(elKey)) {\\n\\t\\t\\t\\n            var element = document.getElementById(ijf.snippets.popFramework.popDivs.roots[elKey].id);\\n            element.parentNode.removeChild(element);\\n            delete ijf.snippets.popFramework.popDivs.roots[elKey];\\n            //console.log(\\\"Dropped dropped div...\\\");\\n\\n        }\\n    },\\n    generateEdit: function(inContainer, inDataOG, grid, gridRow, gridColumn) {\\n\\n        /* you must pre create a set of divs that can be rendered to, in the DOM*/\\n\\n        var retHtml = \\\"<table cellspacing=0 cellpadding=0 style='padding-left:3px;width:100%'>\\\";\\n\\n        var inData = inDataOG;\\n        if (!inData)\\n            inData = {\\n                worklogs: []\\n            };\\n\\n        //r//etHtml += \\\"<tr><td><span style='font-size:14px'>\\\" + gridColumn.text + \\\"</span> <span style='float:right'><span style='font-size:14px'>Total: </span><span id='\\\" + inContainer.id + \\\"_gridTotal' style='display:none'></span><span id='\\\" + inContainer.id + \\\"_runningTotal'></span></td></tr>\\\";\\n        //retHtml += \\\"<tr><td><span style='font-size:14px'>\\\" + gridRow.get('iid') + \\\"</span><span style='font-size:16px;font-weight:bold'></td></tr>\\\";\\n        //retHtml += \\\"<tr><td></td></tr>\\\";\\n        //retHtml += \\\"<tr><td><hr></td></tr>\\\";\\n        //init if empty \\n\\n        var runningTotal = 0;\\n        inData.worklogs.forEach(function(wl) {\\n            retHtml += \\\"<tr><td><div id=\\\\\\\"wlPopDiv_\\\" + inContainer.id + \\\"_\\\" + wl.wlRaw.id + \\\"\\\\\\\"></div></td></tr>\\\";\\n            retHtml += \\\"<tr><td><hr></td></tr>\\\";\\n        });\\n        retHtml += \\\"<tr><td><div id=\\\\\\\"wlPopDivAdd_\\\" + inContainer.id + \\\"\\\\\\\"></div></td></tr>\\\";\\n        retHtml += \\\"<tr><td><hr></td></tr>\\\";\\n        retHtml += \\\"</table>\\\";\\n        inContainer.innerHTML = retHtml;\\n        //structure in place\\n\\n        //define model for this\\n        if (!Ext.ClassManager.isCreated('Model.class.popFormUiModel'))\\n            Ext.define('popFormUiModel', {\\n                extend: 'Ext.data.Model',\\n                fields: [{\\n                    name: 'key',\\n                    type: 'string'\\n                }, {\\n                    name: 'summary',\\n                    type: 'string'\\n                }, {\\n                    name: 'sortsummary',\\n                    type: 'string'\\n                }]\\n            });\\n\\n        //, new approach, inbound element and render as panel.\\n        inData.worklogs.forEach(function(wl) {\\n\\n            var tktLookup = Ext.create('Ext.data.Store', {\\n                //storeId: inContainer.id + \\\"_\\\" + wl.wlRaw.id + '_formLu',\\n                model: 'popFormUiModel',\\n                autoLoad: false,\\n                autoLoad: false,\\n                proxy: {\\n                    type: 'ajax',\\n                    //url: g_root + \\\"/rest/api/2/search?jql=key=REPLACETHIS or text~REPLACETHIS&maxResults=25&fields=summary\\\",\\n                    url: g_root + \\\"/rest/api/2/search?jql=text~REPLACETHIS&maxResults=25&fields=summary\\\",\\n                    extraParams: null,\\n                    filterParam: \\\"query\\\",\\n                    groupParam: '',\\n                    limitParam: '',\\n                    pageParam: '',\\n                    sortParam: '',\\n                    startParam: '',\\n                    reader: {\\n                        type: 'json',\\n                        root: 'issues'\\n                    }\\n                }\\n            });\\n\\n            tktLookup.loadData([{\\n                \\\"key\\\": wl.key,\\n                \\\"summary\\\": wl.key + \\\" \\\" + wl.summary\\n            }]);\\n\\n            tktLookup.addListener(\\\"load\\\", function(thisStore, records, successful, operation, eOpts) {\\n                records.forEach(function(r) {\\n                    r.set(\\\"key\\\", r.data[\\\"key\\\"]);\\n                    //r.set(\\\"summary\\\", \\\"<b>\\\" + r.data[\\\"key\\\"] + \\\"</b> \\\" + ijfUtils.sanitize(r.data.fields[\\\"summary\\\"]));\\n\\t\\t\\t\\t\\tr.set(\\\"summary\\\", r.data[\\\"key\\\"] + \\\"  \\\" + ijfUtils.sanitize(r.data.fields[\\\"summary\\\"]));\\n                    r.set(\\\"sortsummary\\\", r.data.fields[\\\"summary\\\"]);\\n                });\\t\\t\\t\\t\\n\\t\\t\\t\\t//the base sort got \\n\\t\\t\\t\\t//todo:  remove dupes\\n\\t\\t\\t\\tvar qText = operation._params.query;\\n\\n\\t\\t\\t\\t\\t\\n                if(qText.indexOf(\\\"-\\\")>-1)\\n\\t\\t\\t\\t{\\n                    //look for spec issue key\\n\\t\\t\\t\\t     var projectSearch = \\\"/rest/api/2/search?jql=key=\\\"+qText+\\\"&maxResults=25&fields=summary\\\";\\n\\t\\t\\t\\t     var additionalRows = ijfUtils.jiraApiSync('GET', projectSearch, null);\\n   \\t\\t\\t        if(additionalRows.issues)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tadditionalRows.issues.forEach(function(r){\\n\\t\\t\\t\\t\\t\\tvar iRow = Ext.create(thisStore.model);  \\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"key\\\", r.key);\\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"summary\\\", r.key + \\\"  \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"sortsummary\\\", r.fields[\\\"summary\\\"]);\\n\\t\\t\\t\\t\\t\\tthisStore.insert(0, iRow);\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t}else\\n\\t\\t\\t\\t{\\n\\n\\t\\t\\t\\t    var projectSearch = \\\"/rest/api/2/search?jql=project=\\\"+qText+\\\"&maxResults=25&fields=summary\\\";\\n\\t\\t\\t\\t    var additionalRows = ijfUtils.jiraApiSync('GET', projectSearch, null);\\n   \\t\\t\\t        if(additionalRows.issues)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tadditionalRows.issues.forEach(function(r){\\n\\t\\t\\t\\t\\t\\tvar iRow = Ext.create(thisStore.model);  \\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"key\\\", r.key);\\n\\t\\t\\t\\t\\t\\t//iRow.set(\\\"summary\\\", \\\"<b>\\\" + r.key + \\\"</b> \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"summary\\\", r.key + \\\"  \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"sortsummary\\\", r.fields[\\\"summary\\\"]);\\n\\t\\t\\t\\t\\t\\tthisStore.insert(0, iRow);\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t}\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n                thisStore.sort(\\\"sortsummary\\\", 'ASC');\\n            });\\n\\n            runningTotal = runningTotal + wl.wlHours / 1;\\n            var wlPanel = new Ext.FormPanel({\\n                labelStyle: \\\"width:70px;background-color:transparent\\\",\\n                //style: \\\"background-transparent\\\",\\n                fieldStyle: \\\"width:242px\\\",\\n                border: false,\\n                bodyStyle: \\\"background:transparent\\\",\\n                width: 242,\\n                items: [{\\n                    xtype: 'panel',\\n                    width: \\\"100%\\\",\\n                    border: false,\\n                    bodyStyle: 'background:transparent',\\n                    items: [{\\n                        xtype: 'simplelink',\\n                        text: '(Move this worklog to different ticket)',\\n                        style: {\\n                            'float': 'left',\\n                            'font-size': '10px',\\n                        },\\n                        handler: function(f, i, n, t) {\\n                            this.up().up().items.items[0].setHidden(true);\\n                            this.up().up().items.items[1].setHidden(false);\\n                        }\\n                    }, {\\n                        xtype: 'simplelink',\\n                        text: '(Delete this worklog)',\\n\\t\\t\\t\\t\\t\\tclickedOnce:false,\\n                        style: {\\n                            'float': 'left',\\n                            'font-size': '10px',\\n                        },\\n                        handler: function(f, i, n, t) {\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tif(this.clickedOnce){\\n\\t\\t\\t\\t\\t\\t\\t\\tvar parentPanel = this.up().up();\\n\\t\\t\\t\\t\\t\\t\\t\\tvar onSuccessDelete = function(d, r, e) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   ijf.snippets.popFramework.handleSuccessDelete(wl, parentPanel, d, r, e, inContainer.id, grid, gridRow, gridColumn);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tvar onError = function(d, r, e) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   ijf.snippets.popFramework.handleError(wl, parentPanel, d, r, e,\\\"Error deleting:\\\")\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tparentPanel.mask();\\n\\t\\t\\t\\t\\t\\t\\t\\tijfUtils.jiraApi(\\\"DELETE\\\", \\\"/rest/api/2/issue/\\\" + wl.key + \\\"/worklog/\\\" + wl.wlRaw.id, null, onSuccessDelete, onError);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t}\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tthis.clickedOnce=true;\\n                            this.up().items.items[0].setHidden(true);\\n\\t\\t\\t\\t\\t\\t\\tthis.update(\\\"<span style='color:red;font-weight:bold'>Click to confirm delete</span>\\\");\\n                        }\\n                    }]\\n\\n                }, {\\n                    xtype: 'combobox',\\n                    displayField: 'summary',\\n                    width: 242,\\n                    valueField: 'key',\\n                    hideLabel: true,\\n                    allowBlank: false,\\n                    value: null,\\n                    //wl.key,\\n                    //{\\\"key\\\":wl.key,\\\"summary\\\":wl.summary},\\n                    queryMode: 'remote',\\n                    queryParam: \\\"query\\\",\\n\\t\\t\\t\\t\\tforceSelection:false,\\n\\t\\t\\t\\t\\tqueryCaching:false,\\n                    minChars: 2,                    \\n                    emptyText: 'Search by Summary or Key...',\\n                    hidden: true,\\n                    store: tktLookup,\\n\\t\\t\\t\\t\\tqueryDelay: 1500,\\n\\t\\t\\t\\t\\tautoComplete:false,\\n                    listeners: {\\n                        beforequery: function(queryPlan, eOpts) {\\n                            if (!queryPlan.query)\\n                                return false;\\n                            var qText = \\\"\\\\\\\"\\\" + queryPlan.query + \\\"*\\\\\\\"\\\";\\n                            queryPlan.combo.store.proxy.url = queryPlan.combo.store.proxy.url.replace(/text~.*?&maxResults/, \\\"text~\\\" + qText + \\\"&maxResults\\\");\\n                            //queryPlan.combo.store.proxy.url = queryPlan.combo.store.proxy.url.replace(/key=.*? or/, \\\"key=\\\" + qText + \\\" or\\\");\\n                            return true;\\n                        },\\n                        change: function(f, n, o) {\\n                            this.fieldDirty = true;\\n                            f.up().items.items[5].setHidden(false);\\n                        }\\n                    }\\n                }, {\\n                    xtype: 'datefield',\\n                    labelStyle: \\\"font-size:10px;font-weight:bold;width:70px;background-color:transparent\\\",\\n                    width: 190,\\n                    flex: 100,\\n                    fieldLabel: \\\"Log Date\\\",\\n                    allowBlank: false,\\n                    value: new Date(wl.wlStarted),\\n                    invalidText: \\\"Date must be in format mm/dd/yyyy\\\",\\n                    listeners: {\\n                        change: function(f, n, o) {\\n                            this.fieldDirty = true;\\n                            f.up().items.items[5].setHidden(false);\\n                        }\\n                    }\\n                }, {\\n                    xtype: 'numberfield',\\n                    labelStyle: \\\"font-size:10px;font-weight:bold;width:70px\\\",\\n                    width: 150,\\n                    fieldLabel: \\\"Log Hours\\\",\\n                    allowBlank: false,\\n                    value: wl.wlHours,\\n\\t\\t\\t\\t\\tminValue: 0,\\n                    listeners: {\\n                        change: function(f, n, o) {\\t\\t\\n\\t                    var newVal=0;\\n                            var oldVal = 0;\\n                            if(!isNaN(n)) newVal = n/1;\\n                            if(!isNaN(o)) oldVal = o/1;\\t\\t\\t\\t\\n                            this.fieldDirty = true;\\n                            f.up().items.items[5].setHidden(false);\\n                            var el = document.getElementById(inContainer.id + \\\"_runningTotal\\\");\\n                            var cVal = el.innerText / 1;\\n                            window.setTimeout(function(){el.innerText = cVal - oldVal  + newVal},100);\\n                        }\\n                    }\\n                }, {\\n                    xtype: 'textarea',\\n                    labelStyle: \\\"width:70px;background-color:transparent\\\",\\n                    style: \\\"background:transparent\\\",\\n                    fieldStyle: \\\"width:238px\\\",\\n                    height: \\\"30px\\\",\\n                    emptyText: \\\"Log message, enter to update...\\\",\\n                    hideLabel: true,\\n                    allowBlank: true,\\n                    value: wl.wlComment,\\n                    listeners: {\\n                        change: function(f, n, o) {\\n                            this.fieldDirty = true;\\n                            f.up().items.items[5].setHidden(false);\\n                        }\\n                    }\\n                }, {\\n                    xtype: 'button',\\n                    text: 'save',\\n                    scale: 'small',\\n                    hidden: true,\\n                    style: {\\n                        'float': 'right'\\n                    },\\n                    gridHours: gridRow.get(gridColumn.dataIndex),\\n                    wlHoursOG: wl.wlHours,\\n                    handler: function() {\\n                        var jData = {};\\n                        //you need to rip through the inData.wlRaw.id\\n                        var parentPanel = this.up();\\n                        var wlDateOG = new Date(wl.wlStarted);\\n                        var wlDateNW = null;\\n                        var wlHoursOG = this.wlHoursOG;\\n                        var wlHoursNW = null;\\n                        var wlCommentOG = wl.wlComment;\\n                        var wlCommentNW = null;\\n                        var wlKeyOG = wl.key;\\n                        var wlKeyNW = null;\\n\\t\\t\\t\\t\\t\\tvar wlSummaryNew=\\\"\\\";\\n\\n                        parentPanel.items.items.forEach(function(c) {\\n                            if (c.fieldDirty) {\\n                                switch (c.xtype) {\\n                                case \\\"combobox\\\":\\n                                    //jData[\\\"key\\\"] = c.getValue();\\n                                    wlKeyNW = c.getValue();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar t = c.getDisplayValue().split(\\\" \\\");\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tt.splice(0,1);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twlSummaryNew = t.join(\\\" \\\");\\n                                    break;\\n                                case \\\"datefield\\\":\\n                                    jData[\\\"started\\\"] = moment(c.getValue()).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\";\\n                                    wlDateNW = new Date(c.getValue());\\n                                    break;\\n                                case \\\"textarea\\\":\\n                                    jData[\\\"comment\\\"] = c.getValue();\\n                                    wlCommentNW = c.getValue();\\n                                    break;\\n                                case \\\"numberfield\\\":\\n                                    var secs = c.getValue() / 1 * 60 * 60;\\n                                    wlHoursNW = c.getValue();\\n                                    jData[\\\"timeSpentSeconds\\\"] = secs;\\n                                    //\\n                                    break;\\n                                }\\n                            }\\n                        });\\n\\n                        //console.log(JSON.stringify(jData));\\n\\n                        var onSuccessSave = function(d, r, e) {\\n                            var cLog = wl;\\n                            var cPan = parentPanel;\\n                            //still need to look at reponse...\\n                             if(r==\\\"success\\\") //if (d.resultSet.indexOf(\\\"error\\\") < 0)\\n                                ijf.snippets.popFramework.handleSuccessSave(cLog, cPan, d, r, e, inContainer.id, grid, gridRow, gridColumn, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW);\\n                            else\\n                                ijf.snippets.popFramework.handleError(cLog, cPan, d, r, e, \\\"Error: \\\");\\n                        }\\n                        var onErrorSave = function(d, r, e) {\\n                            var cLog = wl;\\n                            var cPan = parentPanel;\\n                            ijf.snippets.popFramework.handleError(cLog, cPan, d, r, e, \\\"Error: \\\");\\n                        }\\n                        parentPanel.mask();\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t//if key change but no other change....\\n\\t\\t\\t\\t\\t\\tif((jData.hasOwnProperty(\\\"started\\\")) || (jData.hasOwnProperty(\\\"comment\\\")) || (jData.hasOwnProperty(\\\"timeSpentSeconds\\\")))\\n\\t\\t\\t\\t\\t\\t{\\n                        ijfUtils.jiraApi(\\\"PUT\\\", \\\"/rest/api/2/issue/\\\" + wl.key + \\\"/worklog/\\\" + wl.wlRaw.id, JSON.stringify(jData), onSuccessSave, onErrorSave);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse{\\n\\t\\t\\t\\t\\t\\t\\tif(wlKeyNW) //this is a key change only....\\n\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t    var cLog = wl;\\n\\t\\t\\t\\t\\t\\t\\t\\tcLog.summary=wlSummaryNew;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar cPan = parentPanel;\\n                               ijf.snippets.popFramework.handleSuccessSave(cLog, cPan, null,null,null, inContainer.id, grid, gridRow, gridColumn, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n                    }\\n                }]\\n            });\\n            var domKey = document.getElementById(\\\"wlPopDiv_\\\" + inContainer.id + \\\"_\\\" + wl.wlRaw.id);\\n            wlPanel.render(domKey);\\n        });\\n\\n        /*Add an ADD ADD ADD ADD form to the bottom of the table */\\n        var tktLookup = Ext.create('Ext.data.Store', {\\n            storeId: inContainer.id + 'formLu',\\n            model: 'popFormUiModel',\\n            autoLoad: false,\\n            autoLoad: false,\\n            proxy: {\\n                type: 'ajax',\\n                //url: g_root + \\\"/rest/api/2/search?jql=key=REPLACETHIS or text~REPLACETHIS&maxResults=25&fields=summary\\\",\\n                url: g_root + \\\"/rest/api/2/search?jql=text~REPLACETHIS&maxResults=25&fields=summary\\\",\\n                extraParams: null,\\n                filterParam: \\\"query\\\",\\n                groupParam: '',\\n                limitParam: '',\\n                pageParam: '',\\n                sortParam: '',\\n                startParam: '',\\n                reader: {\\n                    type: 'json',\\n                    root: 'issues'\\n                }\\n            }\\n        });\\n\\n        tktLookup.addListener(\\\"load\\\", function(thisStore, records, successful, operation, eOpts) {\\n            records.forEach(function(r) {\\n                r.set(\\\"key\\\", r.data[\\\"key\\\"]);\\n                //r.set(\\\"summary\\\", \\\"<b>\\\" + r.data[\\\"key\\\"] + \\\"</b> \\\" + ijfUtils.sanitize(r.data.fields[\\\"summary\\\"]));\\n\\t\\t\\t\\tr.set(\\\"summary\\\", r.data[\\\"key\\\"] + \\\"  \\\" + ijfUtils.sanitize(r.data.fields[\\\"summary\\\"]));\\n                r.set(\\\"sortsummary\\\", r.data.fields[\\\"summary\\\"]);\\n            });\\n\\t\\t\\t\\n\\t\\t\\t\\tvar qText = operation._params.query;\\n\\n\\t\\t\\t\\t\\t\\n                if(qText.indexOf(\\\"-\\\")>-1)\\n\\t\\t\\t\\t{\\n                    //look for spec issue key\\n\\t\\t\\t\\t     var projectSearch = \\\"/rest/api/2/search?jql=key=\\\"+qText+\\\"&maxResults=25&fields=summary\\\";\\n\\t\\t\\t\\t     var additionalRows = ijfUtils.jiraApiSync('GET', projectSearch, null);\\n   \\t\\t\\t        if(additionalRows.issues)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tadditionalRows.issues.forEach(function(r){\\n\\t\\t\\t\\t\\t\\tvar iRow = Ext.create(thisStore.model);  \\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"key\\\", r.key);\\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"summary\\\", r.key + \\\"  \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"sortsummary\\\", r.fields[\\\"summary\\\"]);\\n\\t\\t\\t\\t\\t\\tthisStore.insert(0, iRow);\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t}else\\n\\t\\t\\t\\t{\\n\\n\\t\\t\\t\\t    var projectSearch = \\\"/rest/api/2/search?jql=project=\\\"+qText+\\\"&maxResults=25&fields=summary\\\";\\n\\t\\t\\t\\t    var additionalRows = ijfUtils.jiraApiSync('GET', projectSearch, null);\\n   \\t\\t\\t        if(additionalRows.issues)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tadditionalRows.issues.forEach(function(r){\\n\\t\\t\\t\\t\\t\\tvar iRow = Ext.create(thisStore.model);  \\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"key\\\", r.key);\\n\\t\\t\\t\\t\\t\\t//iRow.set(\\\"summary\\\", \\\"<b>\\\" + r.key + \\\"</b> \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"summary\\\", r.key + \\\"  \\\" + ijfUtils.sanitize(r.fields[\\\"summary\\\"]));\\n\\t\\t\\t\\t\\t\\tiRow.set(\\\"sortsummary\\\", r.fields[\\\"summary\\\"]);\\n\\t\\t\\t\\t\\t\\tthisStore.insert(0, iRow);\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\t\\n\\t\\t\\t\\t\\n            thisStore.sort(\\\"sortsummary\\\", 'ASC');\\n        });\\n        tktLookup.loadData([{\\n            \\\"key\\\": gridRow.get('iid'),\\n            \\\"summary\\\": gridRow.get('iid') + \\\" \\\" + gridRow.get('Summary'),\\n            \\\"sortsummary\\\": gridRow.get('Summary')\\n        }]);\\n\\n        var wlAddPanel = new Ext.FormPanel({\\n            labelStyle: \\\"width:70px;background-color:transparent\\\",\\n            //style: \\\"background-transparent\\\",\\n            fieldStyle: \\\"width:242px\\\",\\n            border: false,\\n            bodyStyle: \\\"background:transparent\\\",\\n            width: 242,\\n            items: [{\\n                xtype: 'panel',\\n                width: \\\"100%\\\",\\n                border: false,\\n                bodyStyle: 'background:transparent',\\n                items: [{\\n                    xtype: 'panel',\\n                    html: \\\"<b>Add New Workog</b>\\\",\\n                    bodyStyle: 'background:transparent',\\n                }, {\\n                    xtype: 'simplelink',\\n                    text: '(Add new worklog to different issue)',\\n                    style: {\\n                        'float': 'left',\\n                        'font-size': '10px',\\n                    },\\n                    handler: function(f, i, n, t) {\\n                        this.up().up().items.items[0].update(\\\"<br>Search for Issue:<br>\\\");\\n                        this.up().up().items.items[0].text=\\\"\\\";\\n                        this.up().up().items.items[1].setHidden(false);\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                    }\\n                }]\\n\\n            }, {\\n                xtype: 'combobox',\\n                displayField: 'summary',\\n                width: 242,\\n                valueField: 'key',\\n                hideLabel: true,\\n                allowBlank: false,\\n                value: gridRow.get('iid'),\\n                //wl.key,\\n                //{\\\"key\\\":wl.key,\\\"summary\\\":wl.summary},\\n                queryMode: 'remote',\\n                queryParam: \\\"query\\\",\\n\\t\\t\\t\\t\\tforceSelection:false,\\n\\t\\t\\t\\t\\tqueryCaching:false,\\n                minChars: 2,\\n                emptyText: 'Search by Summary or Key...',\\n                hidden: true,\\n                store: tktLookup,\\n\\t\\t\\t\\tqueryDelay: 1500,\\n\\t\\t\\t\\tautoComplete:false,\\n                listeners: {\\n                    beforequery: function(queryPlan, eOpts) {\\n                        if (!queryPlan.query)\\n                            return false;\\n                        var qText = \\\"\\\\\\\"\\\" + queryPlan.query + \\\"*\\\\\\\"\\\";\\n                        queryPlan.combo.store.proxy.url = queryPlan.combo.store.proxy.url.replace(/text~.*?&maxResults/, \\\"text~\\\" + qText + \\\"&maxResults\\\");\\n\\t\\t\\t\\t\\t\\tqueryPlan.rawQuery=true;\\n                        //queryPlan.combo.store.proxy.url = queryPlan.combo.store.proxy.url.replace(/key=.*? or/, \\\"key=\\\" + qText + \\\" or\\\");\\n                        return true;\\n                    },\\n                    change: function(f, n, o) {\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                    }\\n                }\\n            }, {\\n                xtype: 'datefield',\\n                labelStyle: \\\"font-size:10px;font-weight:bold;width:70px;background-color:transparent\\\",\\n                width: 190,\\n                flex: 100,\\n                fieldLabel: \\\"Log Date\\\",\\n                value: new Date(gridColumn.text.split(\\\" \\\")[1] + \\\"/\\\" + ijf.session.fromDate.format('YYYY')),\\n                allowBlank: false,\\n                invalidText: \\\"Date must be in format mm/dd/yyyy\\\",\\n                listeners: {\\n                    change: function(f, n, o) {\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                    }\\n                }\\n            }, {\\n                xtype: 'numberfield',\\n                labelStyle: \\\"font-size:10px;font-weight:bold;width:70px\\\",\\n                width: 150,\\n                fieldLabel: \\\"Log Hours\\\",\\n                value: 0,\\n\\t\\t\\t\\tminValue: 0,\\n                allowBlank: false,\\n                listeners: {\\n                    change: function(f, n, o) {\\n\\t                    var newVal=0;\\n                            var oldVal = 0;\\n                            if(!isNaN(n)) newVal = n/1;\\n                            if(!isNaN(o)) oldVal = o/1;\\t\\t\\t\\t\\n                            this.fieldDirty = true;\\n                            f.up().items.items[5].setHidden(false);\\n                            var el = document.getElementById(inContainer.id + \\\"_runningTotal\\\");\\n                            var cVal = el.innerText / 1;\\n                            window.setTimeout(function(){el.innerText = cVal - oldVal  + newVal},100);\\n                    }\\n                }\\n            }, {\\n                xtype: 'textarea',\\n                labelStyle: \\\"width:70px;background-color:transparent\\\",\\n                style: \\\"background:transparent\\\",\\n                fieldStyle: \\\"width:238px\\\",\\n                height: \\\"30px\\\",\\n                emptyText: \\\"Log message, enter to update...\\\",\\n                hideLabel: true,\\n                allowBlank: true,\\n                listeners: {\\n                    change: function(f, n, o) {\\n                        this.fieldDirty = true;\\n                        f.up().items.items[5].setHidden(false);\\n                    }\\n                }\\n            }, {\\n                xtype: 'button',\\n                text: 'Add',\\n                scale: 'small',\\n                hidden: true,\\n                style: {\\n                    'float': 'right'\\n                },\\n                wlHoursOG: 0,\\n                wlDateOG: moment(new Date(gridColumn.text.split(\\\" \\\")[1] + \\\"/\\\" + ijf.session.fromDate.format('YYYY'))).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\",\\n                handler: function() {\\n\\n                    //you need to rip through the inData.wlRaw.id\\n                    var parentPanel = this.up();\\n                    var wlDateOG = moment(new Date(gridColumn.text.split(\\\" \\\")[1] + \\\"/\\\" + ijf.session.fromDate.format('YYYY'))).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\";\\n                    var wlDateNW = null;\\n                    var wlHoursOG = null;\\n                    var wlHoursNW = null;\\n                    var wlCommentOG = null;\\n                    var wlCommentNW = null;\\n                    var wlKeyOG = gridRow.get('iid');\\n                    var wlKeyNW = null;\\n\\n                    var lsecs = parentPanel.items.items[3].getValue() / 1 * 60 * 60;\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t//if 0 bail\\n\\t\\t\\t\\t\\tif(lsecs<=0)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tparentPanel.update(\\\"Hours must be greater than zero\\\");\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n                    var dateCtl = parentPanel.items.items[2];\\n                    wlDateNW = moment(dateCtl.getValue()).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\";\\n\\n                    var keyCntl = parentPanel.items.items[1];\\n                    wlKeyNW = keyCntl.getValue();\\n                    var newSummary = keyCntl.store.getData().items.reduce(function(inV, r) {\\n                        if (r.data.key == wlKeyNW)\\n                            inV = r.data.sortsummary;\\n                        return inV;\\n                    }, null);\\n\\n                    wlCommentNW = parentPanel.items.items[4].getValue();\\n\\n                    var jData = {\\n                        \\\"started\\\": wlDateNW,\\n                        \\\"comment\\\": wlCommentNW,\\n                        \\\"timeSpentSeconds\\\": lsecs\\n                    };\\n\\n                    var onSuccessSave = function(d, r, e) {\\n                        var cPan = parentPanel;\\n                        //still need to look at reponse...\\n                        if (d.id) {\\n                            var cLog = {\\n\\n                                key: wlKeyNW,\\n                                summary: newSummary,\\n                                wlComment: wlCommentNW,\\n                                wlHours: lsecs / 60 / 60,\\n                                wlStarted: wlDateNW,\\n                                wlRaw: d\\n                            }\\n\\n                            ijf.snippets.popFramework.handleSuccessAdd(cLog, cPan, d, r, e, inContainer.id, grid, gridRow, gridColumn, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW);\\n                        } else {\\n                            ijf.snippets.popFramework.handleError(wl, cPan, d, r, e,\\\"Error saving:\\\");\\n                        }\\n                    }\\n\\n                    var onErrorSave = function(d, r, e) {\\n                        ijf.snippets.popFramework.handleError(null, parentPanel, d, r, e);\\n                    }\\n                    parentPanel.mask();\\n\\n                    ijfUtils.jiraApi(\\\"POST\\\", \\\"/rest/api/2/issue/\\\" + wlKeyNW + \\\"/worklog\\\", JSON.stringify(jData), onSuccessSave, onErrorSave);\\n\\n                }\\n            }]\\n        });\\n        var domKey = document.getElementById(\\\"wlPopDivAdd_\\\" + inContainer.id);\\n        wlAddPanel.render(domKey);\\n        //update total at top\\n        document.getElementById(inContainer.id + \\\"_runningTotal\\\").innerText = runningTotal\\n        document.getElementById(inContainer.id + \\\"_gridTotal\\\").innerText = runningTotal\\n    },\\n    handleSuccessAdd: function(cWl, cPan, d, r, e, inContainerId, grid, gridRow, gridColumn, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW, newSummary) {\\n        cPan.update(\\\"Saved\\\");\\n        //this means I've added a WL entry.  I have it.  it may or may not be in view...\\n        //if in view, add or find Data row.  Update as needed...if self, just force them to close and open grid again\\n\\n        //OGs don't exist\\n        isDateChangeInView=false;\\n        var gColKey = moment(wlDateNW).format(\\\"dd MM/DD\\\");\\n        var inViewColumn = grid.getColumns().reduce(function(inV, c) {\\n            if (c.text == gColKey) {\\n                inV = c;\\n                isDateChangeInView = true;\\n            }\\n            return inV;\\n        }, null);\\n\\n        if (isDateChangeInView) {\\n            //get data row\\n            //is the new row ...ie need to add in date change...\\n            var targetKey = wlKeyOG;\\n            if (wlKeyNW)\\n                targetKey = wlKeyNW;\\n\\n            var dataRow = grid.getStore().getData().items.reduce(function(inV, r) {\\n                if (r.data.iid == targetKey)\\n                    inV = r;\\n                return inV\\n            }, null);\\n            if (!dataRow) {\\n                //need to add the new issue to the current grid view...   \\n                var wlRow = Ext.create(grid.store.model);\\n                wlRow.set(\\\"Key\\\", \\\"<a title='Click to edit Issue' href=\\\" + ijf.main.baseSys + \\\"/browse/\\\" + targetKey + \\\"' target='_blank'>\\\" + targetKey + \\\"</a>\\\");\\n                wlRow.set(\\\"Summary\\\", cWl.summary);\\n                wlRow.set(\\\"iid\\\", targetKey);\\n\\n                var rCount = grid.store.getData().items.length;\\n                wlRow = grid.store.insert(rCount, wlRow);\\n                dataRow = wlRow[0];\\n                //new dr, add it's worklog array\\n                ijf.session.myWorklogData[targetKey + \\\"_\\\" + inViewColumn.text] = {\\n                    worklogs: []\\n                }\\n            } else {\\n                if (!ijf.session.myWorklogData.hasOwnProperty(targetKey + \\\"_\\\" + inViewColumn.text))\\n                    ijf.session.myWorklogData[wlKeyNW + \\\"_\\\" + inViewColumn.text] = {\\n                        worklogs: []\\n                    }\\n            }\\n            //data row was on view and needs the animal added...\\n            var cellModel = ijf.session.myWorklogData[wlKeyNW + \\\"_\\\" + inViewColumn.text];\\n\\n            //need to work this to configure a wl entry for the added wl adn put in the proper place...\\n            cellModel.worklogs.push(cWl);\\n\\n            //update the row value and hours\\n            var tVal = dataRow.get(inViewColumn.dataIndex) / 1;\\n            tVal = tVal + cWl.wlHours / 1;\\n            dataRow.set(inViewColumn.dataIndex, tVal);\\n\\n            tVal = dataRow.get('Hours') / 1;\\n            tVal = tVal + cWl.wlHours / 1;\\n            dataRow.set('Hours', tVal);\\n            dataRow.commit();\\n            resMessage = \\\"Worklog added to issue, please reopen this dialog to refresh\\\";\\n\\n        } else {\\n            //simply update so say not date in view\\n            resMessage = \\\"Worklog added to issue outside your current view.\\\";\\n        }\\n\\n        cPan.update(resMessage);\\n        cPan.items.items[5].setHidden(\\\"true\\\");\\n\\n    },\\n\\thandleSuccessDelete: function(cWl, parentPanel, d, r, e, inContainerId, grid, gridRow, gridColumn)\\n\\t{\\n\\t\\t    var curHours = gridRow.get(gridColumn.dataIndex);\\n            //var curHours = cPan.items.items[5].gridHours;\\n            var redHrs = cWl.wlRaw.timeSpentSeconds/60/60;\\n            var newHrs = curHours/1 - redHrs;\\n\\t\\t\\t\\n            gridRow.set(gridColumn.dataIndex, newHrs);\\n\\n            var rSum = grid.getColumns().reduce(function(inV, c) {\\n                inV = inV + gridRow.get(c.dataIndex);\\n                return inV;\\n            }, 0);\\n            gridRow.set('Hours', rSum);\\n            gridRow.commit();\\n\\n            parentPanel.items.items.forEach(function(ctl) {\\n                ctl.fieldDirty = false;\\n            });\\n\\t\\n\\t     //delete the mem model          \\n\\t\\t //data row was on view and needs the animal added...\\n          var sourceArray = ijf.session.myWorklogData[cWl.key + \\\"_\\\" + gridColumn.text];\\n          var wlIndex = sourceArray.worklogs.reduce(function(inV, w, i) {\\n                        if (w.wlRaw.id == cWl.wlRaw.id)\\n                            inV = i;\\n                        return inV;\\n                    }, null);\\n         sourceArray.worklogs.splice(wlIndex, 1);\\n\\n\\t    //lastly, you need to update the local cell total...\\n         var el = document.getElementById(inContainerId + \\\"_runningTotal\\\");\\n                        var cVal = el.innerText / 1;\\n                        el.innerText = cVal - redHrs;\\n\\t\\n        parentPanel.update(\\\"Worklog deleted\\\");\\n        var dIt = function(){parentPanel.setHidden(\\\"true\\\")};\\n\\t\\twindow.setTimeout(dIt,1000);\\n\\t\\t\\n\\t},\\n\\n    handleSuccessSave: function(cWl, cPan, d, r, e, inContainerId, grid, gridRow, gridColumn, wlHoursOG, wlHoursNW, wlDateOG, wlDateNW, wlCommentOG, wlCommentNW, wlKeyOG, wlKeyNW, newSummary) {\\n        cPan.update(\\\"Saved\\\");\\n        //adding concept of add new wl entry is in params.\\n\\n        var isDateChange = false;\\n        var isDateChangeInView = false;\\n        var isIssueChange = false;\\n        var resMessage = \\\"tbd\\\";\\n        if (wlCommentNW)\\n            cWl.wlComment = wlCommentNW;\\n\\n        //update the underlying grid with the\\n        //set the hours                   \\n\\n        if ((wlHoursNW) && (wlHoursOG != wlHoursNW)) {\\n\\n            var curHours = gridRow.get(gridColumn.dataIndex);\\n            //var curHours = cPan.items.items[5].gridHours;\\n\\n            var newHrs = curHours - wlHoursOG + wlHoursNW;\\n            gridRow.set(gridColumn.dataIndex, newHrs);\\n\\n            cPan.items.items[5].wlHoursOG = wlHoursNW;\\n            var rSum = grid.getColumns().reduce(function(inV, c) {\\n                inV = inV + gridRow.get(c.dataIndex);\\n                return inV;\\n            }, 0);\\n            gridRow.set('Hours', rSum);\\n            gridRow.commit();\\n\\n            cPan.items.items.forEach(function(ctl) {\\n                ctl.fieldDirty = false;\\n            });\\n\\n            //update the cWl with the new value....\\n            cWl.wlHours = wlHoursNW;\\n        }\\n\\n        if (wlKeyNW) {\\n\\n            //entry point here will already have saved hours, comment\\n\\n            isIssueChange = true;\\n            //find source data and clone and remove from source  ....\\n            var sourceArray = ijf.session.myWorklogData[wlKeyOG + \\\"_\\\" + gridColumn.text];\\n            var wlIndex = sourceArray.worklogs.reduce(function(inV, w, i) {\\n                if (w.wlRaw.id == cWl.wlRaw.id)\\n                    inV = i;\\n                return inV;\\n            }, null);\\n            var copiedWl = sourceArray.worklogs.splice(wlIndex, 1);\\n            copiedWl = copiedWl[0];\\n            //delete the current worklog  \\n            var cRes = ijfUtils.jiraApiSync(\\\"DELETE\\\", \\\"/rest/api/2/issue/\\\" + copiedWl.key + \\\"/worklog/\\\" + copiedWl.wlRaw.id, null);\\n            //add the current worklog \\n\\n            //date is new or old...either way look for column\\n            isDateChange = true;\\n            var tDate = wlDateNW;\\n            if (!tDate) {\\n                tDate = wlDateOG;\\n                isDateChange = false;\\n            }\\n\\n            var jData = {\\n                \\\"started\\\": moment(tDate).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\",\\n                \\\"comment\\\": copiedWl.wlComment,\\n                \\\"timeSpentSeconds\\\": copiedWl.wlHours / 1 * 60 * 60\\n            };\\n            var cRes = ijfUtils.jiraApiSync(\\\"POST\\\", \\\"/rest/api/2/issue/\\\" + wlKeyNW + \\\"/worklog\\\", JSON.stringify(jData));\\n\\n            //cRes should now be the worklog added...alter your current one and move to where it belongs...\\n            copiedWl.key = wlKeyNW;\\n            copiedWl.wlRaw.id = cRes.id;\\n\\n            //first, adjust the view to remove the value from current cell\\n            //update the row value and hours\\n            var curHours = gridRow.get(gridColumn.dataIndex);\\n            var newHrs = curHours - cWl.wlHours;\\n            gridRow.set(gridColumn.dataIndex, newHrs);\\n\\n            curHours = gridRow.get('Hours') / 1;\\n            curHours = curHours - copiedWl.wlHours / 1;\\n            gridRow.set('Hours', curHours);\\n            gridRow.commit();\\n\\n            cPan.items.items[5].wlHoursOG = wlHoursNW;\\n            var rSum = grid.getColumns().reduce(function(inV, c) {\\n                inV = inV + gridRow.get(c.dataIndex);\\n                return inV;\\n            }, 0);\\n            gridRow.set('Hours', rSum);\\n            gridRow.commit();\\n\\n            //determine if the new date is in view....\\n            var gCols = grid.getColumns();\\n\\n            var gColKey = moment(tDate).format(\\\"dd MM/DD\\\");\\n            var inViewColumn = gCols.reduce(function(inV, c) {\\n                if (c.text == gColKey) {\\n                    inV = c;\\n                    isDateChangeInView = true;\\n                }\\n                return inV;\\n            }, null);\\n\\n            if (isDateChangeInView) {\\n                //is the new row ...ie need to add in date change...\\n                var dataRow = grid.getStore().getData().items.reduce(function(inV, r) {\\n                    if (r.data.iid == wlKeyNW)\\n                        inV = r;\\n                    return inV\\n                }, null);\\n                if (!dataRow) {\\n                    //need to add the new issue to the current grid view...   \\n                    var wlRow = Ext.create(grid.store.model);\\n                    wlRow.set(\\\"Key\\\", \\\"<a title='Click to edit Issue' href=\\\" + ijf.main.baseSys + \\\"/browse/\\\" + wlKeyNW + \\\"' target='_blank'>\\\" + wlKeyNW + \\\"</a>\\\");\\n                    wlRow.set(\\\"Summary\\\", copiedWl.summary);\\n                    wlRow.set(\\\"iid\\\", wlKeyNW);\\n\\n                    var rCount = grid.store.getData().items.length;\\n                    wlRow = grid.store.insert(rCount, wlRow);\\n                    dataRow = wlRow[0];\\n                    //new dr, add it's worklog array\\n                    ijf.session.myWorklogData[wlKeyNW + \\\"_\\\" + inViewColumn.text] = {\\n                        worklogs: []\\n                    }\\n                } else {\\n                    if (!ijf.session.myWorklogData.hasOwnProperty(wlKeyNW + \\\"_\\\" + inViewColumn.text))\\n                        ijf.session.myWorklogData[wlKeyNW + \\\"_\\\" + inViewColumn.text] = {\\n                            worklogs: []\\n                        }\\n                }\\n                //data row was on view and needs the animal added...\\n                var cellModel = ijf.session.myWorklogData[wlKeyNW + \\\"_\\\" + inViewColumn.text];\\n\\n                //have dataRow and have inViewColumn \\n                //data row could not have had a wl entry because it would have been in view...so just add the modified WL entry to the wlstore, recalc and done \\n                cellModel.worklogs.push(copiedWl);\\n\\n                //update the row value and hours\\n                var tVal = dataRow.get(inViewColumn.dataIndex) / 1;\\n                tVal = tVal + copiedWl.wlHours / 1;\\n                dataRow.set(inViewColumn.dataIndex, tVal);\\n\\n                tVal = dataRow.get('Hours') / 1;\\n                tVal = tVal + copiedWl.wlHours / 1;\\n                dataRow.set('Hours', tVal);\\n                dataRow.commit();\\n                resMessage = \\\"Worklog moved to new issue, please reopen any dialog for the new issue day.\\\";\\n\\n            } else {\\n                resMessage = \\\"Worklog moved to date not in current view.\\\";\\n            }\\n\\n        } else {\\n            //look for date change of log for current key\\n\\n            if (wlDateNW) {\\n\\n                isDateChange = true;\\n                //OK, the date changed.  it's either in the range or not..do a reduce on gGols\\n\\n                //reduce current by full.. the current \\n                var curHours = gridRow.get(gridColumn.dataIndex);\\n                var newHrs = curHours - cWl.wlHours / 1;\\n                gridRow.set(gridColumn.dataIndex, newHrs);\\n\\n                var gCols = grid.getColumns();\\n                var gColKey = moment(wlDateNW).format(\\\"dd MM/DD\\\");\\n                var inViewColumn = gCols.reduce(function(inV, c) {\\n                    if (c.text == gColKey) {\\n                        inV = c;\\n                        isDateChangeInView = true;\\n                    }\\n                    return inV;\\n                }, null);\\n                if (isDateChangeInView) {\\n                    //new cell\\n                    curHours = gridRow.get(inViewColumn.dataIndex);\\n                    newHrs = curHours + cWl.wlHours / 1;\\n                    gridRow.set(inViewColumn.dataIndex, newHrs);\\n\\n                    //now move the worklog entry from one place in array to another....\\n                    var sourceArray = ijf.session.myWorklogData[wlKeyOG + \\\"_\\\" + gridColumn.text];\\n\\n                    var wlIndex = sourceArray.worklogs.reduce(function(inV, w, i) {\\n                        if (w.wlRaw.id == cWl.wlRaw.id)\\n                            inV = i;\\n                        return inV;\\n                    }, null);\\n                    var copiedWl = sourceArray.worklogs.splice(wlIndex, 1);\\n                    copiedWl[0].wlStarted = moment(wlDateNW).format(\\\"YYYY-MM-DDTHH:mm:ss.SSS\\\") + \\\"-0500\\\";\\n\\n                    //ijf.session.myWorklogData[wlKeyOG + \\\"_\\\" + gridColumn.text]\\n\\n                    var targetArray = ijf.session.myWorklogData[wlKeyOG + \\\"_\\\" + gColKey];\\n                    if (!targetArray) {\\n                        targetArray = {\\n                            \\\"worklogs\\\": []\\n                        };\\n                        ijf.session.myWorklogData[wlKeyOG + \\\"_\\\" + gColKey] = targetArray;\\n                    }\\n                    targetArray.worklogs.push(copiedWl[0]);\\n\\n                } else {\\n                    var sourceArray = ijf.session.myWorklogData[wlKeyOG + \\\"_\\\" + gridColumn.text];\\n                    delete cWl;\\n                    var sourceArray = ijf.session.myWorklogData[wlKeyOG + \\\"_\\\" + gridColumn.text];\\n                }\\n                gridRow.commit();\\n            }\\n        }\\n\\n        var delayIt = function() {\\n            if (isIssueChange) {\\n                if (!isDateChangeInView) {\\n                    cPan.update(\\\"Entry has been moved to an Issue and date out of your current view\\\");\\n                } else {\\n                    cPan.update(\\\"Entry moved to new issue in your view.  Please reopen any open dialogs for that date.\\\");\\n                }\\n                cPan.items.items[5].setHidden(\\\"true\\\");\\n            } else if (isDateChange) {\\n\\n                if (!isDateChangeInView) {\\n                    cPan.update(\\\"Entry has been moved to a date out of your current view\\\");\\n                } else {\\n                    cPan.update(\\\"Entry moved to new date.  Please reopen any open dialogs for that date.\\\");\\n                }\\n                cPan.items.items[5].setHidden(\\\"true\\\");\\n\\n            } else {\\n                cPan.unmask();\\n                cPan.items.items.forEach(function(c) {\\n                    c.fieldDirty = false;\\n                });\\n                cPan.update(\\\"\\\");\\n                cPan.items.items[5].setHidden(\\\"true\\\");\\n\\n            }\\n        }\\n\\n        window.setTimeout(delayIt, 2000);\\n        //update the undelying table...and it's row total\\n\\n    },\\n\\tcloseAllPops: function()\\n\\t{\\n      if (ijf.snippets.popFramework.popDivs.roots) \\n\\t  {\\n\\t\\t Object.keys(ijf.snippets.popFramework.popDivs.roots).forEach(function(r)\\n\\t\\t {\\t\\t\\t \\n\\t\\t    var k = ijf.snippets.popFramework.popDivs.roots[r];\\n            var element = document.getElementById(k.id);\\n  \\t\\t    var b = element.parentElement;\\n\\t\\t\\tif(b)\\n\\t\\t\\t{\\t\\t\\t\\t\\t\\n\\t\\t\\t\\tb.removeChild(k);\\t\\n                delete ijf.snippets.popFramework.popDivs.roots[r];\\n\\t\\t\\t}\\n        });\\n\\t   }\\n\\t},\\n    handleError: function(cWl, cPan, d, r, e, eMessage) {\\n        cPan.update(eMessage + \\\" \\\" + d.resultSet);\\n    },\\n    generateAdd: function(inData) {\\n        return \\\"adding\\\";\\n    },\\n    dragElement: function(elmnt) {\\n        var pos1 = 0\\n          , pos2 = 0\\n          , pos3 = 0\\n          , pos4 = 0;\\n        if (document.getElementById(elmnt.id + \\\"_header\\\")) {\\n            // if present, the header is where you move the DIV from:\\n            document.getElementById(elmnt.id + \\\"_header\\\").onmousedown = dragMouseDown;\\n        } else {\\n            // otherwise, move the DIV from anywhere inside the DIV:\\n            elmnt.onmousedown = dragMouseDown;\\n        }\\n\\n        function dragMouseDown(e) {\\n            e = e || window.event;\\n            e.preventDefault();\\n            // get the mouse cursor position at startup:\\n            pos3 = e.clientX;\\n            pos4 = e.clientY;\\n            document.onmouseup = closeDragElement;\\n            // call a function whenever the cursor moves:\\n            document.onmousemove = elementDrag;\\n        }\\n\\n        function elementDrag(e) {\\n            e = e || window.event;\\n            e.preventDefault();\\n            // calculate the new cursor position:\\n            pos1 = pos3 - e.clientX;\\n            pos2 = pos4 - e.clientY;\\n            pos3 = e.clientX;\\n            pos4 = e.clientY;\\n            // set the element's new position:\\n            elmnt.style.top = (elmnt.offsetTop - pos2) + \\\"px\\\";\\n            elmnt.style.left = (elmnt.offsetLeft - pos1) + \\\"px\\\";\\n        }\\n\\n        function closeDragElement() {\\n            // stop moving when mouse button is released:\\n            document.onmouseup = null;\\n            document.onmousemove = null;\\n        }\\n    }\\n\\n}\\n\""},{"name":"onRefresh","snippet":"\"onRefresh = function()\\n{\\n   ijf.snippets.popFrameworkWlr.closeAllPops();\\n   var delayIt = function(){\\n      ijf.main.resetForm();\\n      ijfUtils.hideProgress();\\n    }\\n   ijfUtils.showProgress();\\n   window.setTimeout(delayIt,10);\\n\\n}\""},{"name":"saveAsCsv","snippet":"\"saveAsCsv = function()\\n{\\n    //simple CSV output\\n\\nvar outStr= \\\"key,project,created,description,status,comment,started,author,duration,hours\\\\n\\\";\\nvar g = ijf.main.controlSet[\\\"ijfContent_fld_6,2\\\"].control.items.items[0];\\nvar data = g.store.getData();\\n\\n\\ndata.items.forEach(function(r)\\n{\\n      var wlRow = [r.data.iid,\\nr.data.project,\\nmoment(r.data.created).format('YYYY-MM-DD H:mm:ss'),\\n\\\"\\\\\\\"\\\" + r.data.summary.replace(/<br>/g,\\\"\\\\n\\\").replace(/\\\"/g,\\\"\\\\\\\"\\\\\\\"\\\") +\\\"\\\\\\\"\\\",\\nr.data.status,\\n\\\"\\\\\\\"\\\" + r.data.reporter.replace(/<br>/g,\\\"\\\\n\\\").replace(/\\\"/g,\\\"\\\\\\\"\\\\\\\"\\\")+\\\"\\\\\\\"\\\",\\nmoment(r.data.duedate).format('YYYY-MM-DD H:mm:ss'),\\nr.data.creator,\\nr.data.issuetype,\\nr.data.timeestimate];\\noutStr+=wlRow.join(\\\",\\\") + \\\"\\\\n\\\";\\n});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t//output....ijf.admin.cwfAdmin_form\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar blob = new Blob([outStr], {type: \\\"text/plain;charset=utf-8\\\"});\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsaveAs(blob,\\\"jiraWorklog.csv\\\");\\n\\n\\n}\""},{"name":"onLoadMyWorklogs","snippet":"\"onLoadMyWorklogs = function() {\\n\\n    var gridKey = \\\"ijfContent_fld_5,2\\\";\\n    var fromDateKey = \\\"ijfContent_fld_6,3\\\";\\n    var toDateKey = \\\"ijfContent_fld_6,6\\\";\\n\\n    //wlStore\\n    var myWlStore = [];\\n\\n    var dayCols=null;\\n\\n\\n    //initialize\\n    var grid = ijf.main.controlSet[gridKey].control.items.items[0];\\n    var gridDays = ijf.main.controlSet[gridKey].control.items.items[1];\\n    var store = grid.getStore();\\n\\n   //remove all editors\\n   grid.getColumns().forEach(function(c){c.editor=null});\\n   gridDays.getColumns().forEach(function(c){      c.editor=null;    });\\n\\n   //adding cell click\\n   //ijf.main.controlSet[gridKey].control.addListener('cellclick',ijf.snippets.onClickWorklogCell);\\n   //gridDays.addListener('cellclick',ijf.snippets.onClickWorklogCell);\\n\\n\\n//debugger;\\n    /*tune context:\\n        set dates\\n        adjust GRID for context dates\\n    */\\n    ijf.main.controlSet[fromDateKey].control.items.items[0].setValue(new Date(ijf.session.fromDate));\\n    ijf.main.controlSet[toDateKey].control.items.items[0].setValue(new Date(ijf.session.toDate));\\n\\n    dayCols = gridDays.getColumns();\\n    var colDate = ijf.session.fromDate;\\n    var cIndex = 0;\\n\\n    while (colDate <= ijf.session.toDate) {\\n        var curCol = dayCols[cIndex];\\n        //don't know why it's throwing and error but it's working...tried disabling events but NL, perhaps because locked cols\\n        try {\\n            //if week use flex, else use fixed...\\n            if (ijf.session.periodMode == 'week')\\n                curCol.setFlex(100);\\n            else\\n                curCol.setWidth(90);\\n            if ((colDate.format(\\\"dd\\\") == \\\"Sa\\\") || (colDate.format(\\\"dd\\\") == \\\"Su\\\"))\\n                curCol.setStyle('color', 'pink');\\n            curCol.setText(colDate.format(\\\"dd MM/DD\\\"));\\n        } catch (ee) {}\\n        cIndex++;\\n        colDate = moment(colDate).add(\\\"day\\\", 1);\\n    }\\n    //hide unused\\n    for (var i = cIndex; i < dayCols.length; i++) {\\n        dayCols[i].setHidden(true);\\n    }\\n\\n    //get base data and process\\n    var worklogBase = \\\"/rest/api/2/search?jql=worklogAuthor=currentUser() and worklogAuthor=currentUser() and worklogDate>=\\\" + ijf.session.fromDate.format(\\\"YYYY-MM-DD\\\") + \\\" and worklogDate<=\\\" + ijf.session.toDate.format(\\\"YYYY-MM-DD\\\") + \\\"&fields=key, summary, status, project, created,labels&maxResults=1000\\\";\\n    var baseWorklogIssueList = ijfUtils.jiraApiSync('GET', worklogBase, null);\\n\\n    var wlRaw = [];\\n    // get core query, run the more detailed query and populate the grid\\n    var listData = baseWorklogIssueList.issues;\\n    var toDate = ijf.session.toDate;\\n    var fromDate = ijf.session.fromDate;\\n    if (toDate) {\\n        //filter out rows\\n        var toDateMoment = moment(toDate);\\n        var fromDateMoment = moment(fromDate);\\n    }\\n\\n    //create detailed wl rows\\n    listData.forEach(function(r) {\\n        var i = 1;\\n\\n        var aUrl = \\\"/rest/api/2/issue/\\\" + r.key + \\\"/worklog\\\";\\n        var rawList = ijfUtils.jiraApiSync('GET', aUrl, null);\\n//var rawList = {\\\"worklogs\\\":[]};\\n//if(r.fields.worklog) rawList = r.fields.worklog;\\n\\n\\n        if (rawList.worklogs.length > 0) {\\n            rawList.worklogs.forEach(function(wl) {\\n\\n                //filter out rows if tDate\\n                var testDate = moment(wl.started).format('YYYY-M-D');\\n                var testDateMoment =moment(testDate);\\n              //  if (fDate)\\n                    if (testDate < fromDateMoment ) {\\n                        return;\\n                        //ok\\n                    }\\n               // if (tDate)\\n                    if (testDate > toDateMoment ) {\\n                        return;\\n                    }\\n\\n                //filter out if WL entry is for someone else\\nif(wl.author.accountId)\\n{\\n                if(ijf.main.currentUser.id.toLowerCase()!=wl.author.accountId.toLowerCase())\\n                {\\n                    return;\\n                }\\n}\\nif(wl.author.key)\\n{\\n                //if(ijf.main.currentUser.id.toLowerCase()!=wl.author.emailAddress.toLowerCase())\\n                if((ijf.main.currentUser.id.toLowerCase()!=wl.author.emailAddress.toLowerCase()) && (ijf.main.currentUser.email.toLowerCase()!=wl.author.key.toLowerCase()))\\n                {\\n                    return;\\n                }\\n}\\n\\n                var localCmt = wl.comment;\\n                if (localCmt) localCmt = localCmt.replace(/\\\\n/g, \\\"<br>\\\");\\n\\n                var localCmtShrt = wl.comment;\\n                if (localCmtShrt) {// localCmtShrt = localCmtShrt.replace(/\\\\n/g,\\\" \\\");\\n                //  localCmtShrt = localCmtShrt.substr(0,25)+\\\"...\\\";\\n                }\\n\\n\\n\\n                //\\\"description\\\": \\\"<a href='JAVASCRIPT:window.open(\\\\\\\"'+ijf.main.baseSys +'/secure/UpdateWorklog!default.jspa?key=\\\" + r.key + \\\"&worklogId=\\\" + wl.id + \\\"\\\\\\\",\\\\\\\"wrkLogEd\\\\\\\",\\\\\\\"scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=850,height=800,left=300,top=300\\\\\\\")'>\\\" + localCmtShrt + \\\"</a>\\\",\\n\\n                var wlRow = {\\n                    \\\"key\\\": r.key,\\n                    \\\"project\\\": r.fields.project,\\n                    \\\"issueCreated\\\": r.fields.created,\\n                    \\\"summary\\\": r.fields.summary,\\n                    \\\"labels\\\": r.fields.labels.join(\\\", \\\"),\\n                    \\\"status\\\": r.fields.status,\\n                    \\\"wlCreator\\\": wl.author.displayName,\\n                    \\\"wlCreated\\\": wl.created,\\n                    \\\"wlStarted\\\": wl.started,  \\n                    \\\"wlComment\\\": wl.comment,                                      \\n                    \\\"wlTimeSpent\\\": wl.timeSpent,\\n                    \\\"wlHours\\\": (wl.timeSpentSeconds / 3600).toFixed(2),\\n                    \\\"wlRaw\\\": wl\\n                };\\n\\n                i++;\\n                wlRaw.push(wlRow);\\n            });\\n        } else {//na\\n        }\\n    });\\n\\n    var urlBase  = \\\"/browse/\\\";\\n    if(!ijf.snippets.JqlFramework.isServerRuntime())  urlBase =ijf.main.baseSys + urlBase;\\n\\n    if (wlRaw.length > 0) {\\n        //you have WL rows that  should be displayed, these rows fall in the timeframe of the report\\n        wlRaw.forEach(function(r) {\\n\\n            //each row is a distinct wl entry.  as you process, add to the wlStore and insert or update row,\\n\\n            //acquire relevant row initialize if needed\\n            var wlRow = null;\\n            store.getData().items.forEach(function(wlr){\\n                if(wlr.data[\\\"iid\\\"]==r.key) wlRow=wlr;\\n            });\\n            if(!wlRow){\\n              wlRow= Ext.create(store.model);  \\n              wlRow.set(\\\"Key\\\", \\\"<a title='Click to edit Issue' href='\\\" + urlBase + r.key + \\\"' target='_blank'>\\\" + r.key + \\\"</a>\\\");\\n              wlRow.set(\\\"Summary\\\", r.summary);\\n              wlRow.set(\\\"Labels\\\", r.labels);\\n              wlRow.set(\\\"iid\\\", r.key);\\n              wlRow = store.insert(0, wlRow);\\n              wlRow=wlRow[0];\\n            } \\n\\n            //set the correct data into the grid...the date is the key...use the column header to drive....var\\n            var curRowDateAsColFormat = moment(r.wlStarted).format(\\\"dd MM/DD\\\");\\n            var dataIndex = dayCols.reduce(function(inV,c){ if(c.text==curRowDateAsColFormat) inV=c.dataIndex; return inV;},null);\\n            if(!dataIndex) \\n            {\\n                //console.log(\\\"Failed to find correct column\\\");\\n                return;\\n            }\\n            var cVal = wlRow.get(dataIndex);\\n            if(cVal) cVal = cVal/1;\\n            else cVal = 0;\\n            var workTotal = r.wlHours/1 + cVal;\\n            var cVal = wlRow.set(dataIndex,workTotal);\\n\\n            //update global store\\n            if(myWlStore.hasOwnProperty(r.key + \\\"_\\\"+ curRowDateAsColFormat))\\n            {\\n               myWlStore[r.key+\\\"_\\\"+curRowDateAsColFormat].worklogs.push(r);\\n            }\\n            else\\n            {\\n               myWlStore[r.key+\\\"_\\\"+curRowDateAsColFormat] = {\\\"worklogs\\\":[r]};\\n            }\\n\\n        });\\n\\n        //calculate row totals\\n        store.getData().items.forEach(function(wlr){               \\n                var rSum = 0;\\n                rSum = dayCols.reduce(function(inV,c){inV=inV+wlr.get(c.dataIndex);return inV;},rSum);\\n                wlr.set('Hours',rSum);\\n                wlr.commit();\\n        });\\n\\n\\n\\n    }\\n    ijf.session.myWorklogData = myWlStore;\\n}\\n\""},{"name":"onLoadWorklogReport","snippet":"\"onLoadWorklogReport = function() {\\n    //register a document resize event.\\n\\n    window.onbeforeunload = null;\\n    var query = null;\\n\\n    //get URL from grid\\n    var c = ijf.main.controlSet[\\\"ijfContent_fld_6,2\\\"];\\n    var g = c.control.items.items[0];\\n    var tUrl = g.store.proxy.getUrl();\\n    var urlParts = tUrl.split(\\\"?\\\");\\n    var queryParts = urlParts[1].split(\\\"&fields\\\");\\n    var timeFrameSuffix = \\\"\\\";\\n    //add listener for total\\n    g.store.addListener(\\\"filterchange\\\", ijf.snippets.calculateTotalHours);\\n\\n    if (ijf.session.initialized) {\\n      //  ijf.main.controlSet[\\\"ijfContent_fld_2,2\\\"].control.items.items[0].update(\\\"Query: \\\" + queryParts[0].replace(\\\"jql=\\\", \\\"\\\"));\\n        //console.log(\\\"CUR session: \\\" + query);\\n        var cJql = queryParts[0].replace(\\\"jql=\\\", \\\"\\\");\\n        ijf.snippets.JqlFramework.setJQL(cJql);\\n\\n        //set the dropdown label\\n        if (ijf.session.filterMode == \\\"custom\\\") {\\n            var timeFrame = ijf.main.controlSet[\\\"ijfContent_fld_4,2\\\"].control.items.items[0];\\n            timeFrame.suspendEvents();\\n            timeFrame.setValue(\\\"Custom Dates\\\");\\n            timeFrame.resumeEvents();\\n        }\\n       else if(!ijf.session[\\\"ijfContent_fld_4,2\\\"])\\n       {\\n            var timeFrame = ijf.main.controlSet[\\\"ijfContent_fld_4,2\\\"].control.items.items[0];\\n            timeFrame.suspendEvents();\\n            timeFrame.setValue(\\\"Current Week\\\");\\n            timeFrame.resumeEvents();\\n        }\\n\\n       //set display\\n       if(ijf.snippets.JqlFramework.showingAdvanced)\\n       {\\n                ijf.snippets.JqlFramework.setToAdvanced();           \\n       }\\n       else\\n       {\\n                 //TODO:  dayne, this failes to set the basic JQL...however it should be parsable if it is set to basic rn.\\ntry\\n{\\n                if(ijf.snippets.JqlFramework.checkJQL(ijf.snippets.JqlFramework.comboObjRef))\\n                {\\n                        ijf.snippets.JqlFramework.setToBasic();\\n                }\\n                else\\n                {\\n                       ijf.snippets.JqlFramework.setToAdvanced();           \\n                };\\n\\n}\\ncatch(e)\\n{\\n                       ijf.snippets.JqlFramework.setToAdvanced();           \\n}\\n\\n       }\\n\\n\\n        ijf.snippets[\\\"calculateTotalHours\\\"]();\\n        return;\\n    }\\n\\n    //OK before looking for JQL, look for \\\"timeframe\\\" if it's there then switch and fire event on timeframe change\\n    if (window.location.search) {\\n        var testQuery = window.location.search;\\n        if (testQuery.indexOf(\\\"timeframe\\\") > -1) {\\n            testQuery = decodeURIComponent(testQuery);\\n            var testQueryParts = testQuery.split(\\\"&timeframe=\\\");\\n            var testQueryParts2 = testQueryParts[1].split(\\\"&\\\");\\n            var timeframe = testQueryParts2[0].trim();\\n            var timeFrameField = ijf.main.controlSet[\\\"ijfContent_fld_4,2\\\"].control.items.items[0];\\n            if (!ijf.session.initialized) {\\n                //if has jql, then must set the datasource query\\n                var jqlParts = testQueryParts[0].split(\\\"&jql=\\\");\\n                if (jqlParts.length > 1)\\n                    c.field.dataSource = jqlParts[1];\\n                ijf.session.initialized = true;\\n            }\\n            timeFrameField.setValue(timeframe);\\n            return;\\n        }\\n    }\\n\\n    //getting jql from url\\n\\n    if (window.location.search)\\n        query = decodeURIComponent(window.location.search.split(\\\"&jql=\\\")[1]);\\n    if ((!query) || (query == null) || (query == \\\"jql=\\\") || (query == \\\"undefined\\\"))\\n        query = \\\"created <= now() order by created desc\\\";\\n    //special filters:\\n    query = query.replace(\\\"filter=-1\\\", \\\"assignee=currentUser()\\\");\\n    query = query.replace(\\\"filter=-2\\\", \\\"reporter=currentUser()\\\");\\n\\n    //console.log(\\\"NEW session: \\\" + query);\\n\\n    if (query.length > 3) {\\n        //OK, now look for existing timeframe, if not there, set it to current week.\\n        var curJql = \\\"\\\";\\n        if (query.toLowerCase().indexOf(\\\"worklogdate\\\") < 0) {\\n\\n            //clear dropdown default and return\\n            var timeFrame = ijf.main.controlSet[\\\"ijfContent_fld_4,3\\\"].control.items.items[0];\\n            timeFrame.suspendEvents(false);\\n            timeFrame.setValue(\\\"1\\\");\\n            ijf.session[\\\"ijfContent_fld_4,3\\\"] = \\\"1\\\";\\n            //var reEnable = function(){ timeFrame.resumeEvents();};\\n            //window.setTimeout(reEnable,1000);\\n            timeFrame.resumeEvents();\\n            var fromDate = moment().startOf('isoWeek');\\n            var toDate = moment(new Date());\\n            var curJql = \\\" and worklogDate >= \\\" + fromDate.format('YYYY-M-D') + \\\" and worklogDate <= \\\" + toDate.format('YYYY-M-D');\\n\\n            //set date fields to \\n            var fromDateCtl = ijf.main.controlSet[\\\"ijfContent_fld_4,3\\\"].control.items.items[0];\\n            var toDateCtl = ijf.main.controlSet[\\\"ijfContent_fld_4,4\\\"].control.items.items[0];\\n            fromDateCtl.suspendEvents();\\n            fromDateCtl.setValue(new Date(fromDate));\\n            fromDateCtl.resumeEvents();\\n            toDateCtl.suspendEvents();\\n            toDateCtl.setValue(new Date(toDate));\\n            toDateCtl.resumeEvents();\\n\\n            ijf.session.wlFromDate = fromDate.format('YYYY-M-D');\\n            ijf.session.wlToDate = toDate.format('YYYY-M-D');\\n            //and their control session values\\n            ijf.session[\\\"ijfContent_fld_4,3\\\"]= fromDate.format('YYYY-M-D');\\n            ijf.session[\\\"ijfContent_fld_4,4\\\"] = toDate.format('YYYY-M-D');\\n\\n\\n\\n            timeFrameSuffix = \\\"&timeframe=1\\\";\\n            var timeFrame = ijf.main.controlSet[\\\"ijfContent_fld_4,2\\\"].control.items.items[0];\\n            timeFrame.suspendEvents();\\n            timeFrame.setValue(\\\"Current Week\\\");\\n            timeFrame.resumeEvents();\\n\\n        } else {\\n            //we are initializing and the dates come from the URL set to from URL\\n\\n\\n\\nvar splitJql = query.toLowerCase().split(\\\"worklogdate\\\");\\nif(splitJql.length>1)\\n{\\n    ijf.session.filterMode = \\\"custom\\\";\\n\\n    var tempToDate=moment(new Date());\\n    var tempFromDate=moment(new Date());\\n    for(var i=1;i<splitJql.length;i++){\\n\\n        var subSplit = splitJql[i].trim().split(\\\" \\\")\\n        //form is [\\\">=\\\", \\\"2021-5-3\\\", \\\"and\\\"]\\n        var operator = subSplit[0].trim();\\n\\n        if(operator == \\\">=\\\") tempFromDate= moment(subSplit[1].trim()); //.format(\\\"YYYY-MM-DD\\\");\\n        if(operator == \\\">\\\") tempFromDate= moment(subSplit[1].trim()); //.add('days',1); //.format(\\\"YYYY-MM-DD\\\");\\n        if(operator == \\\"<=\\\") tempToDate= moment(subSplit[1].trim()); //.format(\\\"YYYY-MM-DD\\\");\\n        if(operator == \\\"<\\\") tempToDate= moment(subSplit[1].trim()).subtract('days',1); //.format(\\\"YYYY-MM-DD\\\");\\n\\n    }\\n        ijf.session.wlFromDate = tempFromDate.format('YYYY-M-D');\\n        ijf.session.wlToDate = tempToDate.format('YYYY-M-D');\\n\\n            //set date fields to \\n            var fromDateCtl = ijf.main.controlSet[\\\"ijfContent_fld_4,3\\\"].control.items.items[0];\\n            var toDateCtl = ijf.main.controlSet[\\\"ijfContent_fld_4,4\\\"].control.items.items[0];\\n            fromDateCtl.suspendEvents();\\n            fromDateCtl.setValue(new Date(tempFromDate));\\n            fromDateCtl.resumeEvents();\\n            toDateCtl.suspendEvents();\\n            toDateCtl.setValue(new Date(tempToDate));\\n            toDateCtl.resumeEvents();\\n\\n}\\n\\n\\n            var timeFrame = ijf.main.controlSet[\\\"ijfContent_fld_4,2\\\"].control.items.items[0];\\n            timeFrame.suspendEvents();\\n            timeFrame.setValue(\\\"Custom Dates\\\");\\n            timeFrame.resumeEvents();\\n\\n        }\\n\\n        if (curJql) {\\n            //alter query to add clause\\n            var qParts = query.split(/order by/i);\\n            if (qParts.length > 1)\\n                query = qParts[0] + curJql + \\\" order by\\\" + qParts[1];\\n            else\\n                query = qParts[0] + curJql;\\n        }\\n\\n        var testForOrderBy = query.toLowerCase();\\n        if (testForOrderBy.indexOf(\\\"order by\\\") < 0)\\n            query = query + \\\" order by key desc\\\"\\n\\n        // history.replaceState({}, 'WLR', g_root + '/plugins/servlet/iforms?jwt='+getJwtToken()+'decorator=general&formId=IFT%20Worklog%20Report&jql=' + query + timeFrameSuffix);\\n\\n        var finalUrl = urlParts[0] + \\\"?jql=\\\" + query + \\\"&fields\\\" + queryParts[1];\\n        c.field.dataSource = query;\\n        g.store.proxy.setUrl(finalUrl);\\n    } else {\\n        query = queryParts[0];\\n    }\\n\\n    //set the dropdown label\\n    if (ijf.session.filterMode == \\\"custom\\\") {\\n        var timeFrame = ijf.main.controlSet[\\\"ijfContent_fld_4,2\\\"].control.items.items[0];\\n        timeFrame.suspendEvents();\\n        timeFrame.setValue(\\\"Custom Dates\\\");\\n        timeFrame.resumeEvents();\\n    }\\n\\n    if (!ijf.session.initialized)\\n        ijf.session.initialized = true;\\n   // ijf.main.controlSet[\\\"ijfContent_fld_2,2\\\"].control.items.items[0].update(\\\"Query: \\\" + query.replace(\\\"jql=\\\", \\\"\\\"));\\n\\n    ijf.snippets.JqlFramework.setJQL(query.replace(\\\"jql=\\\", \\\"\\\"));\\n\\n    ijf.snippets[\\\"calculateTotalHours\\\"]();\\n\\n}\\n\""},{"name":"navigateBack","snippet":"\"navigateBack = function()\\n{\\n    //this is where to unhood the JIRA check that something has changed.  not sure what it is now\\n    //ijf uses the following \\n\\n\\n//window.location.href = ijf.main.baseSys + '/issues/?jql=' + ijf.main.controlSet[\\\"ijfContent_fld_2,3\\\"].control.items.items[0].html.replace(\\\"Query: \\\",\\\"\\\")\\ndebugger;\\nwindow.location.href = ijf.main.baseSys + '/secure/QuickSearch.jspa?jql=' + ijf.main.controlSet[\\\"ijfContent_fld_2,3\\\"].control.items.items[0].html.replace(\\\"Query: \\\",\\\"\\\")\\n\\n\\n}\""},{"name":"createWorklogRows","snippet":"\"createWorklogRows = function(inData) {\\n    ijf.session.worklogReportData = [];\\n\\n   var isMineOnly=false;\\n   var myRecordsCtl = ijf.main.controlSet[\\\"ijfContent_fld_3,2\\\"].control.items.items[0];\\n   if(myRecordsCtl.getChecked()[0].boxLabel==\\\"My Logs\\\") isMineOnly=true;\\n\\n    ijf.snippets.openWorkLog = function(inId) {\\n        //TODO, this must be based on the customer settings from Atlassian\\n\\n        var win = window;\\n        var w = 1200;\\n        var h = 800;\\n        var y = win.top.outerHeight / 2 + win.top.screenY - (h / 2)\\n        var x = win.top.outerWidth / 2 + win.top.screenX - (w / 2)\\n\\n        window.open(ijf.main.baseSys + \\\"/secure/CreateWorklog!default.jspa?key=\\\" + inId + \\\"&jwt=\\\" + getJwtToken(), \\\"worklogwindow\\\", \\\"menubar=1,resizable=1,width=1200,height=800,top=\\\" + y + \\\",left=\\\" + x);\\n\\n    }\\n\\n    //create return array\\n    //iterate each issue, populate it's worklog entries \\n    //note, the list queries arbitrary fields and repurposes them for the worklog fields\\n\\n    var retArray = [];\\n\\n    //At this point you may or may not have worklog from and to.  If you do, you need to\\n    //filter these rows based on the dates selected\\n    var toDate = ijf.session.wlToDate;\\n    var fromDate = ijf.session.wlFromDate;\\n    if (toDate) {\\n        //filter out rows\\n        var tDate = moment(toDate);\\n        var fDate = moment(fromDate);\\n    }\\n\\n    inData.forEach(function(r) {\\n        //clear values we will write\\n        var i = 1;\\n\\n        var aUrl = \\\"/rest/api/2/issue/\\\" + r.iid + \\\"/worklog\\\";\\n        var rawList = ijfUtils.jiraApiSync('GET', aUrl, null);\\n\\n        if (rawList.worklogs.length > 0) {\\n            rawList.worklogs.forEach(function(wl) {\\n\\n              if((!isMineOnly) || (wl.author.accountId == ijf.main.currentUser.id) || (wl.author.key == ijf.main.currentUser.id))\\n              {\\n \\n                //filter out rows if tDate\\n                var testDate = moment(wl.started).format('YYYY-M-D');\\n                if (fDate)\\n                    if (moment(testDate) < fDate) {\\n                        return;\\n                        //ok\\n                    }\\n                if (tDate)\\n                    if (moment(testDate) > tDate) {\\n                        return;\\n                    }\\n\\n                var localCmt = wl.comment;\\n                if (!localCmt)\\n                    localCmt = \\\"no comment\\\";\\n                if (localCmt)\\n                    localCmt = localCmt.replace(/\\\\n/g, \\\"<br>\\\");\\n\\n                var localCmtShrt = wl.comment;\\n                if (!localCmtShrt) {\\n                    localCmtShrt = \\\"_\\\";\\n                }\\n\\n                try {\\n                    var sprint = r.customfield_10000.split(\\\"name=\\\")[1].split(\\\",\\\")[0];\\n                } catch (e) {\\n                    var sprint = \\\"\\\";\\n                }\\n\\n               var urlBase  = \\\"/browse/\\\";\\n               if(!ijf.snippets.JqlFramework.isServerRuntime())  urlBase =ijf.main.baseSys + urlBase;\\n\\n                var wlRow = {\\n                    \\\"key\\\": \\\"<a title='Click to edit Issue' href='\\\" + urlBase + r.key + \\\"' target='_blank'>\\\" + r.key + \\\" (\\\" + i + \\\")</a>\\\",\\n                    \\\"project\\\": r.project,\\n                    \\\"created\\\": r.created,\\n                    \\\"summary\\\": r.summary,\\n                    \\\"status\\\": r.status,\\n                    //\\\"description\\\": \\\"<a href='JAVASCRIPT:ijf.snippets.popFrameworkWlr.onCellClick(\\\\\\\"\\\" + r.key + \\\" (\\\" + i + \\\")\\\\\\\")'>\\\" + localCmtShrt + \\\"</a>\\\",\\n                    \\\"description\\\":  localCmtShrt,\\n                    \\\"duedate\\\": wl.started,\\n                    \\\"creator\\\": wl.author.displayName,\\n                    \\\"issuetype\\\": wl.timeSpent,\\n                    \\\"timeestimate\\\": (wl.timeSpentSeconds / 3600).toFixed(2),\\n                    \\\"reporter\\\": localCmt,\\n                    \\\"customfield_10000\\\": sprint,\\n                    \\\"iid\\\": r.key + \\\" (\\\" + i + \\\")\\\",\\n                    \\\"resolution\\\": \\\"na\\\",\\n                    \\\"wlRaw\\\": wl,\\n                    \\\"wlStarted\\\": wl.started,\\n                    \\\"wlTimeSpent\\\": wl.timeSpent,\\n                    \\\"wlHours\\\": (wl.timeSpentSeconds / 3600).toFixed(2),\\n                    \\\"wlCreator\\\": wl.author.displayName,\\n                    \\\"wlCreated\\\": wl.created,\\n                    \\\"wlComment\\\": wl.comment,\\n                    \\\"keyOg\\\": r.key,\\n                };\\n                i++;\\n                retArray.push(wlRow);\\n                ijf.session.worklogReportData[ijf.snippets.popFrameworkWlr.cleanRowId(wlRow.iid)] = wlRow;\\n             }\\n\\n            });\\n        } else {\\n            //clear log vals for this issue.\\n            r.description = \\\"\\\";\\n            r.duedate = \\\"\\\";\\n            r.creator = \\\"\\\";\\n            r.issuetype = \\\"\\\";\\n            r.timeestimate = 0;\\n            r.iid = \\\"<a href='/browse/\\\" + r.iid + \\\"' target='blank'>\\\" + r.iid + \\\"</a>\\\";\\n            //retArray.push(r);\\n        }\\n\\n    });\\n\\n    return retArray;\\n}\\n\""},{"name":"setUserFilter","snippet":"\"\\nsetUserFilter=function(f,n,o)\\n{\\n    //set an ITEMLIST session variable that will alter the jql of an itemlist\\n    //syntax:    {\\\"set\\\":[{\\\"status\\\":\\\"Open\\\"}],\\\"remove\\\":[\\\"status\\\",\\\"project\\\"]]}\\n\\n  var filterObj = {};\\n  switch(n[\\\"3,2\\\"]) //this is the cell of the radio\\n  {\\n       case 1:\\n             filterObj = {\\\"remove\\\": [\\\"worklogAuthor\\\"]};\\n       break;\\n\\n       case 2:\\n             filterObj = {\\\"set\\\":[{\\\"worklogAuthor \\\":\\\"currentUser()\\\"}]};\\n       break;\\n\\n   }\\n\\n   //set session var and repaint,  ijfContent_fld_6,2=itemlist\\n   ijf.session[\\\"ijfContent_fld_6,2\\\"]=filterObj;\\n   \\n   //with radio, cannot just reset the form because the group needs to complete...set timeout for +200ms\\n   var resetForm = function(){\\n        ijf.main.renderForm(\\\"ijfContent\\\", \\\"IFT Worklog Report\\\", false, ijf.currentItem);\\n        ijfUtils.hideProgress();\\n   };\\n    \\n   ijfUtils.showProgress();\\n   window.setTimeout(resetForm,10);\\n   \\n   return true;\\n} \""},{"name":"reloadForm","snippet":"\"reloadForm=function()\\n{\\nijfUtils.showProgress();\\nvar doIt = function(){\\nijf.main.resetForm();\\nijfUtils.hideProgress();\\n}\\nwindow.setTimeout(doIt,50);\\n\\n}\""},{"name":"onNavigateToWorklogReport","snippet":"\"onNavigateToWorklogReport=function()\\n{\\n     var reload = function(){\\n\\t\\twindow.g_formId= \\\"IFT Worklog Report\\\";\\n                ijf.main.renderForm(\\\"ijfContent\\\",window.g_formId, false, ijf.currentItem);\\n                ijfUtils.hideProgress();\\n     }\\n     ijf.snippets.popFramework.closeAllPops();\\n     ijfUtils.showProgress();\\n     window.setTimeout(reload,10);\\n     \\n}\""},{"name":"onNavigateToMyWorklogs","snippet":"\"onNavigateToMyWorklogs=function()\\n{\\n     var reload = function(){\\n\\t\\twindow.g_formId= \\\"IFT My Worklogs\\\";\\n                ijf.main.renderForm(\\\"ijfContent\\\",window.g_formId, false, ijf.currentItem);\\n                ijfUtils.hideProgress();\\n     }\\n     ijf.snippets.popFrameworkWlr.closeAllPops();\\n     ijfUtils.showProgress();\\n     window.setTimeout(reload,100);\\n     \\n}\""},{"name":"beforeLoadMyWorklogs","snippet":"\"beforeLoadMyWorklogs=function()\\n{\\n   ijf.snippets.beforeLoadSetSystem();\\n   //ijf.main.baseSys = \\\"https://idealfed.atlassian.net\\\";\\n\\n  //set the current week for the my worklogs\\n  //look to reset fromDate and toDates to moments from worklog report overlap\\n\\n  if(typeof(ijf.session.fromDate)==\\\"string\\\")\\n  {\\n       ijf.session.myWorkInitialized=false;\\n  }\\n\\n  if(!ijf.session.myWorkInitialized)\\n  {\\n      if(!ijf.session.periodMode) ijf.session.periodMode= 'week';\\n\\n      switch(ijf.session.periodMode)\\n      {\\n           case \\\"week\\\":\\n              ijf.session.periodMode= 'week';\\n              ijf.session.fromDate  = moment().startOf('isoWeek');\\n              ijf.session.toDate = moment().endOf('isoWeek')\\n            break;\\n           case \\\"month\\\":\\n              ijf.session.periodMode= 'month';\\n              ijf.session.fromDate  = moment().startOf('month');\\n              ijf.session.toDate = moment().endOf('month')\\n            break;\\n           case \\\"4 weeks\\\":\\n              ijf.session.periodMode= '4 weeks';\\n              ijf.session.fromDate  = moment(new Date()).subtract('day',28);\\n              ijf.session.toDate = moment(new Date());\\n            break;\\n\\n           default:\\n              ijf.session.periodMode= 'week';\\n              ijf.session.fromDate  = moment().startOf('isoWeek');\\n              ijf.session.toDate = moment().endOf('isoWeek')\\n           break;\\n      }\\n   }\\n  ijf.session.myWorkInitialized=true;\\n\\n}\""},{"name":"enableFormsAdmin","snippet":"\"enableFormsAdmin= function()\\n{\\n     var t =document.getElementById(\\\"ijfAdmin1\\\");\\n     t.style.float=\\\"left\\\"\\n     t.style.marginRight=\\\"40px\\\";\\n     t.style.color=\\\"black\\\";\\n//     t.innerHtml=\\\"Test this Link: <a href='javacript:window.location.href=getIjfRoot() + '/splash?jwt=\\\"+ getJwtToken() + \\\"' alt='Forms Home'>?</a>\\\";   \\n\\nt.innerHTML=\\\"Forms Admin: <a href='\\\"+getIjfRoot()+\\\"/splash?jwt=\\\"+ getJwtToken() +\\\"'>click me</a>\\\";\\n\\n}\""},{"name":"closePopsWlr","snippet":"\"closePopsWlr=function()\\n{\\n     ijf.snippets.popFrameworkWlr.closeAllPops();\\n}\""},{"name":"afterRenderJqlField","snippet":"\"afterRenderJqlField=function()\\n{\\n     ijf.snippets.JqlFramework.buildAdvancedJQL();\\n     ijf.snippets.JqlFramework.buildBasicJQL();\\n\\n     //set based on session....\\n     if(ijf.snippets.JqlFramework.showingAdvanced===false) \\n     {\\n         ijf.snippets.JqlFramework.setToBasic();\\n     }\\n     else\\n     {\\n          ijf.snippets.JqlFramework.setToAdvanced();\\n     }\\n}\\n\""},{"name":"style","snippet":"\"body {\\n    background-color:white !important;\\n}\\n\\n\\n.x-panel-header-default-framed{\\n    font-size: 13px;\\n    border: 0px solid #101010;\\n}\\n\\n.x-panel-header-default-framed-top{\\n    background-color: #101010;\\n}\\n\\n.x-panel-default-framed {\\n    border:none;\\n    background-color: #ccc;\\n}\\n\\n.x-panel-header-default {\\n    border:none;\\n    background-color: #101010;\\n}\\n\\n\\n.x-btn-default-small\\n{\\n   background-image: -webkit-linear-gradient(top, #0052CC,#0052CC 50%,#0052CC 51%, #0052CC);\\n   border-color: #0052CC;\\n}\\n\\n.x-btn-default-small-focus\\n{\\n   background-image: -webkit-linear-gradient(top, #0052CC,#0052CC 50%,#0052CC 51%, #0052CC) !important;\\n   border-color: #0052CC !important;\\n}\\n\\n.x-btn-over\\n{\\n   background-image: -webkit-linear-gradient(top,#003D99,#003D99 50%,#003D99 51%,#003D99) !important;\\n   border-color: #003D99 !important;\\n}\\n\""},{"name":"afterRenderWorklogsGrid","snippet":"\"afterRenderWorklogsGrid = function(f,c)\\n{\\n\\nvar t = f.items.items[0];\\n\\n//attempt to change layout....\\n\\n//t.setHeight(null);\\n//f.setHeight(Ext.getBody().getViewSize().height - 170);\\n//f.height = window.innerHeight-610;\\n//t.height = window.innerHeight-600; //310; //240 200;\\n\\nf.setHeight(window.innerHeight-310);\\n\\n}\""},{}],"forms":[{"id":"23","testIssue":"","formType":"List","issueType":"Task","formAnon":"false","name":"IFT My Worklogs","fields":"\"[{\\\"beforeRender\\\":\\\"beforeRenderMyWorklogGrid\\\",\\\"afterRender\\\":\\\"afterRenderMyWorklogsGrid\\\",\\\"formCell\\\":\\\"5,2\\\",\\\"caption\\\":\\\"My Worklogs\\\",\\\"controlType\\\":\\\"GRID\\\",\\\"dataSource\\\":\\\"Worklog Month\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"border:solid #A9A9A9 1px;border-radius:3px;width:100% !important;margin-top:-20px\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"width100% !important\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"tableHeaders\\\":\\\"\\\",\\\"tableWidths\\\":\\\"100,350,150,100,100,100,100,100,100,100,100,100\\\",\\\"event\\\":\\\"\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"[{ \\\\\\\"fieldLabel\\\\\\\": \\\\\\\"Total\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\\\"Grand Total\\\\\\\", \\\\\\\"dock\\\\\\\": \\\\\\\"bottom\\\\\\\", \\\\\\\"ui\\\\\\\": \\\\\\\"footer\\\\\\\", \\\\\\\"ftype\\\\\\\": \\\\\\\"summary\\\\\\\" }]\\\",\\\"fieldStyle\\\":\\\"height:600px;width:100% !important;freezecols:1,2,3\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"afterRender\\\":\\\"\\\",\\\"formCell\\\":\\\"6,3\\\",\\\"caption\\\":\\\"from\\\",\\\"controlType\\\":\\\"datebox\\\",\\\"dataSource\\\":\\\"session\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"width:190px;hidden:true\\\",\\\"labelStyle\\\":\\\"width:20% !important\\\",\\\"panelStyle\\\":\\\"width:100% !important; float:right;\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"tableWidths\\\":\\\"\\\",\\\"event\\\":\\\"\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"2021-1-1\\\",\\\"fieldStyle\\\":\\\"width:80% !important;\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"afterRender\\\":\\\"\\\",\\\"formCell\\\":\\\"6,6\\\",\\\"caption\\\":\\\"to\\\",\\\"controlType\\\":\\\"datebox\\\",\\\"dataSource\\\":\\\"session\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"width:190px;hidden:true\\\",\\\"labelStyle\\\":\\\"width:20% !important\\\",\\\"panelStyle\\\":\\\"width:100% !important; float:right;\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"event\\\":\\\"\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"2021-1-1\\\",\\\"fieldStyle\\\":\\\"width:80% !important\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"beforeRender\\\":\\\"\\\",\\\"afterRender\\\":\\\"\\\",\\\"formCell\\\":\\\"2,3\\\",\\\"caption\\\":\\\"none\\\",\\\"controlType\\\":\\\"muiSelect\\\",\\\"dataSource\\\":\\\"session\\\",\\\"dataReference\\\":\\\"[{\\\\\\\"id\\\\\\\":\\\\\\\"week\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"week\\\\\\\"},{\\\\\\\"id\\\\\\\":\\\\\\\"month\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"month\\\\\\\"},{\\\\\\\"id\\\\\\\":\\\\\\\"4 weeks\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"4 weeks\\\\\\\"}]\\\",\\\"style\\\":\\\"{\\\\\\\"width\\\\\\\":\\\\\\\"140px\\\\\\\",\\\\\\\"float\\\\\\\":\\\\\\\"left\\\\\\\",\\\\\\\"margin-left\\\\\\\":\\\\\\\"20px\\\\\\\"}\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"{\\\\\\\"width\\\\\\\":\\\\\\\"140px\\\\\\\"}\\\",\\\"referenceFilter\\\":\\\"week\\\",\\\"tableWidths\\\":\\\"\\\",\\\"event\\\":\\\"onChangeMode\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"week\\\",\\\"fieldStyle\\\":\\\"{\\\\\\\"width\\\\\\\":\\\\\\\"140px\\\\\\\",\\\\\\\"text-align\\\\\\\":\\\\\\\"center\\\\\\\"}\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"beforeRender\\\":\\\"\\\",\\\"formCell\\\":\\\"2,6\\\",\\\"caption\\\":\\\"Close all Popups\\\",\\\"controlType\\\":\\\"muiButton\\\",\\\"dataSource\\\":\\\"\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"{\\\\\\\"font-size\\\\\\\":\\\\\\\"12px\\\\\\\",\\\\\\\"width\\\\\\\":\\\\\\\"200px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#101010\\\\\\\"}\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"tableWidths\\\":\\\"\\\",\\\"event\\\":\\\"closePops\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"{\\\\\\\"variant\\\\\\\":\\\\\\\"outlined\\\\\\\"}\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"2,7\\\",\\\"caption\\\":\\\"Reload Form\\\",\\\"controlType\\\":\\\"muiButton\\\",\\\"dataSource\\\":\\\"\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"{\\\\\\\"font-size\\\\\\\":\\\\\\\"12px\\\\\\\",\\\\\\\"width\\\\\\\":\\\\\\\"200px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#101010\\\\\\\"}\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"event\\\":\\\"reloadForm\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"{\\\\\\\"variant\\\\\\\":\\\\\\\"outlined\\\\\\\"}\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"2,2\\\",\\\"caption\\\":\\\"Previous\\\",\\\"controlType\\\":\\\"muiButton\\\",\\\"dataSource\\\":\\\"\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"{\\\\\\\"font-size\\\\\\\":\\\\\\\"12px\\\\\\\",\\\\\\\"width\\\\\\\":\\\\\\\"100px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#101010\\\\\\\",\\\\\\\"margin-left\\\\\\\":\\\\\\\"15px\\\\\\\"}\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"event\\\":\\\"onMovePreviousPeriod\\\",\\\"toolTip\\\":\\\"Previous Period\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"{\\\\\\\"variant\\\\\\\":\\\\\\\"outlined\\\\\\\"}\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"2,4\\\",\\\"caption\\\":\\\"Next\\\",\\\"controlType\\\":\\\"muiButton\\\",\\\"dataSource\\\":\\\"\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"{\\\\\\\"font-size\\\\\\\":\\\\\\\"12px\\\\\\\",\\\\\\\"width\\\\\\\":\\\\\\\"90px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"#101010\\\\\\\",\\\\\\\"margin-left\\\\\\\":\\\\\\\"-14px\\\\\\\"}\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"event\\\":\\\"onMoveNextPeriod\\\",\\\"toolTip\\\":\\\"Next Period\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"{\\\\\\\"variant\\\\\\\":\\\\\\\"outlined\\\\\\\"}\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"1,10\\\",\\\"caption\\\":\\\"Worklog Report\\\",\\\"controlType\\\":\\\"muiButton\\\",\\\"dataSource\\\":\\\"\\\",\\\"style\\\":\\\"{\\\\\\\"padding-top\\\\\\\":\\\\\\\"10px\\\\\\\"}\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"{\\\\\\\"float\\\\\\\":\\\\\\\"right\\\\\\\",\\\\\\\"width\\\\\\\":\\\\\\\"180px\\\\\\\",\\\\\\\"color\\\\\\\":\\\\\\\"white\\\\\\\",\\\\\\\"background\\\\\\\":\\\\\\\"#0052CC\\\\\\\",\\\\\\\"border-radius\\\\\\\":\\\\\\\"5px\\\\\\\",\\\\\\\"font\\\\\\\":\\\\\\\"Arial\\\\\\\",\\\\\\\"border-style\\\\\\\":\\\\\\\"outset\\\\\\\",\\\\\\\"border-color\\\\\\\":\\\\\\\"-internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133))\\\\\\\"}\\\",\\\"event\\\":\\\"onNavigateToWorklogReport\\\",\\\"toolTip\\\":\\\"Worklog Report\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"1,2\\\",\\\"caption\\\":\\\"\\\",\\\"controlType\\\":\\\"html\\\",\\\"dataSource\\\":\\\" #{snippet:getAppBarTitle} <span style=\\\\\\\"font-size:12pt\\\\\\\">worklogs for  #{snippet:getDateRange}</span>\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"color:black;font-size:18pt;font-family:verdana;text-align:left;background:transparent;padding-top: 15px;padding-bottom:10px\\\",\\\"event\\\":\\\"\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"}]\"","formSettings":"\"[{\\\"name\\\":\\\"headerLeft\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"headerCenter\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"headerRight\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"rows\\\",\\\"value\\\":\\\"7\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"columns\\\",\\\"value\\\":\\\"12\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"columnSpans\\\",\\\"value\\\":\\\"5,2,10;1,2,8\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"outerContainerStyle\\\",\\\"value\\\":\\\"width:98%; margin: 0 auto;\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"outerTableStyle\\\",\\\"value\\\":\\\"width:100%\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"permissions\\\",\\\"value\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"beforeLoad\\\",\\\"value\\\":\\\"beforeLoadMyWorklogs\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"onLoad\\\",\\\"value\\\":\\\"onLoadMyWorklogs\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"columnWidths\\\",\\\"value\\\":\\\"1:5px;2:90px; 3:170px;4:90px;5:10px;6:200px;7:10px;8:200px;9:10px;10:700px;11:5:100%;12:10px;\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"rowSpans\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"tabTitle\\\",\\\"value\\\":\\\"JIRA Worklogs\\\",\\\"comment\\\":\\\"\\\"}]\""},{"id":"24","testIssue":"","formType":"List","issueType":"Task","formAnon":"false","name":"IFT Worklog Report","fields":"\"[{\\\"beforeRender\\\":\\\"beforeRenderGrid\\\",\\\"afterRender\\\":\\\"afterRenderWorklogsGrid\\\",\\\"formCell\\\":\\\"6,2\\\",\\\"caption\\\":\\\"\\\",\\\"controlType\\\":\\\"itemlist\\\",\\\"dataSource\\\":\\\"created < now() order by key desc\\\",\\\"dataReference\\\":\\\"key,project,created,summary,status,description,duedate, creator, Issue Type,timeestimate,customfield_10000,resolution, Reporter\\\",\\\"style\\\":\\\"border:solid #C6C6C6 1px;border-radius:5px;width:100% !important\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"height:750px;width100% !important\\\",\\\"referenceFilter\\\":\\\"createWorklogRows\\\",\\\"tableHeaders\\\":\\\"Key,Project,Issue Date,Summary, Status, Log Comment, Started, Author, TimeSpent,Hours, Sprint, Log Work, Reporter\\\",\\\"tableColumns\\\":\\\"\\\",\\\"tableWidths\\\":\\\"115,100,90,50%,130,50%,90,130,90,90,0,0,0\\\",\\\"tableDblClick\\\":\\\"\\\",\\\"event\\\":\\\"\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"\\\",\\\"renderIf\\\":\\\"\\\",\\\"persistInItem\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"paging:50;width:100% !important\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"beforeRender\\\":\\\"\\\",\\\"formCell\\\":\\\"3,2\\\",\\\"caption\\\":\\\"Filter\\\",\\\"controlType\\\":\\\"radio\\\",\\\"dataSource\\\":\\\"session\\\",\\\"dataReference\\\":\\\"[{\\\\\\\"id\\\\\\\":1,\\\\\\\"value\\\\\\\":\\\\\\\"Query Logs\\\\\\\"},{\\\\\\\"id\\\\\\\":2,\\\\\\\"value\\\\\\\":\\\\\\\"My Logs\\\\\\\"}]\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"tableHeaders\\\":\\\"\\\",\\\"tableWidths\\\":\\\"\\\",\\\"event\\\":\\\"setUserFilter\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"1\\\",\\\"fieldStyle\\\":\\\"columns:2\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"1,5\\\",\\\"caption\\\":\\\"Export to CSV\\\",\\\"controlType\\\":\\\"button\\\",\\\"dataSource\\\":\\\"\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"padding-top:10px;background:transparent\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"\\\",\\\"event\\\":\\\"saveAsCsv\\\",\\\"toolTip\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"4,6\\\",\\\"caption\\\":\\\"\\\",\\\"controlType\\\":\\\"html\\\",\\\"dataSource\\\":\\\"Total Hours:\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"color:darkblue;background:transparent;font-weight:bold\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"tableHeaders\\\":\\\"\\\",\\\"tableWidths\\\":\\\"\\\",\\\"event\\\":\\\"\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"afterRender\\\":\\\"afterRenderJqlField\\\",\\\"formCell\\\":\\\"2,2\\\",\\\"caption\\\":\\\"\\\",\\\"controlType\\\":\\\"html\\\",\\\"dataSource\\\":\\\"<div style='width:100%;height:35px'><div id='JQLTMainDiv1' style='width:100%;'></div><div id='JQLTMainDiv2' style='width:100%;'></div></div>\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"tableHeaders\\\":\\\"\\\",\\\"tableWidths\\\":\\\"\\\",\\\"event\\\":\\\"\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"4,3\\\",\\\"caption\\\":\\\"Worklog From:\\\",\\\"controlType\\\":\\\"datebox\\\",\\\"dataSource\\\":\\\"session\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"width:90px\\\",\\\"panelStyle\\\":\\\"width:200px\\\",\\\"event\\\":\\\"setWorklogDateFilter\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"width:85px\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"4,4\\\",\\\"caption\\\":\\\"Worklog To:\\\",\\\"controlType\\\":\\\"datebox\\\",\\\"dataSource\\\":\\\"session\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"width:90px\\\",\\\"panelStyle\\\":\\\"width:200px\\\",\\\"referenceFilter\\\":\\\"\\\",\\\"tableHeaders\\\":\\\"\\\",\\\"tableWidths\\\":\\\"\\\",\\\"event\\\":\\\"setWorklogDateFilter\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"width:85px\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"4,2\\\",\\\"caption\\\":\\\"Timeframe\\\",\\\"controlType\\\":\\\"dropdown\\\",\\\"dataSource\\\":\\\"session\\\",\\\"dataReference\\\":\\\"[{ \\\\t\\\\\\\"id\\\\\\\": \\\\\\\"0\\\\\\\", \\\\t\\\\\\\"value\\\\\\\": \\\\\\\"Today\\\\\\\" },{ \\\\t\\\\\\\"id\\\\\\\": \\\\\\\"7\\\\\\\", \\\\t\\\\\\\"value\\\\\\\": \\\\\\\"Last 7 Days\\\\\\\" }, { \\\\t\\\\\\\"id\\\\\\\": \\\\\\\"2\\\\\\\", \\\\t\\\\\\\"value\\\\\\\": \\\\\\\"Last Week\\\\\\\" }, { \\\\t\\\\\\\"id\\\\\\\": \\\\\\\"4\\\\\\\", \\\\t\\\\\\\"value\\\\\\\": \\\\\\\"Last Month\\\\\\\" }, { \\\\t\\\\\\\"id\\\\\\\": \\\\\\\"6\\\\\\\", \\\\t\\\\\\\"value\\\\\\\": \\\\\\\"Last Year\\\\\\\" }, { \\\\t\\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\", \\\\t\\\\\\\"value\\\\\\\": \\\\\\\"Current Week\\\\\\\" }, { \\\\t\\\\\\\"id\\\\\\\": \\\\\\\"3\\\\\\\", \\\\t\\\\\\\"value\\\\\\\": \\\\\\\"Current Month\\\\\\\" }, { \\\\t\\\\\\\"id\\\\\\\": \\\\\\\"5\\\\\\\", \\\\t\\\\\\\"value\\\\\\\": \\\\\\\"Current Year\\\\\\\" }, { \\\\t\\\\\\\"id\\\\\\\": \\\\\\\"8\\\\\\\", \\\\t\\\\\\\"value\\\\\\\": \\\\\\\"All\\\\\\\" }]\\\",\\\"style\\\":\\\"limit:false;background:transparent;\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"width:240px\\\",\\\"event\\\":\\\"onChangeTimeframe\\\",\\\"toolTip\\\":\\\"\\\",\\\"dataReference2\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"1,6\\\",\\\"caption\\\":\\\"Refresh\\\",\\\"controlType\\\":\\\"button\\\",\\\"dataSource\\\":\\\"New Cell\\\",\\\"style\\\":\\\"padding-top:10px;background:transparent\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"\\\",\\\"event\\\":\\\"onRefresh\\\",\\\"toolTip\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"1,2\\\",\\\"caption\\\":\\\"\\\",\\\"controlType\\\":\\\"html\\\",\\\"dataSource\\\":\\\"Worklog Entries\\\",\\\"style\\\":\\\"\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"color:black;font-size:22pt;font-family:verdana;text-align:left;background:transparent;padding-top: 15px;padding-bottom:10px\\\",\\\"event\\\":\\\"\\\",\\\"toolTip\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"1,4\\\",\\\"caption\\\":\\\"My Worklogs\\\",\\\"controlType\\\":\\\"button\\\",\\\"dataSource\\\":\\\"\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"padding-top:10px;background:transparent\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"\\\",\\\"event\\\":\\\"onNavigateToMyWorklogs\\\",\\\"toolTip\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"},{\\\"formCell\\\":\\\"1,3\\\",\\\"caption\\\":\\\"Close All Popups\\\",\\\"controlType\\\":\\\"button\\\",\\\"dataSource\\\":\\\"\\\",\\\"dataReference\\\":\\\"\\\",\\\"style\\\":\\\"padding-top:10px;background:transparent\\\",\\\"labelStyle\\\":\\\"\\\",\\\"panelStyle\\\":\\\"\\\",\\\"event\\\":\\\"closePopsWlr\\\",\\\"toolTip\\\":\\\"\\\",\\\"fieldStyle\\\":\\\"\\\",\\\"rawPermissions\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\"}]\"","formSettings":"\"[{\\\"name\\\":\\\"rows\\\",\\\"value\\\":\\\"7\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"columns\\\",\\\"value\\\":\\\"7\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"outerContainerStyle\\\",\\\"value\\\":\\\"width:95%; margin: 0 auto;\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"headerLeft\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"headerCenter\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"headerRight\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"outerTableStyle\\\",\\\"value\\\":\\\"width:100%;\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"tabTitle\\\",\\\"value\\\":\\\"Worklog Report\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"title_style\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"columnWidths\\\",\\\"value\\\":\\\"1:2%;2:20%;3:20%;4:20%;5:23%;6:10%;7:2%\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"permissions\\\",\\\"value\\\":\\\"{\\\\\\\"enabled\\\\\\\":false,\\\\\\\"states\\\\\\\":{}}\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"columnSpans\\\",\\\"value\\\":\\\"5,2,5;3,2,2;2,2,4;6,2,5\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"rowSpans\\\",\\\"value\\\":\\\"\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"onLoad\\\",\\\"value\\\":\\\"onLoadWorklogReport\\\",\\\"comment\\\":\\\"\\\"},{\\\"name\\\":\\\"beforeLoad\\\",\\\"value\\\":\\\"beforeLoadSetSystem\\\",\\\"comment\\\":\\\"\\\"}]\""}]}],"customTypes":[{"customTypeId":"11","name":"Worklog Month","description":"na","customType":"GRID","fieldName":"session","settings":"\"[{\\\"columnName\\\":\\\"Key\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"textfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":10,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-35\\\"},{\\\"columnName\\\":\\\"Summary\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"textfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":20,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-36\\\"},{\\\"columnName\\\":\\\"Hours\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":30,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-37\\\"},{\\\"columnName\\\":\\\"1st\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":40,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-38\\\"},{\\\"columnName\\\":\\\"2nd\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":50,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-39\\\"},{\\\"columnName\\\":\\\"3rd\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":60,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-40\\\"},{\\\"columnName\\\":\\\"4th\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":70,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-41\\\"},{\\\"columnName\\\":\\\"5th\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":80,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-42\\\"},{\\\"columnName\\\":\\\"6th\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":90,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-43\\\"},{\\\"columnName\\\":\\\"7th\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":100,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-44\\\"},{\\\"columnName\\\":\\\"8\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":110,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-45\\\"},{\\\"columnName\\\":\\\"9\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":120,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-46\\\"},{\\\"columnName\\\":\\\"10\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":130,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-47\\\"},{\\\"columnName\\\":\\\"11\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":140,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-48\\\"},{\\\"columnName\\\":\\\"12\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":150,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-49\\\"},{\\\"columnName\\\":\\\"13\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":160,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-50\\\"},{\\\"columnName\\\":\\\"14\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":170,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-51\\\"},{\\\"columnName\\\":\\\"15\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":180,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-52\\\"},{\\\"columnName\\\":\\\"16\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":190,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-53\\\"},{\\\"columnName\\\":\\\"17\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":200,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-54\\\"},{\\\"columnName\\\":\\\"18\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":210,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-55\\\"},{\\\"columnName\\\":\\\"19\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":220,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-56\\\"},{\\\"columnName\\\":\\\"20\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":230,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-57\\\"},{\\\"columnName\\\":\\\"21\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":240,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-58\\\"},{\\\"columnName\\\":\\\"22\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":250,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-59\\\"},{\\\"columnName\\\":\\\"23\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":260,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-60\\\"},{\\\"columnName\\\":\\\"24\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":270,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-61\\\"},{\\\"columnName\\\":\\\"25\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":280,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-62\\\"},{\\\"columnName\\\":\\\"26\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":290,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-63\\\"},{\\\"columnName\\\":\\\"27\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":300,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-64\\\"},{\\\"columnName\\\":\\\"28\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":310,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-65\\\"},{\\\"columnName\\\":\\\"29\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":320,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-66\\\"},{\\\"columnName\\\":\\\"30\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":330,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-67\\\"},{\\\"columnName\\\":\\\"31\\\",\\\"columnType\\\":\\\"\\\",\\\"controlType\\\":\\\"numberfield\\\",\\\"default\\\":\\\"\\\",\\\"required\\\":\\\"\\\",\\\"order\\\":340,\\\"format\\\":\\\"\\\",\\\"regEx\\\":\\\"\\\",\\\"reference\\\":\\\"\\\",\\\"regExMess\\\":\\\"\\\",\\\"id\\\":\\\"typeGridSpecsArray-68\\\"}]\""}]}